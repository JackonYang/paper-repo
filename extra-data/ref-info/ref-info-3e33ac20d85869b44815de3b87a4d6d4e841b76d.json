{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145470231"
                        ],
                        "name": "Kwan Y. Wong",
                        "slug": "Kwan-Y.-Wong",
                        "structuredName": {
                            "firstName": "Kwan",
                            "lastName": "Wong",
                            "middleNames": [
                                "Y."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kwan Y. Wong"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34896449"
                        ],
                        "name": "R. Casey",
                        "slug": "R.-Casey",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Casey",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Casey"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1880661"
                        ],
                        "name": "F. Wahl",
                        "slug": "F.-Wahl",
                        "structuredName": {
                            "firstName": "Friedrich",
                            "lastName": "Wahl",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Wahl"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 15921038,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "7abca302c74d2f5adfd323a28e26d40b019df2b5",
            "isKey": false,
            "numCitedBy": 594,
            "numCiting": 16,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper outlines the requirements and components for a proposed Document Analysis System, which assists a user in encoding printed documents for computer processing. Several critical functions have been investigated and the technical approaches are discussed. The first is the segmentation and classification of digitized printed documents into regions of text and images. A nonlinear, run-length smoothing algorithm has been used for this purpose. By using the regular features of text lines, a linear adaptive classification scheme discriminates text regions from others. The second technique studied is an adaptive approach to the recognition of the hundreds of font styles and sizes that can occur on printed documents. A preclassifier is constructed during the input process and used to speed up a well-known pattern-matching method for clustering characters from an arbitrary print source into a small sample of prototypes. Experimental results are included."
            },
            "slug": "Document-Analysis-System-Wong-Casey",
            "title": {
                "fragments": [],
                "text": "Document Analysis System"
            },
            "tldr": {
                "abstractSimilarityScore": 92,
                "text": "The requirements and components for a proposed Document Analysis System, which assists a user in encoding printed documents for computer processing, are outlined and several critical functions have been investigated and the technical approaches are discussed."
            },
            "venue": {
                "fragments": [],
                "text": "IBM J. Res. Dev."
            },
            "year": 1982
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "31793895"
                        ],
                        "name": "R. Narasimhan",
                        "slug": "R.-Narasimhan",
                        "structuredName": {
                            "firstName": "R.",
                            "lastName": "Narasimhan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Narasimhan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [],
            "corpusId": 37226638,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "890718e0e13d15afdf13d0abd76b1bd3e48cf48b",
            "isKey": false,
            "numCitedBy": 116,
            "numCiting": 5,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Labeling-Schemata-and-Synctactic-Descriptions-of-Narasimhan",
            "title": {
                "fragments": [],
                "text": "Labeling Schemata and Synctactic Descriptions of Pictures"
            },
            "venue": {
                "fragments": [],
                "text": "Inf. Control."
            },
            "year": 1964
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3631473"
                        ],
                        "name": "M. Levine",
                        "slug": "M.-Levine",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Levine",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Levine"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2060371457"
                        ],
                        "name": "S. Shaheen",
                        "slug": "S.-Shaheen",
                        "structuredName": {
                            "firstName": "Samir",
                            "lastName": "Shaheen",
                            "middleNames": [
                                "I."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Shaheen"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 6063896,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2c80bb994158431ef2a29032174b685a8a5a3f50",
            "isKey": false,
            "numCitedBy": 107,
            "numCiting": 25,
            "paperAbstract": {
                "fragments": [],
                "text": "The objective of a computer vision system is to outline the objects in a picture and label them with an appropriate interpretation. This paper proposes a new paradigm for a modular computer vision system which is both data directed and knowledge based. The system consists of three different types of units, two of which are associative data memories implemented as relational databases. The short-term memory (STM) contains the raw color picture data and the most current interpretations and deductions about the original scene. The long-term memory (LTM) contains a detailed model of the scene under consideration. A collection of analysis processors, each of which is specialized for a particular task, can communicate with both of these memories. The information in the LTM remains unchanged during the analysis, while the STM is being continually updated and revised by the appropriate processors. The latter may be conceived of as being activated by certain data conditions in the STM, and using the information in both the LTM and STM to alter the status of the STM."
            },
            "slug": "A-Modular-Computer-Vision-System-for-Picture-and-Levine-Shaheen",
            "title": {
                "fragments": [],
                "text": "A Modular Computer Vision System for Picture Segmentation and Interpretation"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "A new paradigm for a modular computer vision system which is both data directed and knowledge based is proposed which consists of three different types of units, two of which are associative data memories implemented as relational databases."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Transactions on Pattern Analysis and Machine Intelligence"
            },
            "year": 1981
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145916951"
                        ],
                        "name": "G. Nagy",
                        "slug": "G.-Nagy",
                        "structuredName": {
                            "firstName": "George",
                            "lastName": "Nagy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Nagy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 13525416,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "96fd18e49ec7633749c3aee8f6d28e51d97cebb5",
            "isKey": false,
            "numCitedBy": 23,
            "numCiting": 10,
            "paperAbstract": {
                "fragments": [],
                "text": "istie considerations because p~*j is the probability thatb on leaving G1 state Vj is reached. Example 6. The values S~s for a Markov chain M with a graph of Figm'e 3 can be computed in the following way: (a) The values S'is for :.\\~farkov chain ;4 ' with graph G' given in Figure 5 are computed. The labeling of the arcs of G' is identical with the labeling of the corresponding ares of G except for ares (V6 , I%) and (V~, Vs), which are labeled by 1. (b) The values of S;6 and S~5 label the ares (V,, V6) and (V~, Vs) of the graph of Markov chain 34* with the graph given in Figure 4; the labeling of the remaining ares is identical with the labeling of cox'responding ares in Figure 3. (c) The values S~*\u00a2 for M* are computed. 1 (d) The values of S~j are multiplied by p ~ . Note that if M fulfills the assumptions of Theorem 1, then M' and M* must fulfill them as well, and, Theorem t is applicable to both M* and M'. COROLLAnW 1. As Theorem 4 is applicable to the oneentry subgraphs themselves the computation of the Sis can be effected as Jbllows: (1) The values Sis for the \"innermost\" subgraphs are computed. (2) These S~s are (in the sense of Theorem 4) used in the nearest \"higher\" subgraphs to compute Si*5 for them until the Si.i in the highest (\"outermost\") graph G are computed. Then using (5) qf Theore~ ~ the S~g for inner subgraphs are successively computed. Remarlc 6. [rearing \"t~o-cn~ry\" subgraphs as two : one-entry subgraphs, a variant of tneoren 4 for tw0entry subgraphs (or n-entry subgraphs) can be proved. Remark 7. Note that in graph G of an ~ssoei~ted Mar: kov chain the one-entry subgraph corresponds to a closed ) subroutine. This is the motivation of Remark 5 of Section 1. The details are not discussed here, but it cart be shown that for the majority of subroutines the method indicated in Remark 5 practically does not increase the complexity of the computation of S~s."
            },
            "slug": "Preliminary-investigation-of-techniques-for-reading-Nagy",
            "title": {
                "fragments": [],
                "text": "Preliminary investigation of techniques for automated reading of unformatted text"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "It will be shown that for the majority of subroutines the method indicated in Remark 5 practically does not increase the complexity of the computation of S~s."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143766793"
                        ],
                        "name": "A. Rosenfeld",
                        "slug": "A.-Rosenfeld",
                        "structuredName": {
                            "firstName": "Azriel",
                            "lastName": "Rosenfeld",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Rosenfeld"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "30489560"
                        ],
                        "name": "R. Hummel",
                        "slug": "R.-Hummel",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Hummel",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Hummel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1698824"
                        ],
                        "name": "S. Zucker",
                        "slug": "S.-Zucker",
                        "structuredName": {
                            "firstName": "Steven",
                            "lastName": "Zucker",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Zucker"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 18603445,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5df9cdc54c8085781c4199a95576a14cb7198b9d",
            "isKey": false,
            "numCitedBy": 1518,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "Given a set of objects in a scene whose identifications are ambiguous, it is often possible to use relationships among the objects to reduce or eliminate the ambiguity. A striking example of this approach was given by Waltz [13]. This paper formulates the ambiguity-reduction process in terms of iterated parallel operations (i.e., relaxation operations) performed on an array of (object, identification) data. Several different models of the process are developed, convergence properties of these models are established, and simple examples are given."
            },
            "slug": "Scene-Labeling-by-Relaxation-Operations-Rosenfeld-Hummel",
            "title": {
                "fragments": [],
                "text": "Scene Labeling by Relaxation Operations"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This paper formulates the ambiguity-reduction process in terms of iterated parallel operations (i.e., relaxation operations) performed on an array of object, identification data."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Transactions on Systems, Man, and Cybernetics"
            },
            "year": 1976
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1696575"
                        ],
                        "name": "J. Bentley",
                        "slug": "J.-Bentley",
                        "structuredName": {
                            "firstName": "Jon",
                            "lastName": "Bentley",
                            "middleNames": [
                                "Louis"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Bentley"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 13091446,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "cc73bacd6a00442570d15e122604ad6862b8663d",
            "isKey": false,
            "numCitedBy": 6701,
            "numCiting": 13,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper develops the multidimensional binary search tree (or <italic>k</italic>-d tree, where <italic>k</italic> is the dimensionality of the search space) as a data structure for storage of information to be retrieved by associative searches. The <italic>k</italic>-d tree is defined and examples are given. It is shown to be quite efficient in its storage requirements. A significant advantage of this structure is that a single data structure can handle many types of queries very efficiently. Various utility algorithms are developed; their proven average running times in an <italic>n</italic> record file are: insertion, <italic>O</italic>(log <italic>n</italic>); deletion of the root, <italic>O</italic>(<italic>n</italic><supscrpt>(<italic>k</italic>-1)/<italic>k</italic></supscrpt>); deletion of a random node, <italic>O</italic>(log <italic>n</italic>); and optimization (guarantees logarithmic performance of searches), <italic>O</italic>(<italic>n</italic> log <italic>n</italic>). Search algorithms are given for partial match queries with <italic>t</italic> keys specified [proven maximum running time of <italic>O</italic>(<italic>n</italic><supscrpt>(<italic>k</italic>-<italic>t</italic>)/<italic>k</italic></supscrpt>)] and for nearest neighbor queries [empirically observed average running time of <italic>O</italic>(log <italic>n</italic>).] These performances far surpass the best currently known algorithms for these tasks. An algorithm is presented to handle any general intersection query. The main focus of this paper is theoretical. It is felt, however, that <italic>k</italic>-d trees could be quite useful in many applications, and examples of potential uses are given."
            },
            "slug": "Multidimensional-binary-search-trees-used-for-Bentley",
            "title": {
                "fragments": [],
                "text": "Multidimensional binary search trees used for associative searching"
            },
            "tldr": {
                "abstractSimilarityScore": 59,
                "text": "The multidimensional binary search tree (or <italic>k-d tree) as a data structure for storage of information to be retrieved by associative searches is developed and it is shown to be quite efficient in its storage requirements."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1975
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145916951"
                        ],
                        "name": "G. Nagy",
                        "slug": "G.-Nagy",
                        "structuredName": {
                            "firstName": "George",
                            "lastName": "Nagy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Nagy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 5419774,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c8fef60c090f8ec8b1b05d425027aa0d66a43d32",
            "isKey": false,
            "numCitedBy": 27,
            "numCiting": 21,
            "paperAbstract": {
                "fragments": [],
                "text": "eyes are everywhere, scrutinizing documents, blood slides, even pizza crusts. With this potpourri of applications, scanners may become as commonplace as today's photographic camera. Optical scanners, or scanning digitizers, are used to convert a picture into an array of numbers representing the positional distribution of optical density within the picture. The relation between the computer-readable output of the optical scanner and the original image is critical to automatic pattern recognition and digital image processing. Optical scanners can be thought of as eyes for computers. They are used in optical character recognition; computer-aided design and drafting; biomedical applications ; geographic data processing, including remote sensing ; facsimile communications; printing and publishing; and experimental physical science. (See center insert on applications.) Commercially, the most widespread application of optical scanners is optical character recognition. Virtually all earlier products were based on mechanical scanners, but the current trend is solid-state transducers. At the same time, the implementation of recognition algorithms is shifting from special-purpose, hard-wired logic to microprocessor-based software. Consequently, large, high-speed OCR systems designed to displace several hundred data entry specialists are gradually giving way to devices that can be cost-justified even in organizations employing only a few data entry personnel. OCR input devices may eventually be attached to even the smallest computer systems, complementing the standard keyboard for alphanumeric entry. To recognize a single character, we need only examine a 30 x 30 picture element array; the exact spatial relation between successive characters is unimportant. Optical scanners designed for character recognition are, therefore , generally not suitable for image input. Image scanners are, however, finding their way into OCR systems designed for less restrictive applications, such as the processing of documents containing gray-scale illustrations, line drawings, and a mix of type fonts. I Engineering applications require the digitization of line drawings with predominantly straight-line segments, such as detail, assembly, structural, and architectural drawings; logic, circuit, and wiring diagrams; printed circuit , wafer, and chip layouts; and utility maps (in-plant and crosscountry cabling, piping and pipelines, conduits , ducts, transmission lines). Ink on mylar has sufficient contrast to allow use of a scanner with only binary (black and white) amplitude output, but variations in re-flectance make pencil drawings difficult to scan. Many engineering applications require a scanner capable of handling a wide range of drawing sizes and a mix of line and alphabetic information. A typical floor plan for a telephone company central \u2026"
            },
            "slug": "Optical-Scanning-Digitizers-Nagy",
            "title": {
                "fragments": [],
                "text": "Optical Scanning Digitizers"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "Large, high-speed OCR systems designed to displace several hundred data entry specialists are gradually giving way to devices that can be cost-justified even in organizations employing only a few data entry personnel."
            },
            "venue": {
                "fragments": [],
                "text": "Computer"
            },
            "year": 1983
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1734158"
                        ],
                        "name": "D. Nau",
                        "slug": "D.-Nau",
                        "structuredName": {
                            "firstName": "Dana",
                            "lastName": "Nau",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Nau"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 7301753,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "53748baadb078c7a634a184b0914c5c0c6c8f39f",
            "isKey": false,
            "numCitedBy": 165,
            "numCiting": 54,
            "paperAbstract": {
                "fragments": [],
                "text": "Ordinary computer programs organize knowledge on two levels: data and program. Most expert computer systems, however, organize knowledge on three levels: data, knowledge base, and control. Computers organized in this way are often called knowledge-based svstems. On the data level is declarative knowledge about the particular problem being solved and the current state of affairs in the attempt to solve the problem. On the knowledge-base level is knowledge specific to the particular kind of problem that the system is set up to solve. This knowledge is used by the system in reasoning about the problem and is often given in the form of operators, or \"pattern-invoked programs.\" One, many, or no operators may be applicable to the problem at any one time. If applied, an operator produces changes in the data. In the control structure is a computer program that makes decisions about how to use the specific problem-solving knowledge. Decisions are made, for example, about which operators to apply and how to apply them. This article discusses the techniques used in expert systems on each of these levels. Since these systems use a combination of artificial intelligence (AI) problem-solving and knowledgerepresentation techniques, information on these areas is also included."
            },
            "slug": "Expert-computer-systems-Nau",
            "title": {
                "fragments": [],
                "text": "Expert computer systems"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "Since these systems use a combination of artificial intelligence (AI) problem-solving and knowledgerepresentation techniques, information on these areas is also included."
            },
            "venue": {
                "fragments": [],
                "text": "Computer"
            },
            "year": 1983
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1719385"
                        ],
                        "name": "H. Samet",
                        "slug": "H.-Samet",
                        "structuredName": {
                            "firstName": "Hanan",
                            "lastName": "Samet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Samet"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 14518244,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c8ae92a189d7d45d1e26749be71797b80df49452",
            "isKey": false,
            "numCitedBy": 206,
            "numCiting": 9,
            "paperAbstract": {
                "fragments": [],
                "text": "An algorithm is presented for constructing a quadtree for a region given its boundary in the form of a chain code. Analysis of the algorithm reveals that its execution time is proportional to the product of the perimeter and the log of the diameter of the region."
            },
            "slug": "Region-representation:-quadtrees-from-boundary-Samet",
            "title": {
                "fragments": [],
                "text": "Region representation: quadtrees from boundary codes"
            },
            "tldr": {
                "abstractSimilarityScore": 91,
                "text": "An algorithm is presented for constructing a quadtree for a region given its boundary in the form of a chain code that reveals that its execution time is proportional to the product of the perimeter and the log of the diameter of the region."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1980
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {},
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 9,
        "totalPages": 1
    },
    "page_url": "https://www.semanticscholar.org/paper/DOCUMENT-ANALYSIS-WITH-AN-EXPERT-SYSTEM-Nagy-Seth/3e33ac20d85869b44815de3b87a4d6d4e841b76d?sort=total-citations"
}