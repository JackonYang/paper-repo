{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2055593"
                        ],
                        "name": "K. Clarkson",
                        "slug": "K.-Clarkson",
                        "structuredName": {
                            "firstName": "Kenneth",
                            "lastName": "Clarkson",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Clarkson"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "Clarkson [1994]  showed that query time could be reduced to O((1=)d=2 log n) with O((1=)d=2(log )n) space, where is the ratio between the furthest-pair and closest-"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 18388561,
            "fieldsOfStudy": [
                "Physics"
            ],
            "id": "fd1751391e636d5b87668bf7469cd86affc68749",
            "isKey": false,
            "numCitedBy": 135,
            "numCiting": 7,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper gives an algorithm for approximately solving the <italic>post office problem:</italic> given <italic>n</italic> points (called sites) in <italic>d</italic> dimensions, build a data structure so that, given a query point <italic>q</italic>, a closest site to <italic>q</italic> can be found quickly. The algorithm is also given a relative error bound \u03b5, and depends on a ratio &rgr;, which is no more than the ratio of the distance between the farthest pair of sites to the distance between the closest pair of sites. The algorithm builds a data structure of size <italic>O</italic>(<italic>n</italic>&eegr;)<italic>O</italic>(1/\u03b5)<supscrpt>(<italic>d</italic>\u22121)/2</supscrpt> in time <italic>O</italic>(<italic>n</italic><supscrpt>2</supscrpt>&eegr;)<italic>O</italic>(1/\u03b5)<supscrpt>(<italic>d</italic>\u22121)</supscrpt>. Here &eegr;=log(&rgr;/\u03b5). With this data structure, a site is returned whose distance to a query point <italic>q</italic> is within 1+\u03b5 of the distance of the closest site. A query needs <italic>O</italic>(log<italic>n</italic>)<italic>O</italic>(1/\u03b5)<supscrpt>(<italic>d</italic>\u22121)/2</supscrpt> time, with high probability."
            },
            "slug": "An-algorithm-for-approximate-closest-point-queries-Clarkson",
            "title": {
                "fragments": [],
                "text": "An algorithm for approximate closest-point queries"
            },
            "tldr": {
                "abstractSimilarityScore": 63,
                "text": "An algorithm for approximately solving the post office problem, given n points in d dimensions, build a data structure so that, given a query point, a closest site to a querying point can be found quickly."
            },
            "venue": {
                "fragments": [],
                "text": "SCG '94"
            },
            "year": 1994
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1770729"
                        ],
                        "name": "A. Yao",
                        "slug": "A.-Yao",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Yao",
                            "middleNames": [
                                "Chi-Chih"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Yao"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145874305"
                        ],
                        "name": "F. F. Yao",
                        "slug": "F.-F.-Yao",
                        "structuredName": {
                            "firstName": "F.",
                            "lastName": "Yao",
                            "middleNames": [
                                "Frances"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. F. Yao"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 6090812,
            "fieldsOfStudy": [
                "Physics"
            ],
            "id": "c0da658992343b6b71f993dfde229f173e77cd83",
            "isKey": false,
            "numCitedBy": 161,
            "numCiting": 19,
            "paperAbstract": {
                "fragments": [],
                "text": "It is shown that any bounded region in <italic>E</italic><supscrpt><italic>d</italic></supscrpt> can be divided into 2<supscrpt><italic>d</italic></supscrpt> subregions of equal volume in such a way that no hyperplane in <italic>E</italic><supscrpt><italic>d</italic></supscrpt> can intersect all 2<supscrpt><italic>d</italic></supscrpt> of the subregions. This theorem provides the basis of a data structure scheme for organizing <italic>n</italic> points in <italic>d</italic> dimensions. Under this scheme, a broad class of geometric queries in <italic>d</italic> dimensions, including many common problems in range search and optimization, can be solved in linear storage space and sublinear time."
            },
            "slug": "A-general-approach-to-d-dimensional-geometric-Yao-Yao",
            "title": {
                "fragments": [],
                "text": "A general approach to d-dimensional geometric queries"
            },
            "tldr": {
                "abstractSimilarityScore": 57,
                "text": "It is shown that any bounded region in E = d can be divided into 2 subregions of equal volume in such a way that no hyperplane in E can intersect all 2 of the subRegions."
            },
            "venue": {
                "fragments": [],
                "text": "STOC '85"
            },
            "year": 1985
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1744254"
                        ],
                        "name": "L. Guibas",
                        "slug": "L.-Guibas",
                        "structuredName": {
                            "firstName": "Leonidas",
                            "lastName": "Guibas",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Guibas"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1747189"
                        ],
                        "name": "J. Hershberger",
                        "slug": "J.-Hershberger",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Hershberger",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Hershberger"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "13912178"
                        ],
                        "name": "D. Leven",
                        "slug": "D.-Leven",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Leven",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Leven"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1704273"
                        ],
                        "name": "M. Sharir",
                        "slug": "M.-Sharir",
                        "structuredName": {
                            "firstName": "Micha",
                            "lastName": "Sharir",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Sharir"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1721050"
                        ],
                        "name": "R. Tarjan",
                        "slug": "R.-Tarjan",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Tarjan",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Tarjan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 1301098,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "7de3bbad16839f30f4f1493e3ef3c0f59fa019f9",
            "isKey": false,
            "numCitedBy": 127,
            "numCiting": 34,
            "paperAbstract": {
                "fragments": [],
                "text": "We present linear time algorithms for solving the following problems involving a simple planar polygon <italic>P</italic>: (i) Computing the collection of all shortest paths inside <italic>P</italic> from a given source vertex <italic>s</italic> to all the other vertices of <italic>P</italic>; (ii) Computing the subpolygon of <italic>P</italic> consisting of points that are visible from a segment within <italic>P</italic>; (iii) Preprocessing <italic>P</italic> so that for any query ray <italic>r</italic> emerging from some fixed edge <italic>e</italic> of <italic>P</italic>, we can find in logarithmic time the first intersection of <italic>r</italic> with the boundary of <italic>P</italic>; (iv) Preprocessing <italic>P</italic> so that for any query point <italic>x</italic> in <italic>P</italic>, we can find in logarithmic time the portion of the edge <italic>e</italic> that is visible from <italic>x</italic>; (v) Preprocessing <italic>P</italic> so that for any query point <italic>x</italic> inside <italic>P</italic> and direction <italic>u</italic>, we can find in logarithmic time the first point on the boundary of <italic>P</italic> hit by the ray at direction <italic>u</italic> from <italic>x</italic>; (vi) Calculating a hierarchical decomposition of <italic>P</italic> into smaller polygons by recursive polygon cutting, as in [Ch]. (vii) Calculating the (clockwise and counterclockwise) \u201cconvex ropes\u201d (in the terminology of [PS]) from a fixed vertex <italic>s</italic> of <italic>P</italic> lying on its convex hull, to all other vertices of <italic>P</italic>. All these algorithms are based on a recent linear time algorithm of Tarjan and Van Wyk for triangulating a simple polygon, but use additional techniques to make all subsequent phases of these algorithms also linear."
            },
            "slug": "Linear-time-algorithms-for-visibility-and-shortest-Guibas-Hershberger",
            "title": {
                "fragments": [],
                "text": "Linear time algorithms for visibility and shortest path problems inside simple polygons"
            },
            "venue": {
                "fragments": [],
                "text": "SCG '86"
            },
            "year": 1986
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144811496"
                        ],
                        "name": "T. Feder",
                        "slug": "T.-Feder",
                        "structuredName": {
                            "firstName": "Tom\u00e1s",
                            "lastName": "Feder",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Feder"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2422263"
                        ],
                        "name": "D. Greene",
                        "slug": "D.-Greene",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Greene",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Greene"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 679,
                                "start": 39
                            }
                        ],
                        "text": "First, consider the optimized kd-tree [Friedman et al. 1975]. This data structure recursively subdivides space by a hyperplane that is orthogonal to one of the coordinate axes and that partitions the data points as evenly as possible. As a consequence, as one descends any path in the tree, the cardinality of points associated with the nodes on this path decreases exponentially. In contrast, consider quadtree-based data structures, which decompose space into regions that are either hypercubes, or generally rectangles whose aspect ratio (the ratio of the length of the longest side to the shortest side) is bounded by a constant. These include PR-quadtrees (see Samet [1990]), and structures by Clarkson 896 ARYA ET AL."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 658151,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5f6634e7122ea85eaa098c0b609cfe255afa5faf",
            "isKey": false,
            "numCitedBy": 438,
            "numCiting": 34,
            "paperAbstract": {
                "fragments": [],
                "text": "In a clustering problem, the aim is to partition a given set of <italic>n</italic> points in <italic>d</italic>-dimensional space into <italic>k</italic> groups, called clusters, so that points within each cluster are near each other. Two objective functions frequently used to measure the performance of a clustering algorithm are, for any <italic>L<subscrpt>4</subscrpt></italic> metric, (a) the maximum distance between pairs of points in the same cluster, and (b) the maximum distance between points in each cluster and a chosen cluster center; we refer to either measure as the cluster size.\nWe show that one cannot approximate the optimal cluster size for a fixed number of clusters within a factor close to 2 in polynomial time, for two or more dimensions, unless P=NP. We also present an algorithm that achieves this factor of 2 in time <italic>&Ogr;</italic>(<italic>n</italic> log <italic>k</italic>), and show that this running time is optimal in the algebraic decision tree model. For a fixed cluster size, on the other hand, we give a polynomial time approximation scheme that estimates the optimal number of clusters under the second measure of cluster size within factors arbitrarily close to 1. Our approach is extended to provide approximation algorithms for the restricted centers, suppliers, and weighted suppliers problems that run in optimal <italic>&Ogr;</italic>(<italic>n</italic> log <italic>k</italic>) time and achieve optimal or nearly optimal approximation bounds."
            },
            "slug": "Optimal-algorithms-for-approximate-clustering-Feder-Greene",
            "title": {
                "fragments": [],
                "text": "Optimal algorithms for approximate clustering"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This work gives a polynomial time approximation scheme that estimates the optimal number of clusters under the second measure of cluster size within factors arbitrarily close to 1 for a fixed cluster size."
            },
            "venue": {
                "fragments": [],
                "text": "STOC '88"
            },
            "year": 1988
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2450839"
                        ],
                        "name": "M. Fredman",
                        "slug": "M.-Fredman",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Fredman",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Fredman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1721050"
                        ],
                        "name": "R. Tarjan",
                        "slug": "R.-Tarjan",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Tarjan",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Tarjan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 66,
                                "start": 41
                            }
                        ],
                        "text": "If we assume the use of a Fibonacci heap [Fredman and Tarjan 1987] for the priority queue, the amortized time for each insertion is O(1)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 65,
                                "start": 42
                            }
                        ],
                        "text": "If we assume the use of a Fibonacci heap [Fredman and Tarjan \n1987] for the priority queue, the amortized time for each insertion is O(1)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 193986,
            "fieldsOfStudy": [
                "Computer Science",
                "Mathematics"
            ],
            "id": "93e12a891485806085ad95d4144a21a55d7fc996",
            "isKey": false,
            "numCitedBy": 2130,
            "numCiting": 28,
            "paperAbstract": {
                "fragments": [],
                "text": "In this paper we develop a new data structure for implementing heaps (priority queues). Our structure, <italic>Fibonacci heaps</italic> (abbreviated <italic>F-heaps</italic>), extends the binomial queues proposed by Vuillemin and studied further by Brown. F-heaps support arbitrary deletion from an <italic>n</italic>-item heap in <italic>O</italic>(log <italic>n</italic>) amortized time and all other standard heap operations in <italic>O</italic>(1) amortized time. Using F-heaps we are able to obtain improved running times for several network optimization algorithms. In particular, we obtain the following worst-case bounds, where <italic>n</italic> is the number of vertices and <italic>m</italic> the number of edges in the problem graph:<list><item><italic>O</italic>(<italic>n</italic> log <italic>n</italic> + <italic>m</italic>) for the single-source shortest path problem with nonnegative edge lengths, improved from <italic>O</italic>(<italic>m</italic>log<subscrpt>(<italic>m/n</italic>+2)</subscrpt><italic>n</italic>);\n</item><item><italic>O</italic>(<italic>n</italic><supscrpt>2</supscrpt>log <italic>n</italic> + <italic>nm</italic>) for the all-pairs shortest path problem, improved from <italic>O</italic>(<italic>nm</italic> log<subscrpt>(<italic>m/n</italic>+2)</subscrpt><italic>n</italic>);\n</item><item><italic>O</italic>(<italic>n</italic><supscrpt>2</supscrpt>log <italic>n</italic> + <italic>nm</italic>) for the assignment problem (weighted bipartite matching), improved from <italic>O</italic>(<italic>nm</italic>log<subscrpt>(<italic>m/n</italic>+2)</subscrpt><italic>n</italic>);\n</item><item><italic>O</italic>(<italic>m\u03b2</italic>(<italic>m, n</italic>)) for the minimum spanning tree problem, improved from <italic>O</italic>(<italic>m</italic>log log<subscrpt>(<italic>m/n</italic>+2)</subscrpt><italic>n</italic>); where <italic>\u03b2</italic>(<italic>m, n</italic>) = min {<italic>i</italic> \u21bf log<supscrpt>(<italic>i</italic>)</supscrpt><italic>n</italic> \u2264 <italic>m/n</italic>}. Note that <italic>\u03b2</italic>(<italic>m, n</italic>) \u2264 log<supscrpt>*</supscrpt><italic>n</italic> if <italic>m</italic> \u2265 <italic>n</italic>.\n</item></list>Of these results, the improved bound for minimum spanning trees is the most striking, although all the results give asymptotic improvements for graphs of appropriate densities."
            },
            "slug": "Fibonacci-heaps-and-their-uses-in-improved-network-Fredman-Tarjan",
            "title": {
                "fragments": [],
                "text": "Fibonacci Heaps and Their Uses in Improved Network Optimization Algorithms"
            },
            "tldr": {
                "abstractSimilarityScore": 48,
                "text": "Using F-heaps, a new data structure for implementing heaps that extends the binomial queues proposed by Vuillemin and studied further by Brown, the improved bound for minimum spanning trees is the most striking."
            },
            "venue": {
                "fragments": [],
                "text": "FOCS"
            },
            "year": 1984
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1724709"
                        ],
                        "name": "S. Arya",
                        "slug": "S.-Arya",
                        "structuredName": {
                            "firstName": "Sunil",
                            "lastName": "Arya",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Arya"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709509"
                        ],
                        "name": "D. Mount",
                        "slug": "D.-Mount",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Mount",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Mount"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 1143910,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b654d0a3de9acd9db6982d39bcf25e8ece9a31e6",
            "isKey": false,
            "numCitedBy": 407,
            "numCiting": 40,
            "paperAbstract": {
                "fragments": [],
                "text": "Given a set of n points in d-dimensional Euclidean space, S \u2282 E, and a query point q \u2208 E, we wish to determine the nearest neighbor of q, that is, the point of S whose Euclidean distance to q is minimum. The goal is to preprocess the point set S, such that queries can be answered as efficiently as possible. We assume that the dimension d is a constant independent of n. Although reasonably good solutions to this problem exist when d is small, as d increases the performance of these algorithms degrades rapidly. We present a randomized algorithm for approximate nearest neighbor searching. Given any set of n points S \u2282 E, and a constant \u01eb > 0, we produce a data structure, such that given any query point, a point of S will be reported whose distance from the query point is at most a factor of (1 + \u01eb) from that of the true nearest neighbor. Our algorithm runs in O(log n) expected time and requires O(n log n) space. The data structure can be built in O(n) expected time. The constant factors depend on d and \u01eb. Because of the practical importance of nearest neighbor searching in higher dimensions, we have implemented a practical variant of this algorithm, and show empirically that for many point distributions this variant of the algorithm finds the nearest neighbor in moderately large dimension significantly faster than existing practical approaches."
            },
            "slug": "Approximate-nearest-neighbor-queries-in-fixed-Arya-Mount",
            "title": {
                "fragments": [],
                "text": "Approximate nearest neighbor queries in fixed dimensions"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "A practical variant of this algorithm is implemented, and it is shown empirically that for many point distributions this variant of the algorithm finds the nearest neighbor in moderately large dimension significantly faster than existing practical approaches."
            },
            "venue": {
                "fragments": [],
                "text": "SODA '93"
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2055593"
                        ],
                        "name": "K. Clarkson",
                        "slug": "K.-Clarkson",
                        "structuredName": {
                            "firstName": "Kenneth",
                            "lastName": "Clarkson",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Clarkson"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 42801784,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "9856b6e5fd4f35da4afc295a6cf609e614c882e5",
            "isKey": false,
            "numCitedBy": 244,
            "numCiting": 18,
            "paperAbstract": {
                "fragments": [],
                "text": "An algorithm for closest-point queries is given. The problem is this: given a set S of n points in d-dimensional space, build a data structure so that given an arbitrary query point p, a closest point in S to p can be found quickly. The measure of distance is the Euclidean norm. This is sometimes called the post-office problem. The new data structure will be termed an RPO tree, from Randomized Post Office. The expected time required to build an RPO tree is $O(n^{\\lceil {{d / 2}} \\rceil (1 + \\epsilon )} )$, for any fixed $\\epsilon > 0$, and a query can be answered in $O(\\log n)$ worst-case time. An RPO tree requires $O(n^{\\lceil {{d / 2}} \\rceil (1 + \\epsilon )} )$ space in the worst case. The constant factors in these bounds depend on d and $\\epsilon $. The bounds are average-case due to the randomization employed by the algorithm, and hold for any set of input points. This result approaches the $\\Omega (n^{\\lceil {{d / 2}} \\rceil } )$ worst-case time required for any algorithm that constructs the Voronoi..."
            },
            "slug": "A-Randomized-Algorithm-for-Closest-Point-Queries-Clarkson",
            "title": {
                "fragments": [],
                "text": "A Randomized Algorithm for Closest-Point Queries"
            },
            "tldr": {
                "abstractSimilarityScore": 35,
                "text": "This result approaches the $\\Omega (n^{\\lceil {{d / 2}} \\rceil } )$ worst-case time required for any algorithm that constructs the Voronoi..."
            },
            "venue": {
                "fragments": [],
                "text": "SIAM J. Comput."
            },
            "year": 1988
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "31555479"
                        ],
                        "name": "Timothy M. Chan",
                        "slug": "Timothy-M.-Chan",
                        "structuredName": {
                            "firstName": "Timothy",
                            "lastName": "Chan",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Timothy M. Chan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 10262363,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "98bfe40edf69f1c3a3f67ce1debfe9ff9ccb16e0",
            "isKey": false,
            "numCitedBy": 68,
            "numCiting": 32,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract. This paper proposes new methods to answer approximate nearest neighbor queries on a set of n points in d -dimensional Euclidean space. For any fixed constant d , a data structure with O(\n$\\varepsilon$(1-d)/2n log n) preprocessing time and O(\n$\\varepsilon$(1-d)/2log n) query time achieves an approximation factor 1+\n$\\varepsilon$ for any given 0 < \n$\\varepsilon$ < 1; a variant reduces the \n$\\varepsilon$ -dependence by a factor of \n$\\varepsilon$-1/2 . For any arbitrary d , a data structure with O(d2n log n) preprocessing time and O(d2log n) query time achieves an approximation factor O(d3/2) . Applications to various proximity problems are discussed."
            },
            "slug": "Approximate-Nearest-Neighbor-Queries-Revisited-Chan",
            "title": {
                "fragments": [],
                "text": "Approximate nearest neighbor queries revisited"
            },
            "tldr": {
                "abstractSimilarityScore": 71,
                "text": "New methods to answer approximate nearest neighbor queries on a set of n points in d -dimensional Euclidean space are proposed and applications to various proximity problems are discussed."
            },
            "venue": {
                "fragments": [],
                "text": "SCG '97"
            },
            "year": 1997
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1724709"
                        ],
                        "name": "S. Arya",
                        "slug": "S.-Arya",
                        "structuredName": {
                            "firstName": "Sunil",
                            "lastName": "Arya",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Arya"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709509"
                        ],
                        "name": "D. Mount",
                        "slug": "D.-Mount",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Mount",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Mount"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1699131"
                        ],
                        "name": "O. Narayan",
                        "slug": "O.-Narayan",
                        "structuredName": {
                            "firstName": "Onuttom",
                            "lastName": "Narayan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "O. Narayan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 144,
                                "start": 128
                            }
                        ],
                        "text": "Boundary effects probably play a role since the empirically observed \nvalues are somewhat smaller than predicted by the formula [Arya et al. 1995]."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                }
            ],
            "corpusId": 348648,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "08a8b05245edc89e24e40f23035fd10f3f623dab",
            "isKey": false,
            "numCitedBy": 55,
            "numCiting": 31,
            "paperAbstract": {
                "fragments": [],
                "text": "Givenn data points ind-dimensional space, nearest-neighbor searching involves determining the nearest of these data points to a given query point. Most averagecase analyses of nearest-neighbor searching algorithms are made under the simplifying assumption thatd is fixed and thatn is so large relative tod thatboundary effects can be ignored. This means that for any query point the statistical distribution of the data points surrounding it is independent of the location of the query point. However, in many applications of nearest-neighbor searching (such as data compression by vector quantization) this assumption is not met, since the number of data pointsn grows roughly as 2 d .Largely for this reason, the actual performances of many nearest-neighbor algorithms tend to be much better than their theoretical analyses would suggest. We present evidence of why this is the case. We provide an accurate analysis of the number of cells visited in nearest-neighbor searching by the bucketing andk-d tree algorithms. We assumem dpoints uniformly distributed in dimensiond, wherem is a fixed integer \u22652. Further, we assume that distances are measured in theL \u221e metric. Our analysis is tight in the limit asd approaches infinity. Empirical evidence is presented showing that the analysis applies even in low dimensions."
            },
            "slug": "Accounting-for-boundary-effects-in-nearest-neighbor-Arya-Mount",
            "title": {
                "fragments": [],
                "text": "Accounting for boundary effects in nearest neighbor searching"
            },
            "tldr": {
                "abstractSimilarityScore": 47,
                "text": "An accurate analysis of the number of cells visited in nearest-neighbor searching by the bucketing andk-d tree algorithms is provided and empirical evidence is presented showing that the analysis applies even in low dimensions."
            },
            "venue": {
                "fragments": [],
                "text": "SCG '95"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3371403"
                        ],
                        "name": "J. Kleinberg",
                        "slug": "J.-Kleinberg",
                        "structuredName": {
                            "firstName": "Jon",
                            "lastName": "Kleinberg",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Kleinberg"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 7417721,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d1521d6263d0b17f26236d32538be00004050f2a",
            "isKey": false,
            "numCitedBy": 424,
            "numCiting": 70,
            "paperAbstract": {
                "fragments": [],
                "text": "Representing data as points in a high-dimensional space, so as to use geometric methods for indexing, is an algorithmic technique with a wide array of uses. It is central to a number of areas such as information retrieval, pattern recognition, and statistical data analysis; many of the problems arising in these applications can involve several hundred or several thousand dimensions. We consider the nearest-neighbor problem for d-dimensional Euclidean space: we wish to pre-process a database of n points so that given a query point, one can efficiently determine its nearest neighbors in the database. There is a large literature on algorithms for this problem, in both the exact and approximate cases. The more sophisticated algorithms typically achieve a query time that is logarithmic in n at the expense of an exponential dependence on the dimension d; indeed, even the averagecase analysis of heuristics such as k-d trees reveals an exponential dependence on d in the query time. In this work, we develop a new approach to the nearest-neighbor problem, based on a method for combining randomly chosen one-dimensional projections of the underlying point set. From this, we obtain the following two results. (i) An algorithm for finding e-approximate nearest neighbors with a query time of O((d log d)(d + log n)). (ii) An e-approximate nearest-neighbor algorithm with near-linear storage and a query time that improves asymptotically on linear search in all dimensions. \u2217Department of Computer Science, Cornell University, Ithaca NY 14853. Email: kleinber@cs.cornell.edu. This work was performed in large part while on leave at the IBM Almaden Research Center, San Jose CA 95120. The author is currently supported by an Alfred P. Sloan Research Fellowship and by NSF Faculty Early Career Development Award CCR-9701399."
            },
            "slug": "Two-algorithms-for-nearest-neighbor-search-in-high-Kleinberg",
            "title": {
                "fragments": [],
                "text": "Two algorithms for nearest-neighbor search in high dimensions"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "A new approach to the nearest-neighbor problem is developed, based on a method for combining randomly chosen one-dimensional projections of the underlying point set, which results in an algorithm for finding e-approximate nearest neighbors with a query time of O((d log d)(d + log n))."
            },
            "venue": {
                "fragments": [],
                "text": "STOC '97"
            },
            "year": 1997
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35122748"
                        ],
                        "name": "Stefan Berchtold",
                        "slug": "Stefan-Berchtold",
                        "structuredName": {
                            "firstName": "Stefan",
                            "lastName": "Berchtold",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Stefan Berchtold"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145913175"
                        ],
                        "name": "C. B\u00f6hm",
                        "slug": "C.-B\u00f6hm",
                        "structuredName": {
                            "firstName": "C.",
                            "lastName": "B\u00f6hm",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. B\u00f6hm"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "9106757"
                        ],
                        "name": "D. Keim",
                        "slug": "D.-Keim",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Keim",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Keim"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1688561"
                        ],
                        "name": "H. Kriegel",
                        "slug": "H.-Kriegel",
                        "structuredName": {
                            "firstName": "Hans-Peter",
                            "lastName": "Kriegel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Kriegel"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 2423181,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "dc7fff3e5df2129e48afc02698e971b0ffbb7360",
            "isKey": false,
            "numCitedBy": 405,
            "numCiting": 28,
            "paperAbstract": {
                "fragments": [],
                "text": "In this paper, we present a new cost model for nearest neighbor search in high-dimensional data space. We first analyze different nearest neighbor algorithms, present a generalization of an algorithm which has been originally proposed for Quadtrees [13], and show that this algorithm is optimal. Then, we develop a cost model which - in contrast to previous models - takes boundary effects into account and therefore also works in high dimensions. The advantages of our model are in particular: Our model works for data sets with an arbitrary number of dimensions and an arbitrary number of data points, is applicable to different data distributions and index structures, and provides accurate estimates of the expected query execution time. To show the practical relevance and accuracy of our model, we perform a detailed analysis using synthetic and real data. The results of applying our model to Hilbert and X-tree indices show that it provides a good estimation of the query performance, which is considerably better than the estimates by previous models especially for highdimensional data."
            },
            "slug": "A-cost-model-for-nearest-neighbor-search-in-data-Berchtold-B\u00f6hm",
            "title": {
                "fragments": [],
                "text": "A cost model for nearest neighbor search in high-dimensional data space"
            },
            "tldr": {
                "abstractSimilarityScore": 57,
                "text": "A new cost model for nearest neighbor search in high-dimensional data space is developed which takes boundary effects into account and therefore also works in high dimensions and is applicable to different data distributions and index structures."
            },
            "venue": {
                "fragments": [],
                "text": "PODS '97"
            },
            "year": 1997
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1738470"
                        ],
                        "name": "E. Kushilevitz",
                        "slug": "E.-Kushilevitz",
                        "structuredName": {
                            "firstName": "Eyal",
                            "lastName": "Kushilevitz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Kushilevitz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1748224"
                        ],
                        "name": "R. Ostrovsky",
                        "slug": "R.-Ostrovsky",
                        "structuredName": {
                            "firstName": "Rafail",
                            "lastName": "Ostrovsky",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Ostrovsky"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1763352"
                        ],
                        "name": "Y. Rabani",
                        "slug": "Y.-Rabani",
                        "structuredName": {
                            "firstName": "Yuval",
                            "lastName": "Rabani",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Y. Rabani"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 10470256,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "7913f88ded389447ba4fb509c94c15d1b46fd1fb",
            "isKey": false,
            "numCitedBy": 331,
            "numCiting": 58,
            "paperAbstract": {
                "fragments": [],
                "text": "We address the problem ofdesigning data structures that allow efficient search f or approximate nearest neighbors. More specifically, given a database consisting ofa set ofvectors in some high dimensional Euclidean space, we want to construct a space-efficient data structure that would allow us to search, given a query vector, for the closest or nearly closest vector in the database. We also address this problem when distances are measured by the L1 norm and in the Hamming cube. Significantly improving and extending recent results ofKleinberg, we construct data structures whose size is polynomial in the size ofthe database and search algorithms that run in time nearly linear or nearly quadratic in the dimension. (Depending on the case, the extra factors are polylogarithmic in the size ofthe database.)"
            },
            "slug": "Efficient-search-for-approximate-nearest-neighbor-Kushilevitz-Ostrovsky",
            "title": {
                "fragments": [],
                "text": "Efficient search for approximate nearest neighbor in high dimensional spaces"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "Significantly improving and extending recent results of Kleinberg, data structures whose size is polynomial in the size of the database and search algorithms that run in time nearly linear or nearly quadratic in the dimension are constructed."
            },
            "venue": {
                "fragments": [],
                "text": "STOC '98"
            },
            "year": 1998
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1724709"
                        ],
                        "name": "S. Arya",
                        "slug": "S.-Arya",
                        "structuredName": {
                            "firstName": "Sunil",
                            "lastName": "Arya",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Arya"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709509"
                        ],
                        "name": "D. Mount",
                        "slug": "D.-Mount",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Mount",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Mount"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 5490329,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "ec59ba2dc2ffb3f858b556ee0cc174e425861e35",
            "isKey": false,
            "numCitedBy": 142,
            "numCiting": 27,
            "paperAbstract": {
                "fragments": [],
                "text": "The range searching problem is a fundamental problem in computational geometry, with numerous important applications. Most research has focused on solving this problem exactly, but lower bounds show that if linear space is assumed, the problem cannot be solved in polylogarithmic time, except for the case of orthogonal ranges. In this paper we show that if one is willing to allow approximate ranges, then it is possible to do much better. In particular, given a bounded range Q of diameter w and \"> 0, an approximate range query treats the range as a fuzzy object, meaning that points lying within distance \"w of the boundary of Q either may or may not be counted. We show that in any fixed dimension d ,as et ofn points in R d can be preprocessed in O.nC logn/ time and O.n/ space, such that approximate queries can be answered in O.logn.1=\"/ d / time. The only assumption we make about ranges is that the intersection of a range and a d-dimensional cube can be answered in constant time (depending on dimension). For convex ranges, we tighten this to O.lognC.1=\"/ d 1 / time. We also present a lower bound for approximate range searching based on partition trees of \u007f.lognC.1=\"/ d 1 /, which implies optimality for convex ranges (assuming fixed dimensions). Finally, we give empirical evidence showing that allowing small relative errors can significantly improve query execution times. \u00a9 2000 Elsevier Science B.V. All rights reserved."
            },
            "slug": "Approximate-range-searching-Arya-Mount",
            "title": {
                "fragments": [],
                "text": "Approximate range searching"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "It is shown that if one is willing to allow approximate ranges, then it is possible to do much better than current state-of-the-art results, and empirical evidence is given showing that allowing small relative errors can significantly improve query execution times."
            },
            "venue": {
                "fragments": [],
                "text": "SCG '95"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1759659"
                        ],
                        "name": "M. Golin",
                        "slug": "M.-Golin",
                        "structuredName": {
                            "firstName": "Mordecai",
                            "lastName": "Golin",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Golin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1685583"
                        ],
                        "name": "R. Raman",
                        "slug": "R.-Raman",
                        "structuredName": {
                            "firstName": "Rajeev",
                            "lastName": "Raman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Raman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38509652"
                        ],
                        "name": "Christian Schwarz",
                        "slug": "Christian-Schwarz",
                        "structuredName": {
                            "firstName": "Christian",
                            "lastName": "Schwarz",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Christian Schwarz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144426843"
                        ],
                        "name": "M. Smid",
                        "slug": "M.-Smid",
                        "structuredName": {
                            "firstName": "Michiel",
                            "lastName": "Smid",
                            "middleNames": [
                                "H.",
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Smid"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 1242364,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "bccb6da207c3c264f1c3f2c7152ed651eb7519e0",
            "isKey": false,
            "numCitedBy": 27,
            "numCiting": 36,
            "paperAbstract": {
                "fragments": [],
                "text": "We describe a new randomized data structure, the sparse partition, for solving the dynamic closest-pair problem. Using this data structure the closest pair of a set of n points in D-dimensional space, for any fixed D, can be found in constant time. If a frame containing all the points is known in advance, and if the floor function is available at unit cost, then the data structure supports insertions into and deletions from the set in expected O(log n) time and requires expected O(n) space. This method is more efficient than any deterministic algorithm for solving the problem in dimension D > 1. The data structure can be modified to run in O(log2 n) expected time per update in the algebraic computation tree model. Even this version is more efficient than the best currently known deterministic algorithm for D > 2. Both results assume that the sequence of updates is not determined in any way by the random choices made by the algorithm."
            },
            "slug": "Randomized-data-structures-for-the-dynamic-problem-Golin-Raman",
            "title": {
                "fragments": [],
                "text": "Randomized data structures for the dynamic closest-pair problem"
            },
            "tldr": {
                "abstractSimilarityScore": 94,
                "text": "A new randomized data structure, the sparse partition, is described for solving the dynamic closest-pair problem, using this data structure the closest pair of a set of n points in D-dimensional space, for any fixed D, can be found in constant time."
            },
            "venue": {
                "fragments": [],
                "text": "SODA '93"
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2255755"
                        ],
                        "name": "P. M. Vaidya",
                        "slug": "P.-M.-Vaidya",
                        "structuredName": {
                            "firstName": "Pravin",
                            "lastName": "Vaidya",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. M. Vaidya"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 39949881,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e6a8adf381ed7b980389a35fba1e04c9e3bc9319",
            "isKey": false,
            "numCitedBy": 244,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "Given a setV ofn points ink-dimensional space, and anLq-metric (Minkowski metric), the all-nearest-neighbors problem is defined as follows: for each pointp inV, find all those points inV\u2212{p} that are closest top under the distance metricLq. We give anO(n logn) algorithm for the all-nearest-neighbors problem, for fixed dimensionk and fixed metricLq. Since there is an \u0398(n logn) lower bound, in the algebraic decision-tree model of computation, on the time complexity of any algorithm that solves the all-nearest-neighbors problem (fork=1), the running time of our algorithm is optimal up to a constant factor."
            },
            "slug": "AnO(n-logn)-algorithm-for-the-all-nearest-neighbors-Vaidya",
            "title": {
                "fragments": [],
                "text": "AnO(n logn) algorithm for the all-nearest-neighbors Problem"
            },
            "tldr": {
                "abstractSimilarityScore": 50,
                "text": "This work gives anO(n logn) algorithm for the all-nearest-neighbors problem, for fixed dimensionk and fixed metricLq, which is optimal up to a constant factor."
            },
            "venue": {
                "fragments": [],
                "text": "Discret. Comput. Geom."
            },
            "year": 1989
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1752732"
                        ],
                        "name": "T. Cover",
                        "slug": "T.-Cover",
                        "structuredName": {
                            "firstName": "Thomas",
                            "lastName": "Cover",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Cover"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3108177"
                        ],
                        "name": "P. Hart",
                        "slug": "P.-Hart",
                        "structuredName": {
                            "firstName": "Peter",
                            "lastName": "Hart",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Hart"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 165,
                                "start": 146
                            }
                        ],
                        "text": "\u2026problem in a variety of applications, including knowledge \ndiscovery and data mining [Fayyad et al. 1996] pattern recognition and classification [Cover and Hart \n1967; Duda and Hart 1973], machine learning [Cost and Salzberg 1993], data compression [Gersho and Gray \n1991], multimedia databases\u2026"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 5246200,
            "fieldsOfStudy": [
                "Computer Science",
                "Mathematics"
            ],
            "id": "0efb841403aa6252b39ae6975c1cc5410554ef7b",
            "isKey": false,
            "numCitedBy": 10767,
            "numCiting": 9,
            "paperAbstract": {
                "fragments": [],
                "text": "The nearest neighbor decision rule assigns to an unclassified sample point the classification of the nearest of a set of previously classified points. This rule is independent of the underlying joint distribution on the sample points and their classifications, and hence the probability of error R of such a rule must be at least as great as the Bayes probability of error R^{\\ast} --the minimum probability of error over all decision rules taking underlying probability structure into account. However, in a large sample analysis, we will show in the M -category case that R^{\\ast} \\leq R \\leq R^{\\ast}(2 --MR^{\\ast}/(M-1)) , where these bounds are the tightest possible, for all suitably smooth underlying distributions. Thus for any number of categories, the probability of error of the nearest neighbor rule is bounded above by twice the Bayes probability of error. In this sense, it may be said that half the classification information in an infinite sample set is contained in the nearest neighbor."
            },
            "slug": "Nearest-neighbor-pattern-classification-Cover-Hart",
            "title": {
                "fragments": [],
                "text": "Nearest neighbor pattern classification"
            },
            "tldr": {
                "abstractSimilarityScore": 75,
                "text": "The nearest neighbor decision rule assigns to an unclassified sample point the classification of the nearest of a set of previously classified points, so it may be said that half the classification information in an infinite sample set is contained in the nearest neighbor."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Trans. Inf. Theory"
            },
            "year": 1967
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1773654"
                        ],
                        "name": "P. Callahan",
                        "slug": "P.-Callahan",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Callahan",
                            "middleNames": [
                                "B."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Callahan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144777785"
                        ],
                        "name": "S. Kosaraju",
                        "slug": "S.-Kosaraju",
                        "structuredName": {
                            "firstName": "S.",
                            "lastName": "Kosaraju",
                            "middleNames": [
                                "Rao"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kosaraju"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 126,
                                "start": 100
                            }
                        ],
                        "text": "This data structure is similar to balanced structures based on box-decomposition [Bern et al. 1993; Callahan \nand Kosaraju 1992; Bespamyatnikh 1995], but there are a few new elements that have been included for \nthe purposes of nearest neighbor searching and practical efficiency."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 15908756,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "95bb898ad004f057a6a67768d38d4bc53b750aaf",
            "isKey": false,
            "numCitedBy": 48,
            "numCiting": 25,
            "paperAbstract": {
                "fragments": [],
                "text": "We define the notion of a <italic>well-separated pair decomposition</italic> of points in <italic>d</italic>-dimensional space. We develop efficient sequential and parallel algorithms for computing such a decomposition. We apply the resulting decomposition to the efficient computation of <italic>k</italic>-nearest neighbors and <italic>n</italic>-body potential fields."
            },
            "slug": "A-decomposition-of-multi-dimensional-point-sets-to-Callahan-Kosaraju",
            "title": {
                "fragments": [],
                "text": "A decomposition of multi-dimensional point-sets with applications to k-nearest-neighbors and n-body potential fields (preliminary version)"
            },
            "tldr": {
                "abstractSimilarityScore": 59,
                "text": "The notion of a well-separated pair decomposition of points in d-dimensional space is defined and the resulting decomposition is applied to the efficient computation of nearest neighbors and body potential fields."
            },
            "venue": {
                "fragments": [],
                "text": "STOC '92"
            },
            "year": 1992
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "51390408"
                        ],
                        "name": "Sergei N. Bespamyatnikh",
                        "slug": "Sergei-N.-Bespamyatnikh",
                        "structuredName": {
                            "firstName": "Sergei",
                            "lastName": "Bespamyatnikh",
                            "middleNames": [
                                "N."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sergei N. Bespamyatnikh"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 16150334,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "21557df3a9c44adc8d755c2c50d856c4af365037",
            "isKey": false,
            "numCitedBy": 56,
            "numCiting": 39,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract. Given a set S of n points in {k} -dimensional space, and an Lt metric, the dynamic closest-pair problem is defined as follows: find a closest pair of S after each update of S (the insertion or the deletion of a point). For fixed dimension {k} and fixed metric Lt , we give a data structure of size O(n) that maintains a closest pair of S in O(log n) time per insertion and deletion. The running time of the algorithm is optimal up to a constant factor because \u03a9 (log n) is a lower bound, in an algebraic decision-tree model of computation, on the time complexity of any algorithm that maintains the closest pair (for k=1 ). The algorithm is based on the fair-split tree. The constant factor in the update time is exponential in the dimension. We modify the fair-split tree to reduce it."
            },
            "slug": "An-Optimal-Algorithm-for-Closest-Pair-Maintenance-Bespamyatnikh",
            "title": {
                "fragments": [],
                "text": "An Optimal Algorithm for Closest-Pair Maintenance"
            },
            "tldr": {
                "abstractSimilarityScore": 47,
                "text": "A data structure is given of size O(n) that maintains a closest pair of S in O(log n) time per insertion and deletion of a point, based on the fair-split tree."
            },
            "venue": {
                "fragments": [],
                "text": "SoCG 1995"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1773654"
                        ],
                        "name": "P. Callahan",
                        "slug": "P.-Callahan",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Callahan",
                            "middleNames": [
                                "B."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Callahan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144777785"
                        ],
                        "name": "S. Kosaraju",
                        "slug": "S.-Kosaraju",
                        "structuredName": {
                            "firstName": "S.",
                            "lastName": "Kosaraju",
                            "middleNames": [
                                "Rao"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kosaraju"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 126,
                                "start": 100
                            }
                        ],
                        "text": "This data structure is similar to balanced structures based on box-decomposition [Bern et al. 1993; Callahan \nand Kosaraju 1992; Bespamyatnikh 1995], but there are a few new elements that have been included for \nthe purposes of nearest neighbor searching and practical efficiency."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 1818562,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "18b8949d09166a711211275aefc7623dfea5361d",
            "isKey": false,
            "numCitedBy": 519,
            "numCiting": 46,
            "paperAbstract": {
                "fragments": [],
                "text": "We define the notion of a <italic>well-separated pair decomposition</italic> of points in <italic>d</italic>-dimensional space. We then develop efficient sequential and parallel algorithms for computing such a decomposition. We apply the resulting decomposition to the efficient computation of <italic>k</italic>-nearest neighbors and <italic>n</italic>-body potential fields."
            },
            "slug": "A-decomposition-of-multidimensional-point-sets-with-Callahan-Kosaraju",
            "title": {
                "fragments": [],
                "text": "A decomposition of multidimensional point sets with applications to k-nearest-neighbors and n-body potential fields"
            },
            "tldr": {
                "abstractSimilarityScore": 59,
                "text": "The notion of a well-separated pair decomposition of points in d-dimensional space is defined and the resulting decomposition is applied to the efficient computation of nearest neighbors and body potential fields."
            },
            "venue": {
                "fragments": [],
                "text": "JACM"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1688317"
                        ],
                        "name": "P. Indyk",
                        "slug": "P.-Indyk",
                        "structuredName": {
                            "firstName": "Piotr",
                            "lastName": "Indyk",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Indyk"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "84095744"
                        ],
                        "name": "R. Motwani",
                        "slug": "R.-Motwani",
                        "structuredName": {
                            "firstName": "Rajeev",
                            "lastName": "Motwani",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Motwani"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 6110572,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "1955266a8a58d94e41ad0efe20d707c92a069e95",
            "isKey": false,
            "numCitedBy": 4273,
            "numCiting": 160,
            "paperAbstract": {
                "fragments": [],
                "text": "We present two algorithms for the approximate nearest neighbor problem in high-dimensional spaces. For data sets of size n living in R d , the algorithms require space that is only polynomial in n and d, while achieving query times that are sub-linear in n and polynomial in d. We also show applications to other high-dimensional geometric problems, such as the approximate minimum spanning tree. The article is based on the material from the authors' STOC'98 and FOCS'01 papers. It unifies, generalizes and simplifies the results from those papers."
            },
            "slug": "Approximate-nearest-neighbors:-towards-removing-the-Indyk-Motwani",
            "title": {
                "fragments": [],
                "text": "Approximate nearest neighbors: towards removing the curse of dimensionality"
            },
            "tldr": {
                "abstractSimilarityScore": 79,
                "text": "Two algorithms for the approximate nearest neighbor problem in high-dimensional spaces are presented, which require space that is only polynomial in n and d, while achieving query times that are sub-linear inn and polynometric in d."
            },
            "venue": {
                "fragments": [],
                "text": "STOC '98"
            },
            "year": 1998
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1734183"
                        ],
                        "name": "N. Roussopoulos",
                        "slug": "N.-Roussopoulos",
                        "structuredName": {
                            "firstName": "Nick",
                            "lastName": "Roussopoulos",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Roussopoulos"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "152678519"
                        ],
                        "name": "Stephen Kelley",
                        "slug": "Stephen-Kelley",
                        "structuredName": {
                            "firstName": "Stephen",
                            "lastName": "Kelley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Stephen Kelley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32265381"
                        ],
                        "name": "F. Vincent",
                        "slug": "F.-Vincent",
                        "structuredName": {
                            "firstName": "Fr\u00e9d\u00e9ic",
                            "lastName": "Vincent",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Vincent"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 9396970,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "200ffb6ad03482850c6a574848fa4ed24c4175d2",
            "isKey": false,
            "numCitedBy": 1580,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "A frequently encountered type of query in Geographic Information Systems is to find the k nearest neighbor objects to a given point in space. Processing such queries requires substantially different search algorithms than those for location or range queries. In this paper we present an efficient branch-and-bound R-tree traversal algorithm to find the nearest neighbor object to a point, and then generalize it to finding the k nearest neighbors. We also discuss metrics for an optimistic and a pessimistic search ordering strategy as well as for pruning. Finally, we present the results of several experiments obtained using the implementation of our algorithm and examine the behavior of the metrics and the scalability of the algorithm."
            },
            "slug": "Nearest-neighbor-queries-Roussopoulos-Kelley",
            "title": {
                "fragments": [],
                "text": "Nearest neighbor queries"
            },
            "tldr": {
                "abstractSimilarityScore": 53,
                "text": "This paper presents an efficient branch-and-bound R-tree traversal algorithm to find the nearest neighbor object to a point, and then generalizes it to finding the k nearest neighbors."
            },
            "venue": {
                "fragments": [],
                "text": "SIGMOD '95"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1773654"
                        ],
                        "name": "P. Callahan",
                        "slug": "P.-Callahan",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Callahan",
                            "middleNames": [
                                "B."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Callahan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144777785"
                        ],
                        "name": "S. Kosaraju",
                        "slug": "S.-Kosaraju",
                        "structuredName": {
                            "firstName": "S.",
                            "lastName": "Kosaraju",
                            "middleNames": [
                                "Rao"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kosaraju"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 12020834,
            "fieldsOfStudy": [
                "Computer Science",
                "Mathematics"
            ],
            "id": "3551d9bbd155ef220d6de20263609ac2d5516eef",
            "isKey": false,
            "numCitedBy": 55,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a general technique for dynamizing certain problems posed on point sets in Euclidean space for any fixed dimension d. This technique applies to a large class of structurally similar algorithms, presented previously by the authors, that make use of the well-separated pair decomposition. We prove efficient worst-case complexity for maintaining such computations under point insertions and deletions, and apply the technique to several problems posed on a set P containing n points. In particular, we show how to answer a query for any point x, that returns a constant-size set of points, a subset of which consists of all points in P that have x as a nearest neighbor. We then show how to use such queries to maintain the closest pair of points in P. We also show how to dynamize the fast multipole method, a technique for approximating the potential field of a set of point charges. All our algorithms use the algebraic model that is standard in computational geometry, and have worst-case deterministic O(log2 n) complexity for updates and queries."
            },
            "slug": "Algorithms-for-dynamic-closest-pair-and-n-body-Callahan-Kosaraju",
            "title": {
                "fragments": [],
                "text": "Algorithms for dynamic closest pair and n-body potential fields"
            },
            "tldr": {
                "abstractSimilarityScore": 64,
                "text": "This work presents a general technique for dynamizing certain problems posed on point sets in Euclidean space for any fixed dimension d, and shows how to answer a query for any point x, that returns a constant-size set of points, a subset of which consists of all points in P that have x as a nearest neighbor."
            },
            "venue": {
                "fragments": [],
                "text": "SODA '95"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1693008"
                        ],
                        "name": "M. Bern",
                        "slug": "M.-Bern",
                        "structuredName": {
                            "firstName": "Marshall",
                            "lastName": "Bern",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Bern"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 36,
                                "start": 4
                            }
                        ],
                        "text": "See Bern, Eppstein, and Teng [1993] for a solution to this problem based on a bitinterleaving technique."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 80,
                                "start": 64
                            }
                        ],
                        "text": "These include PRquadtrees (see Samet [1990]), and structures by Clarkson [1983], Feder and Greene [1988], Vaidya [1989], Callahan and Kosaraju [1992], and Bern [1993], among others."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 38698629,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "97c05df71d051313bcdd0b20c2b8697897b794d0",
            "isKey": false,
            "numCitedBy": 87,
            "numCiting": 7,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Approximate-Closest-Point-Queries-in-High-Bern",
            "title": {
                "fragments": [],
                "text": "Approximate Closest-Point Queries in High Dimensions"
            },
            "venue": {
                "fragments": [],
                "text": "Inf. Process. Lett."
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1696575"
                        ],
                        "name": "J. Bentley",
                        "slug": "J.-Bentley",
                        "structuredName": {
                            "firstName": "Jon",
                            "lastName": "Bentley",
                            "middleNames": [
                                "Louis"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Bentley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2340973"
                        ],
                        "name": "B. Weide",
                        "slug": "B.-Weide",
                        "structuredName": {
                            "firstName": "Bruce",
                            "lastName": "Weide",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Weide"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1770729"
                        ],
                        "name": "A. Yao",
                        "slug": "A.-Yao",
                        "structuredName": {
                            "firstName": "Andrew",
                            "lastName": "Yao",
                            "middleNames": [
                                "Chi-Chih"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Yao"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 17238717,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3a605074d255fff17d49c2f794e45e29261d204c",
            "isKey": false,
            "numCitedBy": 333,
            "numCiting": 50,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : Geometric closest-point problems deal with the proximity relationships in k-dimensional point sets. Examples of closest-point problems include building minimum spanning trees, nearest neighbor searching, and triangulation construction. Shamos and Hoey (1975) have shown how the Voronoi diagram can be used to solve a number of planar closest-point problems in optimal worst-case time. In this paper we extend their work by giving optimal expected-time algorithms for solving a number of closest-point problems in k- space, including nearest neighbor searching, finding all nearest neighbors, and computing planar minimum spanning trees. In addition to establishing theoretical bounds, the algorithms in this paper can be implemented to solve practical problems very efficiently."
            },
            "slug": "Optimal-Expected-Time-Algorithms-for-Closest-Point-Bentley-Weide",
            "title": {
                "fragments": [],
                "text": "Optimal Expected-Time Algorithms for Closest Point Problems"
            },
            "tldr": {
                "abstractSimilarityScore": 48,
                "text": "Algorithms for solving a number of closest-point problems in k- space, including nearest neighbor searching, finding all nearest neighbors, and computing planar minimum spanning trees can be implemented to solve practical problems very efficiently."
            },
            "venue": {
                "fragments": [],
                "text": "TOMS"
            },
            "year": 1980
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1730838"
                        ],
                        "name": "B. Chazelle",
                        "slug": "B.-Chazelle",
                        "structuredName": {
                            "firstName": "Bernard",
                            "lastName": "Chazelle",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Chazelle"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 14232738,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "8c38382f681598e77a2e539473ac9d91b2d7a2d3",
            "isKey": false,
            "numCitedBy": 278,
            "numCiting": 18,
            "paperAbstract": {
                "fragments": [],
                "text": "Let P be a simple polygon with N vertices, each being assigned a weight \u2208 {0,1}, and let C, the weight of P, be the added weight of all vertices. We prove that it is possible, in O(N) time, to find two vertices a,b in P, such that the segment ab lies entirely inside the polygon P and partitions it into two polygons, each with a weight not exceeding 2C/3. This computation assumes that all the vertices have been sorted along some axis, which can be done in O(Nlog N) time. We use this result to derive a number of efficient divide-and-conquer algorithms for: 1. Triangulating an N-gon in O(Nlog N) time. 2. Decomposing an N-gon into (few) convex pieces in O(Nlog N) time. 3. Given an O(Nlog N) preprocessing, computing the shortest distance between two arbitrary points inside an N-gon (i.e., the internal distance), in O(N) time. 4. Computing the longest internal path in an N-gon in O(N2) time. In all cases, the algorithms achieve significant improvements over previously known methods, either by displaying better performance or by gaining in simplicity. In particular, the best algorithms for Problems 2,3,4, known so far, performed respectively in O(N2), O(N2), and O(N4) time."
            },
            "slug": "A-theorem-on-polygon-cutting-with-applications-Chazelle",
            "title": {
                "fragments": [],
                "text": "A theorem on polygon cutting with applications"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "It is proved that it is possible, in O(N) time, to find two vertices a,b in P, such that the segment ab lies entirely inside the polygon P and partitions it into two polygons, each with a weight not exceeding 2C/3."
            },
            "venue": {
                "fragments": [],
                "text": "23rd Annual Symposium on Foundations of Computer Science (sfcs 1982)"
            },
            "year": 1982
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2477489"
                        ],
                        "name": "L. Devroye",
                        "slug": "L.-Devroye",
                        "structuredName": {
                            "firstName": "Luc",
                            "lastName": "Devroye",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Devroye"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1940156"
                        ],
                        "name": "T. Wagner",
                        "slug": "T.-Wagner",
                        "structuredName": {
                            "firstName": "Terry",
                            "lastName": "Wagner",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Wagner"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 287,
                                "start": 264
                            }
                        ],
                        "text": "\u2026recognition and classification [Cover and Hart \n1967; Duda and Hart 1973], machine learning [Cost and Salzberg 1993], data compression [Gersho and Gray \n1991], multimedia databases [Flickner et al. 1995], document retrieval [Deer\u00adwester et al. 1990], and \nstatistics [Devroye and Wagner 1982]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 118740941,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "6369dc4be83918fd1e9249947ab9fd9dec7115d4",
            "isKey": false,
            "numCitedBy": 79,
            "numCiting": 11,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "8-Nearest-neighbor-methods-in-discrimination-Devroye-Wagner",
            "title": {
                "fragments": [],
                "text": "8 Nearest neighbor methods in discrimination"
            },
            "venue": {
                "fragments": [],
                "text": "Classification, Pattern Recognition and Reduction of Dimensionality"
            },
            "year": 1982
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1752317"
                        ],
                        "name": "J. Cleary",
                        "slug": "J.-Cleary",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Cleary",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Cleary"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 8362021,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f31292e07619900b0ac70ceea6245756fa761d7c",
            "isKey": false,
            "numCitedBy": 67,
            "numCiting": 18,
            "paperAbstract": {
                "fragments": [],
                "text": "An analysis of Elias's algorithm for finding nearest nmghbors is made in n-dimensional Euclidean space. An expressmn for the executmn time is obtained when the data points being searched are grouped by arbitrary regular partitions. A lower bound corresponding to spherical partitions as obtained where the executmn tune increases exponentmlly with increasing dimensmn. The best known approach to th~s lower bound is the cubic par tmon whmh lies within 10 percent for dimensions 2 and 3 but whmh rapidly diverges for higher dimensions. The number of data points examined during a search is shown to be independent of the total number of data points."
            },
            "slug": "Analysis-of-an-Algorithm-for-Finding-Nearest-in-Cleary",
            "title": {
                "fragments": [],
                "text": "Analysis of an Algorithm for Finding Nearest Neighbors in Euclidean Space"
            },
            "tldr": {
                "abstractSimilarityScore": 67,
                "text": "An analysis of Elias's algorithm for finding nearest nmghbors is made in n-dimensional Euclidean space and a lower bound corresponding to spherical partitions as obtained where the executmn tune increases exponentmlly with increasing dimensmn."
            },
            "venue": {
                "fragments": [],
                "text": "TOMS"
            },
            "year": 1979
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1724709"
                        ],
                        "name": "S. Arya",
                        "slug": "S.-Arya",
                        "structuredName": {
                            "firstName": "Sunil",
                            "lastName": "Arya",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Arya"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709509"
                        ],
                        "name": "D. Mount",
                        "slug": "D.-Mount",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Mount",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Mount"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 2172726,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "dd54dc35e710adeb60a213724040fe18fae6bd28",
            "isKey": false,
            "numCitedBy": 178,
            "numCiting": 32,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper shows that if one is willing to relax the requirement of finding the true nearest neighbor, it is possible to achieve significant improvements in running time and at only a very small loss in the performance of the vector quantizer. The authors present three algorithms for nearest neighbor searching: standard and priority k-d tree search algorithms and a neighborhood graph search algorithm in which a directed graph is constructed for the point set and edges join neighboring points.<<ETX>>"
            },
            "slug": "Algorithms-for-fast-vector-quantization-Arya-Mount",
            "title": {
                "fragments": [],
                "text": "Algorithms for fast vector quantization"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "This paper shows that if one is willing to relax the requirement of finding the true nearest neighbor, it is possible to achieve significant improvements in running time and at only a very small loss in the performance of the vector quantizer."
            },
            "venue": {
                "fragments": [],
                "text": "[Proceedings] DCC `93: Data Compression Conference"
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2055593"
                        ],
                        "name": "K. Clarkson",
                        "slug": "K.-Clarkson",
                        "structuredName": {
                            "firstName": "Kenneth",
                            "lastName": "Clarkson",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Clarkson"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 16665268,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "7e3b8a510f0509779df5ddcb32253c9f492b5619",
            "isKey": false,
            "numCitedBy": 163,
            "numCiting": 20,
            "paperAbstract": {
                "fragments": [],
                "text": "The basic approach to algorithm ANNs, as well as to all of the algorithms presented here, is to use a cell technique ([BWY], [BFP]). The region containing the input points is partitioned into equal-sized cubic cells. 'rhe distance from a point to its nearest neighbors is bounded using the distance of the cell cont.aining the point to the nearest cell also occupied by a point. This bound is improved by refining the. cellular partition into smaller and smaBer cubic cells. Computational effort at each step is saved by storing, for each cell occupied by at least one point, a set of nearest neigh.bor occupied cells: those cells that contain points that might be nearest neighbors to the points in the cell."
            },
            "slug": "Fast-algorithms-for-the-all-nearest-neighbors-Clarkson",
            "title": {
                "fragments": [],
                "text": "Fast algorithms for the all nearest neighbors problem"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "The basic approach to algorithm ANNs, as well as to all of the algorithms presented here, is to use a cell technique ([BWY], [BFP])."
            },
            "venue": {
                "fragments": [],
                "text": "24th Annual Symposium on Foundations of Computer Science (sfcs 1983)"
            },
            "year": 1983
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1695229"
                        ],
                        "name": "Hans-Peter Lenhof",
                        "slug": "Hans-Peter-Lenhof",
                        "structuredName": {
                            "firstName": "Hans-Peter",
                            "lastName": "Lenhof",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Hans-Peter Lenhof"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144426843"
                        ],
                        "name": "M. Smid",
                        "slug": "M.-Smid",
                        "structuredName": {
                            "firstName": "Michiel",
                            "lastName": "Smid",
                            "middleNames": [
                                "H.",
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Smid"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 6374292,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "af10432cb092c33b2733c568e663a3f99e48b883",
            "isKey": false,
            "numCitedBy": 24,
            "numCiting": 13,
            "paperAbstract": {
                "fragments": [],
                "text": "Let S be a set of n points in D-dimensional space, where D is a constant, and let k be an integer between 1 and (/sub 2//sup n/) An algorithm is given that computes the k closest pairs in the set S in O(nlogn+k) time, using O(n+k) space. The algorithm fits in the algebraic decision tree model and is, therefore, optimal.<<ETX>>"
            },
            "slug": "Enumerating-the-k-closest-pairs-optimally-Lenhof-Smid",
            "title": {
                "fragments": [],
                "text": "Enumerating the k closest pairs optimally"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "An algorithm is given that computes the k closest pairs in the set S in O(nlogn+k) time, using O(n-k) space, which is optimal and fits in the algebraic decision tree model."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings., 33rd Annual Symposium on Foundations of Computer Science"
            },
            "year": 1992
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35122748"
                        ],
                        "name": "Stefan Berchtold",
                        "slug": "Stefan-Berchtold",
                        "structuredName": {
                            "firstName": "Stefan",
                            "lastName": "Berchtold",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Stefan Berchtold"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "9106757"
                        ],
                        "name": "D. Keim",
                        "slug": "D.-Keim",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Keim",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Keim"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1688561"
                        ],
                        "name": "H. Kriegel",
                        "slug": "H.-Kriegel",
                        "structuredName": {
                            "firstName": "Hans-Peter",
                            "lastName": "Kriegel",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Kriegel"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 13554536,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "774db16a3f25a73ceda9e6ab4d5a8b8f3c40605d",
            "isKey": false,
            "numCitedBy": 1533,
            "numCiting": 52,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "The-X-tree-:-An-Index-Structure-for-Data-Berchtold-Keim",
            "title": {
                "fragments": [],
                "text": "The X-tree : An Index Structure for High-Dimensional Data"
            },
            "venue": {
                "fragments": [],
                "text": "VLDB"
            },
            "year": 1996
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1705077"
                        ],
                        "name": "P. Agarwal",
                        "slug": "P.-Agarwal",
                        "structuredName": {
                            "firstName": "Pankaj",
                            "lastName": "Agarwal",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Agarwal"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144378473"
                        ],
                        "name": "J. Matousek",
                        "slug": "J.-Matousek",
                        "structuredName": {
                            "firstName": "Jir\u00ed",
                            "lastName": "Matousek",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Matousek"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 318771,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d357c28be0303c067bbb9202e1d7f21248767ba2",
            "isKey": false,
            "numCitedBy": 130,
            "numCiting": 43,
            "paperAbstract": {
                "fragments": [],
                "text": "Efficient algorithms for the ray shooting problem are presented: Given a collection $\\Gamma $ of objects in $\\mathbb{R}^d $, build a data structure so that, for a query ray, the first object of $\\Gamma $ hit by the ray can be quickly determined. Using the parametric search technique, this problem is reduced to the segment emptiness problem. For various ray shooting problems, space/query-time trade-offs of the following type are achieved: For some integer b and a parameter $m(n \\leqslant m \\leqslant n^b )$ the queries are answered in time $O(({n / {m^{{1 / b}} }})\\log ^{O(1)} n)$, with $O(m^{1 + \\varepsilon } )$ space and preprocessing time ($\\varepsilon > 0$ is arbitrarily small but fixed constant). $b = \\lfloor {{d / 2}} \\rfloor $ is obtained for ray shooting in a convex d-polytope defined as an intersection of n half spaces, $b = d$ for an arrangement of n hyperplanes in $\\mathbb{R}^d $, and $b = 3$ for an arrangement of n half planes in $\\mathbb{R}^3 $. This approach also yields fast procedures for fin..."
            },
            "slug": "Ray-shooting-and-parametric-search-Agarwal-Matousek",
            "title": {
                "fragments": [],
                "text": "Ray shooting and parametric search"
            },
            "tldr": {
                "abstractSimilarityScore": 63,
                "text": "Efficient algorithms for the ray shooting problem are presented, and the parametric search technique is reduced to the segment emptiness problem."
            },
            "venue": {
                "fragments": [],
                "text": "STOC '92"
            },
            "year": 1992
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3056361"
                        ],
                        "name": "J. Friedman",
                        "slug": "J.-Friedman",
                        "structuredName": {
                            "firstName": "Jerome",
                            "lastName": "Friedman",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Friedman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1696575"
                        ],
                        "name": "J. Bentley",
                        "slug": "J.-Bentley",
                        "structuredName": {
                            "firstName": "Jon",
                            "lastName": "Bentley",
                            "middleNames": [
                                "Louis"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Bentley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2236311"
                        ],
                        "name": "R. Finkel",
                        "slug": "R.-Finkel",
                        "structuredName": {
                            "firstName": "Raphael",
                            "lastName": "Finkel",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Finkel"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 10811510,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "cab3c73f1b2140231b98944c720100b356d91b28",
            "isKey": false,
            "numCitedBy": 2964,
            "numCiting": 19,
            "paperAbstract": {
                "fragments": [],
                "text": "An algorithm and data structure are presented for searching a file containing N records, each described by k real valued keys, for the m closest matches or nearest neighbors to a given query record. The computation required to organize the file is proportional to kNlogN. The expected number of records examined in each search is independent of the file size. The expected computation to perform each search is proportional to logN. Empirical evidence suggests that except for very small files, this algorithm is considerably faster than other methods."
            },
            "slug": "An-Algorithm-for-Finding-Best-Matches-in-Expected-Friedman-Bentley",
            "title": {
                "fragments": [],
                "text": "An Algorithm for Finding Best Matches in Logarithmic Expected Time"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "An algorithm and data structure are presented for searching a file containing N records, each described by k real valued keys, for the m closest matches or nearest neighbors to a given query record."
            },
            "venue": {
                "fragments": [],
                "text": "TOMS"
            },
            "year": 1977
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143626389"
                        ],
                        "name": "M. Soleymani",
                        "slug": "M.-Soleymani",
                        "structuredName": {
                            "firstName": "Mohammad",
                            "lastName": "Soleymani",
                            "middleNames": [
                                "Reza"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Soleymani"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34677154"
                        ],
                        "name": "S. Morgera",
                        "slug": "S.-Morgera",
                        "structuredName": {
                            "firstName": "Salvatore",
                            "lastName": "Morgera",
                            "middleNames": [
                                "Domenic"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Morgera"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 21202383,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "df04b841671b17959b1663cdc0c119ab824830dc",
            "isKey": false,
            "numCitedBy": 71,
            "numCiting": 6,
            "paperAbstract": {
                "fragments": [],
                "text": "A simple, but efficient, nearest neighbor search algorithm is proposed and simulation results demonstrating its effectiveness in the case of vector quantization for a given source are presented. The simulation results indicate that use of this approach reduces the number of multiplications and additions to as low as 9 percent of those required for the conventional full search method. The reduction in the number of subtractions is also considerable. The increase in the number of comparisons is moderate, and therefore, the total number of operations can be as low as 28 percent of those required by the full search method. An additional advantage of the described algorithm is the fact that it requires no precomputations and/or extra memory."
            },
            "slug": "An-Efficient-Nearest-Neighbor-Search-Method-Soleymani-Morgera",
            "title": {
                "fragments": [],
                "text": "An Efficient Nearest Neighbor Search Method"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "A simple, but efficient, nearest neighbor search algorithm is proposed and simulation results demonstrating its effectiveness in the case of vector quantization for a given source are presented."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Trans. Commun."
            },
            "year": 1987
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2095868683"
                        ],
                        "name": "Igal Galperin",
                        "slug": "Igal-Galperin",
                        "structuredName": {
                            "firstName": "Igal",
                            "lastName": "Galperin",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Igal Galperin"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2113911099"
                        ],
                        "name": "R. Rivest",
                        "slug": "R.-Rivest",
                        "structuredName": {
                            "firstName": "Ronald",
                            "lastName": "Rivest",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Rivest"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 15184469,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a82a2d4de97a13b048944ebfceb882377d8f0e60",
            "isKey": false,
            "numCitedBy": 65,
            "numCiting": 11,
            "paperAbstract": {
                "fragments": [],
                "text": "We present an algorithm for maintaining binary search trees. The amortized complexity per INSERT or DELETE is O(log n) while the worst-case cost of a SEARCH is O(log n). Scapegoat trees, unlike most balanced-tree schemes, do not require keeping extra data (e.g. \u201ccolors\u201d or \u201cweights\u201d) in the tree nodes. Each node in the tree contains only a key value and pointers. to its two children. Associated with the root of the whole tree are the only two extra values needed by the scapegoat scheme: the number of nodes in the whole tree, and the maximum number of nodes in the tree since the tree was last completely rebuilt. In a scapegoat tree a typical rebalancing operation begins at a leaf, and successively examines higher ancestors until a node (the \u201cscapegoat\u201d) is found that is so unbalanced that the entire subtree rooted at the scapegoat can be rebuilt at zero cost, in an amortized sense. Hence the name."
            },
            "slug": "Scapegoat-trees-Galperin-Rivest",
            "title": {
                "fragments": [],
                "text": "Scapegoat trees"
            },
            "tldr": {
                "abstractSimilarityScore": 57,
                "text": "An algorithm for maintaining binary search trees with scapegoat trees, where a node is found that is so unbalanced that the entire subtree rooted at the scapegoat can be rebuilt at zero cost, in an amortized sense."
            },
            "venue": {
                "fragments": [],
                "text": "SODA '93"
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1709509"
                        ],
                        "name": "D. Mount",
                        "slug": "D.-Mount",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Mount",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Mount"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1712586"
                        ],
                        "name": "N. Netanyahu",
                        "slug": "N.-Netanyahu",
                        "structuredName": {
                            "firstName": "Nathan",
                            "lastName": "Netanyahu",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Netanyahu"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37746341"
                        ],
                        "name": "R. Silverman",
                        "slug": "R.-Silverman",
                        "structuredName": {
                            "firstName": "Ruth",
                            "lastName": "Silverman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Silverman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1736712"
                        ],
                        "name": "A. Wu",
                        "slug": "A.-Wu",
                        "structuredName": {
                            "firstName": "Angela",
                            "lastName": "Wu",
                            "middleNames": [
                                "Y."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Wu"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 213,
                                "start": 196
                            }
                        ],
                        "text": "The size reduction property mentioned in Theorem 2(ii) \nis not used in this paper, but it is important in other applications of BBD-trees for geometric approximation \nproblems [Arya and Mount 1995; Mount et al. 1995]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 214,
                                "start": 174
                            }
                        ],
                        "text": "The size reduction property mentioned in Theorem 2(ii) is not used in this paper, but it is important in other applications of BBD-trees for geometric approximation problems [Arya and Mount 1995; Mount et al. 1995]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 6506663,
            "fieldsOfStudy": [
                "History"
            ],
            "id": "4111d52a969afa4e3e96c836558bc08255c8ce95",
            "isKey": false,
            "numCitedBy": 16,
            "numCiting": 45,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Chromatic-nearest-neighbor-searching:-A-query-Mount-Netanyahu",
            "title": {
                "fragments": [],
                "text": "Chromatic nearest neighbor searching: A query sensitive approach"
            },
            "venue": {
                "fragments": [],
                "text": "Comput. Geom."
            },
            "year": 2000
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1721040"
                        ],
                        "name": "D. Sleator",
                        "slug": "D.-Sleator",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Sleator",
                            "middleNames": [
                                "Dominic"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Sleator"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1721050"
                        ],
                        "name": "R. Tarjan",
                        "slug": "R.-Tarjan",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Tarjan",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Tarjan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 15402750,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "bdd6f0e3456ff3097fea9b01346b2fe4403f84f4",
            "isKey": false,
            "numCitedBy": 864,
            "numCiting": 59,
            "paperAbstract": {
                "fragments": [],
                "text": "We propose a data structure to maintain a collection of vertex-disjoint trees under a sequence of two kinds of operations: a link operation that combines two trees into one by adding an edge, and a cut operation that divides one tree into two by deleting an edge. Our data structure requires O(log n) time per operation when the time is amortized over a sequence of operations. Using our data structure, we obtain new fast algorithms for the following problems:\n (1) Computing deepest common ancestors.\n (2) Solving various network flow problems including finding maximum flows, blocking flows, and acyclic flows.\n (3) Computing certain kinds of constrained minimum spanning trees.\n (4) Implementing the network simplex algorithm for the transshipment problem.\n Our most significant application is (2); we obtain an O(mn log n)-time algorithm to find a maximum flow in a network of n vertices and m edges, beating by a factor of log n the fastest algorithm previously known for sparse graphs."
            },
            "slug": "A-data-structure-for-dynamic-trees-Sleator-Tarjan",
            "title": {
                "fragments": [],
                "text": "A data structure for dynamic trees"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "An O(mn log n)-time algorithm is obtained to find a maximum flow in a network of n vertices and m edges, beating by a factor of log n the fastest algorithm previously known for sparse graphs."
            },
            "venue": {
                "fragments": [],
                "text": "STOC '81"
            },
            "year": 1981
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1712991"
                        ],
                        "name": "M. Flickner",
                        "slug": "M.-Flickner",
                        "structuredName": {
                            "firstName": "Myron",
                            "lastName": "Flickner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Flickner"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1733393"
                        ],
                        "name": "H. Sawhney",
                        "slug": "H.-Sawhney",
                        "structuredName": {
                            "firstName": "Harpreet",
                            "lastName": "Sawhney",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Sawhney"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "152883679"
                        ],
                        "name": "J. Ashley",
                        "slug": "J.-Ashley",
                        "structuredName": {
                            "firstName": "Jonathan",
                            "lastName": "Ashley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Ashley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1391129943"
                        ],
                        "name": "Qian Huang",
                        "slug": "Qian-Huang",
                        "structuredName": {
                            "firstName": "Qian",
                            "lastName": "Huang",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Qian Huang"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1786444"
                        ],
                        "name": "B. Dom",
                        "slug": "B.-Dom",
                        "structuredName": {
                            "firstName": "Byron",
                            "lastName": "Dom",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Dom"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2087139"
                        ],
                        "name": "M. Gorkani",
                        "slug": "M.-Gorkani",
                        "structuredName": {
                            "firstName": "Monika",
                            "lastName": "Gorkani",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Gorkani"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "39311329"
                        ],
                        "name": "J. Hafner",
                        "slug": "J.-Hafner",
                        "structuredName": {
                            "firstName": "Jim",
                            "lastName": "Hafner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Hafner"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2499047"
                        ],
                        "name": "Denis Lee",
                        "slug": "Denis-Lee",
                        "structuredName": {
                            "firstName": "Denis",
                            "lastName": "Lee",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Denis Lee"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143867341"
                        ],
                        "name": "D. Petkovic",
                        "slug": "D.-Petkovic",
                        "structuredName": {
                            "firstName": "Dragutin",
                            "lastName": "Petkovic",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Petkovic"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144028064"
                        ],
                        "name": "David Steele",
                        "slug": "David-Steele",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Steele",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David Steele"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "70341848"
                        ],
                        "name": "P. Yanker",
                        "slug": "P.-Yanker",
                        "structuredName": {
                            "firstName": "Peter",
                            "lastName": "Yanker",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Yanker"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 110716,
            "fieldsOfStudy": [
                "Computer Science",
                "Art"
            ],
            "id": "dc139f901c869f80b54b41f89d5b7f35c7dfa3c7",
            "isKey": false,
            "numCitedBy": 4257,
            "numCiting": 11,
            "paperAbstract": {
                "fragments": [],
                "text": "Research on ways to extend and improve query methods for image databases is widespread. We have developed the QBIC (Query by Image Content) system to explore content-based retrieval methods. QBIC allows queries on large image and video databases based on example images, user-constructed sketches and drawings, selected color and texture patterns, camera and object motion, and other graphical information. Two key properties of QBIC are (1) its use of image and video content-computable properties of color, texture, shape and motion of images, videos and their objects-in the queries, and (2) its graphical query language, in which queries are posed by drawing, selecting and other graphical means. This article describes the QBIC system and demonstrates its query capabilities. QBIC technology is part of several IBM products. >"
            },
            "slug": "Query-by-Image-and-Video-Content:-The-QBIC-System-Flickner-Sawhney",
            "title": {
                "fragments": [],
                "text": "Query by Image and Video Content: The QBIC System"
            },
            "tldr": {
                "abstractSimilarityScore": 50,
                "text": "The QBIC system is described and its query capabilities are demonstrated, which allows queries on large image and video databases based on example images, user-constructed sketches and drawings, selected color and texture patterns, camera and object motion, and other graphical information."
            },
            "venue": {
                "fragments": [],
                "text": "Computer"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1998737"
                        ],
                        "name": "S. Meiser",
                        "slug": "S.-Meiser",
                        "structuredName": {
                            "firstName": "Stefan",
                            "lastName": "Meiser",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Meiser"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [],
            "corpusId": 206565932,
            "fieldsOfStudy": [
                "Mathematics",
                "Computer Science"
            ],
            "id": "315740b6a610d9e263d723f31900474e84b16e65",
            "isKey": false,
            "numCitedBy": 163,
            "numCiting": 10,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a solution to the point location problem in arrangements of hyperplanes in Ed with running time O(d5 log n) and space O(nd+?) for arbitrary ? > 0, where n is the number of hyperplanes. The main result is the d5 factor in the expression for the running time. All previously known algorithms are exponential in d or log n. This leads to nonuniform polynomial algorithms for NP-complete problems."
            },
            "slug": "Point-Location-in-Arrangements-of-Hyperplanes-Meiser",
            "title": {
                "fragments": [],
                "text": "Point Location in Arrangements of Hyperplanes"
            },
            "tldr": {
                "abstractSimilarityScore": 94,
                "text": "A solution to the point location problem in arrangements of hyperplanes in Ed with running time O(d5 log n) and space O(nd+?) for arbitrary ? > 0, where n is the number ofhyperplanes."
            },
            "venue": {
                "fragments": [],
                "text": "Inf. Comput."
            },
            "year": 1993
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 291,
                                "start": 275
                            }
                        ],
                        "text": "\u2026side by at least a factor of 2/3, \nit follows that after at most d splits (i.e., at most 4d levels of the tree) the size decreases by this \nfactor. e The BBD-tree which results from this construction is quite similar to the tree described in \nthe earlier version of this paper [Arya et al. 1994]."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 97,
                                "start": 79
                            }
                        ],
                        "text": "(This is a major difference between this and the earlier version of this paper [Arya et al. 1994]."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 96,
                                "start": 80
                            }
                        ],
                        "text": "(This is \na major difference between this and the earlier version of this paper [Arya et al. 1994].)"
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 111,
                                "start": 93
                            }
                        ],
                        "text": "The midpoint algorithm is a variant of the one described in an earlier version of this paper [Arya et al. 1994], and the middle-interval algorithm is a variant of the algorithm given by Callahan and Kosaraju [1995] and developed independently by Bespamyatnikh [1995]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 94
                            }
                        ],
                        "text": "The midpoint algorithm is a variant of \nthe one described in an earlier version of this paper [Arya et al. 1994], and the middle-interval algorithm \nis a variant of the algorithm given by Callahan and Kosaraju [1995] and developed independently by Bespamyatnikh \n[1995]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 144,
                                "start": 126
                            }
                        ],
                        "text": "The BBD-tree which results from this construction is quite similar to the tree described in the earlier version of this paper [Arya et al. 1994]."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An optimal algorithm for approximate nearest neighbor searching in fixed dimensions"
            },
            "venue": {
                "fragments": [],
                "text": "Proc. 5th ACM-SIAM Sympos. Discrete Algorithms (1994), pp. 573\u2013582."
            },
            "year": 1994
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "51390408"
                        ],
                        "name": "Sergei N. Bespamyatnikh",
                        "slug": "Sergei-N.-Bespamyatnikh",
                        "structuredName": {
                            "firstName": "Sergei",
                            "lastName": "Bespamyatnikh",
                            "middleNames": [
                                "N."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Sergei N. Bespamyatnikh"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 146,
                                "start": 128
                            }
                        ],
                        "text": "This data structure is similar to balanced structures based on box-decomposition [Bern et al. 1993; Callahan \nand Kosaraju 1992; Bespamyatnikh 1995], but there are a few new elements that have been included for \nthe purposes of nearest neighbor searching and practical efficiency."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 122236122,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "ad1309688cf5604ef7514f5d3aa2e71b7a8cde65",
            "isKey": false,
            "numCitedBy": 12,
            "numCiting": 23,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "An-optimal-algorithm-for-closest-pair-maintenance-Bespamyatnikh",
            "title": {
                "fragments": [],
                "text": "An optimal algorithm for closest pair maintenance (extended abstract)"
            },
            "venue": {
                "fragments": [],
                "text": "SoCG 1995"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3056361"
                        ],
                        "name": "J. Friedman",
                        "slug": "J.-Friedman",
                        "structuredName": {
                            "firstName": "Jerome",
                            "lastName": "Friedman",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Friedman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1834116"
                        ],
                        "name": "F. Baskett",
                        "slug": "F.-Baskett",
                        "structuredName": {
                            "firstName": "Forest",
                            "lastName": "Baskett",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. Baskett"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3142925"
                        ],
                        "name": "L. J. Shustek",
                        "slug": "L.-J.-Shustek",
                        "structuredName": {
                            "firstName": "Leonard",
                            "lastName": "Shustek",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. J. Shustek"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 229,
                                "start": 209
                            }
                        ],
                        "text": "A number of methods have been \nproposed which provide relatively modest constant factor improvements (e.g., through partial distance \ncomputation [Bei and Gray 1985], or by projecting points onto a single line [Friedman et al. 1975; Guan \nand Kamel 1992; Lee and Chen 1994])."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 165,
                                "start": 103
                            }
                        ],
                        "text": ", through partial distance computation [Bei and Gray 1985], or by projecting points onto a single line [Friedman et al. 1975; Guan and Kamel 1992; Lee and Chen 1994])."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 59,
                                "start": 39
                            }
                        ],
                        "text": "First, consider the optimized kd-tree [Friedman et al. 1975]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 4574636,
            "fieldsOfStudy": [
                "Physics"
            ],
            "id": "d6656edc4271a301ae7420ef07d9690be6762567",
            "isKey": false,
            "numCitedBy": 426,
            "numCiting": 10,
            "paperAbstract": {
                "fragments": [],
                "text": "An algorithm that finds the k nearest neighbors of a point, from a sample of size N in a d-dimensional space, with an expected number of distance calculations is described, its properties examined, and the validity of the estimate verified with simulated data."
            },
            "slug": "An-Algorithm-for-Finding-Nearest-Neighbors-Friedman-Baskett",
            "title": {
                "fragments": [],
                "text": "An Algorithm for Finding Nearest Neighbors"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "An algorithm that finds the k nearest neighbors of a point, from a sample of size N in a d-dimensional space, with an expected number of distance calculations is described, its properties examined, and the validity of the estimate verified with simulated data."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Transactions on Computers"
            },
            "year": 1975
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48686588"
                        ],
                        "name": "David A. White",
                        "slug": "David-A.-White",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "White",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David A. White"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144938740"
                        ],
                        "name": "R. Jain",
                        "slug": "R.-Jain",
                        "structuredName": {
                            "firstName": "Ramesh",
                            "lastName": "Jain",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Jain"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "For example, see [Berchtold et al. 1997; Berchtold et al. 1996; Lin et al. 1994; Roussopoulos et al. 1995; White and Jain 1996]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 17181175,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c865eaeea27a742f16f14c3a45bbaefdd87a8330",
            "isKey": false,
            "numCitedBy": 787,
            "numCiting": 44,
            "paperAbstract": {
                "fragments": [],
                "text": "Efficient indexing of high dimensional feature vectors is important to allow visual information systems and a number other applications to scale up to large databases. We define this problem as \"similarity indexing\" and describe the fundamental types of \"similarity queries\" that we believe should be supported. We also propose a new dynamic structure for similarity indexing called the similarity search tree or SS-tree. In nearly every test we performed on high dimensional data, we found that this structure performed better than the R*-tree. Our tests also show that the SS-tree is much better suited for approximate queries than the R*-tree."
            },
            "slug": "Similarity-indexing-with-the-SS-tree-White-Jain",
            "title": {
                "fragments": [],
                "text": "Similarity indexing with the SS-tree"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This work describes the fundamental types of \"similarity queries\" that should be supported and proposes a new dynamic structure for similarity indexing called the similarity search tree or SS-tree, which performs better than the R*-tree in nearly every test."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the Twelfth International Conference on Data Engineering"
            },
            "year": 1996
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1719385"
                        ],
                        "name": "H. Samet",
                        "slug": "H.-Samet",
                        "structuredName": {
                            "firstName": "Hanan",
                            "lastName": "Samet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Samet"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 5147638,
            "fieldsOfStudy": [
                "Art"
            ],
            "id": "7de7722b368930284d53a059ac387c7aa9d59c76",
            "isKey": false,
            "numCitedBy": 3001,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "the design and analysis of spatial data structures addison the design and analysis of spatial data structures addison the design and analysis of spatial data structures addison the design and analysis of spatial data structures addison the design and analysis of spatial data structures addison applications of spatial data structures: computer graphics the design and analysis of spatial data structures (pdf editor: andrew s. glassner computer foundations of mathematics 10 by addison wesley bing the value of social media for predicting stock returns landscape architecture fourth edition a manual of land portland writing units grade 5 ekpbs samsung odin manual pdf pdf duckshost wheres the bee wire o journal wmcir document about oae special education 043 secrets study chapter 15 section 2 guided reading a worldwide depression private lemonade nfcqr songs made famous by tammy wynette mandv chapter 22 the great depression begins test answers shamrock cargo a story of the irish pota ekpbs tlia2050a learner guide ramonapropertymanagers 12. greene n., kass m., miller g. \u201chierarchical zbuffer the encyclopedia of the novel vmnlaw remembering and imagining palestine identity and service manual tc21da jupw websters new world basic dictionary of american english workshop manual for mercedes benz oligra"
            },
            "slug": "The-Design-and-Analysis-of-Spatial-Data-Structures-Samet",
            "title": {
                "fragments": [],
                "text": "The Design and Analysis of Spatial Data Structures"
            },
            "tldr": {
                "abstractSimilarityScore": 59,
                "text": "The design and analysis of spatial data structures and applications for predicting stock returns and remembering and imagining palestine identity and service manual are studied."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1989
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2608771"
                        ],
                        "name": "A. Gersho",
                        "slug": "A.-Gersho",
                        "structuredName": {
                            "firstName": "Allen",
                            "lastName": "Gersho",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Gersho"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144790332"
                        ],
                        "name": "R. Gray",
                        "slug": "R.-Gray",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Gray",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Gray"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 171,
                                "start": 149
                            }
                        ],
                        "text": "1996], pattern recognition and classification [Cover and Hart 1967; Duda and Hart 1973], machine learning [Cost and Salzberg 1993], data compression [Gersho and Gray 1991], multimedia databases [Flickner et al."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 169,
                                "start": 149
                            }
                        ],
                        "text": "\u20261996] pattern recognition and classification [Cover and Hart \n1967; Duda and Hart 1973], machine learning [Cost and Salzberg 1993], data compression [Gersho and Gray \n1991], multimedia databases [Flickner et al. 1995], document retrieval [Deer\u00adwester et al. 1990], and \nstatistics [Devroye and\u2026"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 118950728,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c564aa7639a08c280423489e52b6e32055c9aa7f",
            "isKey": false,
            "numCitedBy": 7027,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "1 Introduction.- 1.1 Signals, Coding, and Compression.- 1.2 Optimality.- 1.3 How to Use this Book.- 1.4 Related Reading.- I Basic Tools.- 2 Random Processes and Linear Systems.- 2.1 Introduction.- 2.2 Probability.- 2.3 Random Variables and Vectors.- 2.4 Random Processes.- 2.5 Expectation.- 2.6 Linear Systems.- 2.7 Stationary and Ergodic Properties.- 2.8 Useful Processes.- 2.9 Problems.- 3 Sampling.- 3.1 Introduction.- 3.2 Periodic Sampling.- 3.3 Noise in Sampling.- 3.4 Practical Sampling Schemes.- 3.5 Sampling Jitter.- 3.6 Multidimensional Sampling.- 3.7 Problems.- 4 Linear Prediction.- 4.1 Introduction.- 4.2 Elementary Estimation Theory.- 4.3 Finite-Memory Linear Prediction.- 4.4 Forward and Backward Prediction.- 4.5 The Levinson-Durbin Algorithm.- 4.6 Linear Predictor Design from Empirical Data.- 4.7 Minimum Delay Property.- 4.8 Predictability and Determinism.- 4.9 Infinite Memory Linear Prediction.- 4.10 Simulation of Random Processes.- 4.11 Problems.- II Scalar Coding.- 5 Scalar Quantization I.- 5.1 Introduction.- 5.2 Structure of a Quantizer.- 5.3 Measuring Quantizer Performance.- 5.4 The Uniform Quantizer.- 5.5 Nonuniform Quantization and Companding.- 5.6 High Resolution: General Case.- 5.7 Problems.- 6 Scalar Quantization II.- 6.1 Introduction.- 6.2 Conditions for Optimality.- 6.3 High Resolution Optimal Companding.- 6.4 Quantizer Design Algorithms.- 6.5 Implementation.- 6.6 Problems.- 7 Predictive Quantization.- 7.1 Introduction.- 7.2 Difference Quantization.- 7.3 Closed-Loop Predictive Quantization.- 7.4 Delta Modulation.- 7.5 Problems.- 8 Bit Allocation and Transform Coding.- 8.1 Introduction.- 8.2 The Problem of Bit Allocation.- 8.3 Optimal Bit Allocation Results.- 8.4 Integer Constrained Allocation Techniques.- 8.5 Transform Coding.- 8.6 Karhunen-Loeve Transform.- 8.7 Performance Gain of Transform Coding.- 8.8 Other Transforms.- 8.9 Sub-band Coding.- 8.10 Problems.- 9 Entropy Coding.- 9.1 Introduction.- 9.2 Variable-Length Scalar Noiseless Coding.- 9.3 Prefix Codes.- 9.4 Huffman Coding.- 9.5 Vector Entropy Coding.- 9.6 Arithmetic Coding.- 9.7 Universal and Adaptive Entropy Coding.- 9.8 Ziv-Lempel Coding.- 9.9 Quantization and Entropy Coding.- 9.10 Problems.- III Vector Coding.- 10 Vector Quantization I.- 10.1 Introduction.- 10.2 Structural Properties and Characterization.- 10.3 Measuring Vector Quantizer Performance.- 10.4 Nearest Neighbor Quantizers.- 10.5 Lattice Vector Quantizers.- 10.6 High Resolution Distortion Approximations.- 10.7 Problems.- 11 Vector Quantization II.- 11.1 Introduction.- 11.2 Optimality Conditions for VQ.- 11.3 Vector Quantizer Design.- 11.4 Design Examples.- 11.5 Problems.- 12 Constrained Vector Quantization.- 12.1 Introduction.- 12.2 Complexity and Storage Limitations.- 12.3 Structurally Constrained VQ.- 12.4 Tree-Structured VQ.- 12.5 Classified VQ.- 12.6 Transform VQ.- 12.7 Product Code Techniques.- 12.8 Partitioned VQ.- 12.9 Mean-Removed VQ.- 12.10 Shape-Gain VQ.- 12.11 Multistage VQ.- 12.12 Constrained Storage VQ.- 12.13 Hierarchical and Multiresolution VQ.- 12.14 Nonlinear Interpolative VQ.- 12.15 Lattice Codebook VQ.- 12.16 Fast Nearest Neighbor Encoding.- 12.17 Problems.- 13 Predictive Vector Quantization.- 13.1 Introduction.- 13.2 Predictive Vector Quantization.- 13.3 Vector Linear Prediction.- 13.4 Predictor Design from Empirical Data.- 13.5 Nonlinear Vector Prediction.- 13.6 Design Examples.- 13.7 Problems.- 14 Finite-State Vector Quantization.- 14.1 Recursive Vector Quantizers.- 14.2 Finite-State Vector Quantizers.- 14.3 Labeled-States and Labeled-Transitions.- 14.4 Encoder/Decoder Design.- 14.5 Next-State Function Design.- 14.6 Design Examples.- 14.7 Problems.- 15 Tree and Trellis Encoding.- 15.1 Delayed Decision Encoder.- 15.2 Tree and Trellis Coding.- 15.3 Decoder Design.- 15.4 Predictive Trellis Encoders.- 15.5 Other Design Techniques.- 15.6 Problems.- 16 Adaptive Vector Quantization.- 16.1 Introduction.- 16.2 Mean Adaptation.- 16.3 Gain-Adaptive Vector Quantization.- 16.4 Switched Codebook Adaptation.- 16.5 Adaptive Bit Allocation.- 16.6 Address VQ.- 16.7 Progressive Code Vector Updating.- 16.8 Adaptive Codebook Generation.- 16.9 Vector Excitation Coding.- 16.10 Problems.- 17 Variable Rate Vector Quantization.- 17.1 Variable Rate Coding.- 17.2 Variable Dimension VQ.- 17.3 Alternative Approaches to Variable Rate VQ.- 17.4 Pruned Tree-Structured VQ.- 17.5 The Generalized BFOS Algorithm.- 17.6 Pruned Tree-Structured VQ.- 17.7 Entropy Coded VQ.- 17.8 Greedy Tree Growing.- 17.9 Design Examples.- 17.10 Bit Allocation Revisited.- 17.11 Design Algorithms.- 17.12 Problems."
            },
            "slug": "Vector-quantization-and-signal-compression-Gersho-Gray",
            "title": {
                "fragments": [],
                "text": "Vector quantization and signal compression"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "The author explains the design and implementation of the Levinson-Durbin Algorithm, which automates the very labor-intensive and therefore time-heavy and expensive process of designing and implementing a Quantizer."
            },
            "venue": {
                "fragments": [],
                "text": "The Kluwer international series in engineering and computer science"
            },
            "year": 1991
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144012597"
                        ],
                        "name": "L. Guan",
                        "slug": "L.-Guan",
                        "structuredName": {
                            "firstName": "Lian",
                            "lastName": "Guan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Guan"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144851973"
                        ],
                        "name": "M. Kamel",
                        "slug": "M.-Kamel",
                        "structuredName": {
                            "firstName": "Mohamed",
                            "lastName": "Kamel",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Kamel"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 36505879,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0246157009e595ff6878c10748f302cfef89abb7",
            "isKey": false,
            "numCitedBy": 109,
            "numCiting": 13,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Equal-average-hyperplane-partitioning-method-for-of-Guan-Kamel",
            "title": {
                "fragments": [],
                "text": "Equal-average hyperplane partitioning method for vector quantization of image data"
            },
            "venue": {
                "fragments": [],
                "text": "Pattern Recognit. Lett."
            },
            "year": 1992
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1693008"
                        ],
                        "name": "M. Bern",
                        "slug": "M.-Bern",
                        "structuredName": {
                            "firstName": "Marshall",
                            "lastName": "Bern",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Bern"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1719358"
                        ],
                        "name": "D. Eppstein",
                        "slug": "D.-Eppstein",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Eppstein",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Eppstein"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144461956"
                        ],
                        "name": "S. Teng",
                        "slug": "S.-Teng",
                        "structuredName": {
                            "firstName": "Shang-Hua",
                            "lastName": "Teng",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Teng"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 98,
                                "start": 82
                            }
                        ],
                        "text": "This data structure is similar to balanced structures based on box-decomposition [Bern et al. 1993; Callahan \nand Kosaraju 1992; Bespamyatnikh 1995], but there are a few new elements that have been included for \nthe purposes of nearest neighbor searching and practical efficiency."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 147,
                                "start": 81
                            }
                        ],
                        "text": "This data structure is similar to balanced structures based on box-decomposition [Bern et al. 1993; Callahan and Kosaraju 1995; Bespamyatnikh 1995], but there are a few new elements that have been included for the purposes of nearest neighbor searching and practical efficiency."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 1328251,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b328be6f5df3143bb82b01cef9081122817694f6",
            "isKey": false,
            "numCitedBy": 100,
            "numCiting": 27,
            "paperAbstract": {
                "fragments": [],
                "text": "We describe efficient PRAM algorithms for constructing unbalanced quadtrees, balanced quadtrees, and quadtree-based finite element meshes. Our algorithms take time O(log n) for point set input and O(log n log k) time for planar straight-line graphs, using O(n+k/ log n) processors, where n measures input size and k output size."
            },
            "slug": "Parallel-Construction-of-Quadtrees-and-Quality-Bern-Eppstein",
            "title": {
                "fragments": [],
                "text": "Parallel Construction of Quadtrees and Quality Triangulations"
            },
            "tldr": {
                "abstractSimilarityScore": 77,
                "text": "This work describes efficient PRAM algorithms for constructing unbalanced quadtrees, balanced quadt trees, and quadtree-based finite element meshes using O(n+k/ log n) processors, where n measures input size and k output size."
            },
            "venue": {
                "fragments": [],
                "text": "WADS"
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "40363432"
                        ],
                        "name": "C. Bei",
                        "slug": "C.-Bei",
                        "structuredName": {
                            "firstName": "Chang-da",
                            "lastName": "Bei",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Bei"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144790332"
                        ],
                        "name": "R. Gray",
                        "slug": "R.-Gray",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Gray",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Gray"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 206637140,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b063670b212e3bf9b426f621dd07d57188116f33",
            "isKey": false,
            "numCitedBy": 469,
            "numCiting": 2,
            "paperAbstract": {
                "fragments": [],
                "text": "In this note we present a very simple method for improving the efficiency of minimum distortion encoding for vector quantization. Simulations indicates a reduction of up to 70 percent in the number of multiplications for a full search vector quantizer with a large number of codewords, and about 25-40 percent for a tree search vector quantizer. Similar improvement can be achieved in other vector quantization systems."
            },
            "slug": "An-Improvement-of-the-Minimum-Distortion-Encoding-Bei-Gray",
            "title": {
                "fragments": [],
                "text": "An Improvement of the Minimum Distortion Encoding Algorithm for Vector Quantization"
            },
            "tldr": {
                "abstractSimilarityScore": 68,
                "text": "A very simple method is presented for improving the efficiency of minimum distortion encoding for vector quantization by reducing the number of multiplications in a full search vector quantizer with a large number of codewords."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Trans. Commun."
            },
            "year": 1985
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 291,
                                "start": 275
                            }
                        ],
                        "text": "\u2026side by at least a factor of 2/3, \nit follows that after at most d splits (i.e., at most 4d levels of the tree) the size decreases by this \nfactor. e The BBD-tree which results from this construction is quite similar to the tree described in \nthe earlier version of this paper [Arya et al. 1994]."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 97,
                                "start": 79
                            }
                        ],
                        "text": "(This is a major difference between this and the earlier version of this paper [Arya et al. 1994]."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 96,
                                "start": 80
                            }
                        ],
                        "text": "(This is \na major difference between this and the earlier version of this paper [Arya et al. 1994].)"
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 111,
                                "start": 93
                            }
                        ],
                        "text": "The midpoint algorithm is a variant of the one described in an earlier version of this paper [Arya et al. 1994], and the middle-interval algorithm is a variant of the algorithm given by Callahan and Kosaraju [1995] and developed independently by Bespamyatnikh [1995]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 94
                            }
                        ],
                        "text": "The midpoint algorithm is a variant of \nthe one described in an earlier version of this paper [Arya et al. 1994], and the middle-interval algorithm \nis a variant of the algorithm given by Callahan and Kosaraju [1995] and developed independently by Bespamyatnikh \n[1995]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 144,
                                "start": 126
                            }
                        ],
                        "text": "The BBD-tree which results from this construction is quite similar to the tree described in the earlier version of this paper [Arya et al. 1994]."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An optimal algorithm for approximate nearest neighbor searching in fixed dimensions"
            },
            "venue": {
                "fragments": [],
                "text": "Proc. 5th ACM-SIAM Sympos. Discrete Algorithms (1994), pp. 573\u2013582."
            },
            "year": 1994
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 311,
                                "start": 7
                            }
                        ],
                        "text": "Later, Chan [1997] showed that the factor of log r could be removed from the space complexity. Kleinberg [1997] showed that it is possible to eliminate exponential dependencies on dimension in query time, but with O(n log d) space. Recently, Indyk and Motwani [1998] and independently Kushilevitz et al. [1998] have announced algorithms that eliminate all exponential dependencies in dimension, yielding a query time O(d log(dn)) and space (dn)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 126,
                                "start": 100
                            }
                        ],
                        "text": "This data structure is similar to balanced structures based on box-decomposition [Bern et al. 1993; Callahan \nand Kosaraju 1992; Bespamyatnikh 1995], but there are a few new elements that have been included for \nthe purposes of nearest neighbor searching and practical efficiency."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 267,
                                "start": 7
                            }
                        ],
                        "text": "Later, Chan [1997] showed that the factor of log r could be removed from the space complexity. Kleinberg [1997] showed that it is possible to eliminate exponential dependencies on dimension in query time, but with O(n log d) space. Recently, Indyk and Motwani [1998] and independently Kushilevitz et al."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 19,
                                "start": 7
                            }
                        ],
                        "text": "Later, Chan [1997] showed that the factor of log r could be removed from the space complexity."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 7
                            }
                        ],
                        "text": "Later, Chan [1997] showed that the factor of log r could be removed from the space complexity. Kleinberg [1997] showed that it is possible to eliminate exponential dependencies on dimension in query time, but with O(n log d) space."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 113,
                                "start": 84
                            }
                        ],
                        "text": "The latter rule, called the fair-split rule, was inspired by the term introduced in Callahan and Kosaraju [1992]. Given a box, we first determine the sides that can be split without violating the 3:1 aspect ratio bound."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 147,
                                "start": 81
                            }
                        ],
                        "text": "This data structure is similar to balanced structures based on box-decomposition [Bern et al. 1993; Callahan and Kosaraju 1992; Bespamyatnikh 1995], but there are a few new elements that have been included for the purposes of nearest neighbor searching and practical efficiency."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A decomposition of multi-dimensional point-sets with applications to k-nearest-neighbors and n-body potentional fields"
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the 24th Annual ACM Symposium on the Theory of Computing (Vancouver, B.C., Canada, May 4 \u2013 6). ACM, New York, pp. 546 \u2013556."
            },
            "year": 1992
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1733495"
                        ],
                        "name": "G. Frederickson",
                        "slug": "G.-Frederickson",
                        "structuredName": {
                            "firstName": "Greg",
                            "lastName": "Frederickson",
                            "middleNames": [
                                "N."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Frederickson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 391,
                                "start": 372
                            }
                        ],
                        "text": "In particular, Bern, Eppstein, and Teng [1993], Schwarz, Smid, and Snoeyink [1994], Callahan and Kosaraju [1995], and Bespamyatnikh [1995] have all observed that the unbalanced trees described earlier can be combined with auxiliary balancing data structures, such as centroid decomposition trees [Chazelle 1982], dynamic trees [Sleator and Tarjan 1983], or topology trees [Frederickson 1993] to achieve the desired combination of properties."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 178,
                                "start": 159
                            }
                        ],
                        "text": "Although we do not know how to maintain the BBD-tree directly under point insertion and deletion, by using an auxiliary data structure (either a topology tree [Frederickson 1993] or a dynamic tree [Sleator and Tarjan 1983]) to represent the unbalanced box-decomposition tree, it is possible to support data point insertions and deletions in O(log n) time each."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 166,
                                "start": 149
                            }
                        ],
                        "text": "\u2026do not know how to maintain the BBD-tree \ndirectly under point insertion and deletion, by using an auxiliary data structure (either a topology \ntree [Frederickson 1993] or a dynamic tree [Sleator and Tarjan 1983]) to represent the unbalanced box-decomposition \ntree, it is possible to support data\u2026"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 246,
                                "start": 229
                            }
                        ],
                        "text": "\u2026all observed that the unbalanced trees described earlier can be combined with auxiliary balancing \ndata structures, such as centroid decomposition trees [Chazelle 1982], dynamic trees [Sleator and Tarjan \n1983], or topology trees [Frederickson 1993] to achieve the desired combination of properties."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 5023272,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "fa1d648b7690fc9c5845e539c29b0dbe8f397042",
            "isKey": true,
            "numCitedBy": 86,
            "numCiting": 27,
            "paperAbstract": {
                "fragments": [],
                "text": "The directed topology tree data structure is developed for maintaining binary trees dynamically. Each of a certain set of tree operations is shown to takeO(logn) time, wherenis the number of vertices in the trees. The directed topology trees are used to implement link?cut trees and dynamic expression trees. The results of experimental comparisons with the dynamic trees of Sleator and Tarjan are presented."
            },
            "slug": "A-data-structure-for-dynamically-maintaining-rooted-Frederickson",
            "title": {
                "fragments": [],
                "text": "A data structure for dynamically maintaining rooted trees"
            },
            "tldr": {
                "abstractSimilarityScore": 98,
                "text": "The directed topology tree data structure is developed for maintaining binary trees dynamically and each of a certain set of tree operations is shown to takeO(logn) time, wherenis the number of vertices in the trees."
            },
            "venue": {
                "fragments": [],
                "text": "SODA '93"
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1733495"
                        ],
                        "name": "G. Frederickson",
                        "slug": "G.-Frederickson",
                        "structuredName": {
                            "firstName": "Greg",
                            "lastName": "Frederickson",
                            "middleNames": [
                                "N."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Frederickson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [],
            "corpusId": 5032118,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "57e321514281882ecfa45cc6fc73645e8eecdbbe",
            "isKey": false,
            "numCitedBy": 369,
            "numCiting": 15,
            "paperAbstract": {
                "fragments": [],
                "text": "Data structures are presented for the problem of maintaining a minimum spanning tree on-line under the operation of updating the cost of some edge in the graph. For the case of a general graph, mai..."
            },
            "slug": "Data-Structures-for-On-Line-Updating-of-Minimum-Frederickson",
            "title": {
                "fragments": [],
                "text": "Data Structures for On-Line Updating of Minimum Spanning Trees, with Applications"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "Data structures are presented for the problem of maintaining a minimum spanning tree on-line under the operation of updating the cost of some edge in the graph."
            },
            "venue": {
                "fragments": [],
                "text": "SIAM J. Comput."
            },
            "year": 1985
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145187873"
                        ],
                        "name": "M. D. Berg",
                        "slug": "M.-D.-Berg",
                        "structuredName": {
                            "firstName": "Mark",
                            "lastName": "Berg",
                            "middleNames": [
                                "de"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. D. Berg"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 61828744,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "daddeaf80589e618b4b563d20057b1bbfd3e8534",
            "isKey": false,
            "numCitedBy": 6081,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "This introduction to computational geometry focuses on algorithms. Motivation is provided from the application areas as all techniques are related to particular applications in robotics, graphics, CAD/CAM, and geographic information systems. Modern insights in computational geometry are used to provide solutions that are both efficient and easy to understand and implement."
            },
            "slug": "Computational-geometry:-algorithms-and-applications-Berg",
            "title": {
                "fragments": [],
                "text": "Computational geometry: algorithms and applications"
            },
            "tldr": {
                "abstractSimilarityScore": 73,
                "text": "This introduction to computational geometry focuses on algorithms as all techniques are related to particular applications in robotics, graphics, CAD/CAM, and geographic information systems."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1997
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1721914"
                        ],
                        "name": "H. Edelsbrunner",
                        "slug": "H.-Edelsbrunner",
                        "structuredName": {
                            "firstName": "Herbert",
                            "lastName": "Edelsbrunner",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Edelsbrunner"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 6323368,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "777d4efa4622137282b469e12a06aa2a765cea7c",
            "isKey": false,
            "numCitedBy": 2281,
            "numCiting": 188,
            "paperAbstract": {
                "fragments": [],
                "text": "This book offers a modern approach to computational geo- metry, an area thatstudies the computational complexity of geometric problems. Combinatorial investigations play an important role in this study."
            },
            "slug": "Algorithms-in-Combinatorial-Geometry-Edelsbrunner",
            "title": {
                "fragments": [],
                "text": "Algorithms in Combinatorial Geometry"
            },
            "tldr": {
                "abstractSimilarityScore": 87,
                "text": "This book offers a modern approach to computational geo- metry, an area thatstudies the computational complexity of geometric problems with an important role in this study."
            },
            "venue": {
                "fragments": [],
                "text": "EATCS Monographs in Theoretical Computer Science"
            },
            "year": 1987
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35106875"
                        ],
                        "name": "R. Duda",
                        "slug": "R.-Duda",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Duda",
                            "middleNames": [
                                "O."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Duda"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3108177"
                        ],
                        "name": "P. Hart",
                        "slug": "P.-Hart",
                        "structuredName": {
                            "firstName": "Peter",
                            "lastName": "Hart",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Hart"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 87,
                                "start": 46
                            }
                        ],
                        "text": "1996], pattern recognition and classification [Cover and Hart 1967; Duda and Hart 1973], machine learning [Cost and Salzberg 1993], data compression [Gersho and Gray 1991], multimedia databases [Flickner et al."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 164,
                                "start": 146
                            }
                        ],
                        "text": "\u2026of applications, including knowledge \ndiscovery and data mining [Fayyad et al. 1996] pattern recognition and classification [Cover and Hart \n1967; Duda and Hart 1973], machine learning [Cost and Salzberg 1993], data compression [Gersho and Gray \n1991], multimedia databases [Flickner et al.\u2026"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 12946615,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b07ce649d6f6eb636872527104b0209d3edc8188",
            "isKey": false,
            "numCitedBy": 16925,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Provides a unified, comprehensive and up-to-date treatment of both statistical and descriptive methods for pattern recognition. The topics treated include Bayesian decision theory, supervised and unsupervised learning, nonparametric techniques, discriminant analysis, clustering, preprosessing of pictorial data, spatial filtering, shape description techniques, perspective transformations, projective invariants, linguistic procedures, and artificial intelligence techniques for scene analysis."
            },
            "slug": "Pattern-classification-and-scene-analysis-Duda-Hart",
            "title": {
                "fragments": [],
                "text": "Pattern classification and scene analysis"
            },
            "tldr": {
                "abstractSimilarityScore": 66,
                "text": "The topics treated include Bayesian decision theory, supervised and unsupervised learning, nonparametric techniques, discriminant analysis, clustering, preprosessing of pictorial data, spatial filtering, shape description techniques, perspective transformations, projective invariants, linguistic procedures, and artificial intelligence techniques for scene analysis."
            },
            "venue": {
                "fragments": [],
                "text": "A Wiley-Interscience publication"
            },
            "year": 1973
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1719385"
                        ],
                        "name": "H. Samet",
                        "slug": "H.-Samet",
                        "structuredName": {
                            "firstName": "Hanan",
                            "lastName": "Samet",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Samet"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 2741079,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "b0beb516585b348e2709e16a7bdf47a4c7bb6404",
            "isKey": false,
            "numCitedBy": 208,
            "numCiting": 61,
            "paperAbstract": {
                "fragments": [],
                "text": "An overview is presented of the use of hierarchical spatial data structures such as the quadtree. They are based on the principle of recursive decomposition. The focus is on the representation of data used in image databases. The emphasis is on two-dimensional regions, points, rectangles, and lines."
            },
            "slug": "Hierarchical-Spatial-Data-Structures-Samet",
            "title": {
                "fragments": [],
                "text": "Hierarchical Spatial Data Structures"
            },
            "tldr": {
                "abstractSimilarityScore": 81,
                "text": "An overview is presented of the use of hierarchical spatial data structures such as the quadtree based on the principle of recursive decomposition, which focuses on two-dimensional regions, points, rectangles, and lines."
            },
            "venue": {
                "fragments": [],
                "text": "SSD"
            },
            "year": 1989
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 291,
                                "start": 275
                            }
                        ],
                        "text": "\u2026side by at least a factor of 2/3, \nit follows that after at most d splits (i.e., at most 4d levels of the tree) the size decreases by this \nfactor. e The BBD-tree which results from this construction is quite similar to the tree described in \nthe earlier version of this paper [Arya et al. 1994]."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 97,
                                "start": 79
                            }
                        ],
                        "text": "(This is a major difference between this and the earlier version of this paper [Arya et al. 1994]."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 96,
                                "start": 80
                            }
                        ],
                        "text": "(This is \na major difference between this and the earlier version of this paper [Arya et al. 1994].)"
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 111,
                                "start": 93
                            }
                        ],
                        "text": "The midpoint algorithm is a variant of the one described in an earlier version of this paper [Arya et al. 1994], and the middle-interval algorithm is a variant of the algorithm given by Callahan and Kosaraju [1995] and developed independently by Bespamyatnikh [1995]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 94
                            }
                        ],
                        "text": "The midpoint algorithm is a variant of \nthe one described in an earlier version of this paper [Arya et al. 1994], and the middle-interval algorithm \nis a variant of the algorithm given by Callahan and Kosaraju [1995] and developed independently by Bespamyatnikh \n[1995]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 144,
                                "start": 126
                            }
                        ],
                        "text": "The BBD-tree which results from this construction is quite similar to the tree described in the earlier version of this paper [Arya et al. 1994]."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An optimal algorithm for approximate nearest neighbor searching in fixed dimensions"
            },
            "venue": {
                "fragments": [],
                "text": "Proc. 5th ACM-SIAM Sympos. Discrete Algorithms (1994), pp. 573\u2013582."
            },
            "year": 1994
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 311,
                                "start": 7
                            }
                        ],
                        "text": "Later, Chan [1997] showed that the factor of log r could be removed from the space complexity. Kleinberg [1997] showed that it is possible to eliminate exponential dependencies on dimension in query time, but with O(n log d) space. Recently, Indyk and Motwani [1998] and independently Kushilevitz et al. [1998] have announced algorithms that eliminate all exponential dependencies in dimension, yielding a query time O(d log(dn)) and space (dn)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 126,
                                "start": 100
                            }
                        ],
                        "text": "This data structure is similar to balanced structures based on box-decomposition [Bern et al. 1993; Callahan \nand Kosaraju 1992; Bespamyatnikh 1995], but there are a few new elements that have been included for \nthe purposes of nearest neighbor searching and practical efficiency."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 267,
                                "start": 7
                            }
                        ],
                        "text": "Later, Chan [1997] showed that the factor of log r could be removed from the space complexity. Kleinberg [1997] showed that it is possible to eliminate exponential dependencies on dimension in query time, but with O(n log d) space. Recently, Indyk and Motwani [1998] and independently Kushilevitz et al."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 19,
                                "start": 7
                            }
                        ],
                        "text": "Later, Chan [1997] showed that the factor of log r could be removed from the space complexity."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 7
                            }
                        ],
                        "text": "Later, Chan [1997] showed that the factor of log r could be removed from the space complexity. Kleinberg [1997] showed that it is possible to eliminate exponential dependencies on dimension in query time, but with O(n log d) space."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 113,
                                "start": 84
                            }
                        ],
                        "text": "The latter rule, called the fair-split rule, was inspired by the term introduced in Callahan and Kosaraju [1992]. Given a box, we first determine the sides that can be split without violating the 3:1 aspect ratio bound."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 147,
                                "start": 81
                            }
                        ],
                        "text": "This data structure is similar to balanced structures based on box-decomposition [Bern et al. 1993; Callahan and Kosaraju 1992; Bespamyatnikh 1995], but there are a few new elements that have been included for the purposes of nearest neighbor searching and practical efficiency."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": true,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A decomposition of multi-dimensional point-sets with applications to k-nearest-neighbors and n-body potentional fields"
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the 24th Annual ACM Symposium on the Theory of Computing (Vancouver, B.C., Canada, May 4 \u2013 6). ACM, New York, pp. 546 \u2013556."
            },
            "year": 1992
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 164,
                                "start": 146
                            }
                        ],
                        "text": "\u2026of applications, including knowledge \ndiscovery and data mining [Fayyad et al. 1996] pattern recognition and classification [Cover and Hart \n1967; Duda and Hart 1973], machine learning [Cost and Salzberg 1993], data compression [Gersho and Gray \n1991], multimedia databases [Flickner et al.\u2026"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 186248191,
            "fieldsOfStudy": [],
            "id": "f7725ec3cbf99605ec4f6e5a8d2ebf11eb407933",
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Pattern Classi cation and Scene Analysis"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1974
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2113911099"
                        ],
                        "name": "R. Rivest",
                        "slug": "R.-Rivest",
                        "structuredName": {
                            "firstName": "Ronald",
                            "lastName": "Rivest",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Rivest"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 10869461,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2a4dbb6faf4c14198424366b1e1d9f9c711fbe3c",
            "isKey": false,
            "numCitedBy": 40,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "On-the-Optimality-of-Elia's-Algorithm-for-Searches-Rivest",
            "title": {
                "fragments": [],
                "text": "On the Optimality of Elia's Algorithm for Performing Best-Match Searches"
            },
            "venue": {
                "fragments": [],
                "text": "IFIP Congress"
            },
            "year": 1974
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 50,
                                "start": 26
                            }
                        ],
                        "text": "1995], document retrieval [Deerwester et al. 1990], and statistics [Devroye and Wagner 1982]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 245,
                                "start": 223
                            }
                        ],
                        "text": "\u2026recognition and classification [Cover and Hart \n1967; Duda and Hart 1973], machine learning [Cost and Salzberg 1993], data compression [Gersho and Gray \n1991], multimedia databases [Flickner et al. 1995], document retrieval [Deer\u00adwester et al. 1990], and \nstatistics [Devroye and Wagner 1982]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Indexing by latend semantic analysis"
            },
            "venue": {
                "fragments": [],
                "text": "J. Amer. Soc. Inform. Sci. 41, 391\u2013407."
            },
            "year": 1990
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "ACM Sympos. Theory Comput"
            },
            "venue": {
                "fragments": [],
                "text": "ACM Sympos. Theory Comput"
            },
            "year": 1985
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An O(nlogn) algorithm for the ahnearest-neighbors problem"
            },
            "venue": {
                "fragments": [],
                "text": "Discrete Comput. Geom"
            },
            "year": 1989
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An Optimal Algorithm for Approximate Nearest Neighbor Searching \u00b7 33"
            },
            "venue": {
                "fragments": [],
                "text": "An Optimal Algorithm for Approximate Nearest Neighbor Searching \u00b7 33"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A decomposition of multi-dimensional point-sets with applications to k-nearest-neighbors and n-body potential elds"
            },
            "venue": {
                "fragments": [],
                "text": "Proc. 24th"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Nearest neighbor methods in discrimination"
            },
            "venue": {
                "fragments": [],
                "text": "Handbook of Statistics"
            },
            "year": 1982
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 169,
                                "start": 149
                            }
                        ],
                        "text": "\u20261996] pattern recognition and classification [Cover and Hart \n1967; Duda and Hart 1973], machine learning [Cost and Salzberg 1993], data compression [Gersho and Gray \n1991], multimedia databases [Flickner et al. 1995], document retrieval [Deer\u00adwester et al. 1990], and \nstatistics [Devroye and\u2026"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 84,
                                "start": 63
                            }
                        ],
                        "text": "Consider a set S of n data points in real d-dimensional space, Rd , where distances are \nmeasured using any Minkowski metric."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Vector Quantization and Signal Compression. Kluwer Academic"
            },
            "venue": {
                "fragments": [],
                "text": "Vector Quantization and Signal Compression. Kluwer Academic"
            },
            "year": 1991
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Matou sek. Ray shooting and parametric search"
            },
            "venue": {
                "fragments": [],
                "text": "SIAM J. Comput"
            },
            "year": 1993
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Comput. Geom"
            },
            "venue": {
                "fragments": [],
                "text": "Comput. Geom"
            },
            "year": 1992
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Proc. of DCC '93: Data Compression Conference"
            },
            "venue": {
                "fragments": [],
                "text": "Proc. of DCC '93: Data Compression Conference"
            },
            "year": 1993
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Refinements to nearest-neighbor searching"
            },
            "venue": {
                "fragments": [],
                "text": "Algorithmica 6, 579\u2013589."
            },
            "year": 1991
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Approximate range searching An optimal algorithm for approximate nearest neighbor searching in xed dimensions"
            },
            "venue": {
                "fragments": [],
                "text": "Proc. 11th Annu. ACM Sympos Proc. 5th ACM-SIAM Sympos. Discrete Algorithms"
            },
            "year": 1994
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Re nements to nearest-neighbor searching"
            },
            "venue": {
                "fragments": [],
                "text": "Algorithmica"
            },
            "year": 1991
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "E cient search for approximate nearest neighbor in high dimemsional spaces"
            },
            "venue": {
                "fragments": [],
                "text": "Proc. 30th Annu. ACM Sympos. Theory Comput"
            },
            "year": 1998
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Algorithms in Combinatorial Geometry, Volume 10 of EATCS Monographs on Theoretical Computer Science"
            },
            "venue": {
                "fragments": [],
                "text": "Springer-Verlag, Heidelberg, West Germany."
            },
            "year": 1987
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 229,
                                "start": 209
                            }
                        ],
                        "text": "A number of methods have been \nproposed which provide relatively modest constant factor improvements (e.g., through partial distance \ncomputation [Bei and Gray 1985], or by projecting points onto a single line [Friedman et al. 1975; Guan \nand Kamel 1992; Lee and Chen 1994])."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 59,
                                "start": 39
                            }
                        ],
                        "text": "First, consider the optimized kd-tree [Friedman et al. 1975]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An algorithm for nding nearest neighbors"
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Trans. Comput"
            },
            "year": 1975
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 291,
                                "start": 275
                            }
                        ],
                        "text": "\u2026side by at least a factor of 2/3, \nit follows that after at most d splits (i.e., at most 4d levels of the tree) the size decreases by this \nfactor. e The BBD-tree which results from this construction is quite similar to the tree described in \nthe earlier version of this paper [Arya et al. 1994]."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 94
                            }
                        ],
                        "text": "The midpoint algorithm is a variant of \nthe one described in an earlier version of this paper [Arya et al. 1994], and the middle-interval algorithm \nis a variant of the algorithm given by Callahan and Kosaraju [1995] and developed independently by Bespamyatnikh \n[1995]."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 96,
                                "start": 80
                            }
                        ],
                        "text": "(This is \na major difference between this and the earlier version of this paper [Arya et al. 1994].)"
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An optimal algorithm for approximate nearest neighbor searching"
            },
            "venue": {
                "fragments": [],
                "text": "SODA 1994"
            },
            "year": 1994
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Optimal algorithms for clustering"
            },
            "venue": {
                "fragments": [],
                "text": "Proc. 20th Annu. ACM Sympos. Theory Comput. (1988), pp. 434\u2013444."
            },
            "year": 1988
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 287,
                                "start": 264
                            }
                        ],
                        "text": "\u2026recognition and classification [Cover and Hart \n1967; Duda and Hart 1973], machine learning [Cost and Salzberg 1993], data compression [Gersho and Gray \n1991], multimedia databases [Flickner et al. 1995], document retrieval [Deer\u00adwester et al. 1990], and \nstatistics [Devroye and Wagner 1982]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 90,
                                "start": 66
                            }
                        ],
                        "text": "In nearest neighbor searching, we preprocess S into a data A preliminary \nversion of this paper appeared in Proceedings of the 5th Annual ACM-SIAM Symposium on Discrete Algorithms."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Nearest neighbor methods in discrimination"
            },
            "venue": {
                "fragments": [],
                "text": "P. R. Krishnaiah and L. N. Kanal Eds., Handbook of Statistics, Volume 2. NorthHolland."
            },
            "year": 1982
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An optimal algorithm for approximate nearest neighbor searching in xed dimensions"
            },
            "venue": {
                "fragments": [],
                "text": "Proc. 5th ACM-SIAM Sympos. Discrete Algorithms"
            },
            "year": 1994
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "RECEIVED DECEMBER Journal of the ACM"
            },
            "venue": {
                "fragments": [],
                "text": "RECEIVED DECEMBER Journal of the ACM"
            },
            "year": 1995
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An algorithm for nding nearestneighbors"
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Trans . Comput ."
            },
            "year": 1977
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Indexing by latend semantic analysis"
            },
            "venue": {
                "fragments": [],
                "text": "J. Amer. Soc. Inf. Sci"
            },
            "year": 1990
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A general approach to ddimensional geometric queries"
            },
            "venue": {
                "fragments": [],
                "text": "Proc. 17th Ann"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Indexing by latend semantic analysis"
            },
            "venue": {
                "fragments": [],
                "text": "J . Amer . Soc . Inform . Sci ."
            },
            "year": 1997
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Algorithms in Combinatorial Geometry, vol"
            },
            "venue": {
                "fragments": [],
                "text": "10 of EATCS Monographs on Theoretical Computer Science. Springer-Verlag, New York."
            },
            "year": 1987
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A general approach to d-dimensional queries"
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the 17th Annual ACM Symposium on Theory of Computing"
            },
            "year": 1985
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "EEcient search for approximate nearest neighbor in high dimemsional spaces"
            },
            "venue": {
                "fragments": [],
                "text": "Proc. 30th Annu. ACM Sympos. Theory Comput"
            },
            "year": 1998
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Computational Geometry: Algorithms and Applications Indexing by latend semantic analysis Pattern Classiication and Scene Analysis"
            },
            "venue": {
                "fragments": [],
                "text": "J. Amer. Soc. Inform. Sci"
            },
            "year": 1973
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Reenements to nearest-neighbor searching"
            },
            "venue": {
                "fragments": [],
                "text": "Algorithmica"
            },
            "year": 1991
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "ACM Sympos. Comput. Geom"
            },
            "venue": {
                "fragments": [],
                "text": "ACM Sympos. Comput. Geom"
            },
            "year": 1995
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A general approach to d-dimensional queries"
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of the 17th Annual ACM Symposium on Theory of Computing (Providence, R.I., May 6 \u2013 8). ACM, New York, pp. 163\u2013168."
            },
            "year": 1985
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Vector Quantization and Signal Compression. Kluwer Academic"
            },
            "venue": {
                "fragments": [],
                "text": "Vector Quantization and Signal Compression. Kluwer Academic"
            },
            "year": 1991
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 13,
            "methodology": 19,
            "result": 3
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 93,
        "totalPages": 10
    },
    "page_url": "https://www.semanticscholar.org/paper/An-optimal-algorithm-for-approximate-nearest-fixed-Arya-Mount/219101fe724232acc330ff0910152931538f85c7?sort=total-citations"
}