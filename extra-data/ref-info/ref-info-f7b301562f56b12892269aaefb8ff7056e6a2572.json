{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144881104"
                        ],
                        "name": "E. A. Green",
                        "slug": "E.-A.-Green",
                        "structuredName": {
                            "firstName": "Edward",
                            "lastName": "Green",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. A. Green"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1751773"
                        ],
                        "name": "M. Krishnamoorthy",
                        "slug": "M.-Krishnamoorthy",
                        "structuredName": {
                            "firstName": "Mukkai",
                            "lastName": "Krishnamoorthy",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Krishnamoorthy"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 866386,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "ecb5fdcdeff0d56ebf61b151ac8617ae3b30881e",
            "isKey": false,
            "numCitedBy": 52,
            "numCiting": 8,
            "paperAbstract": {
                "fragments": [],
                "text": "We develop a strategy for extracting the underlying relational information from the images of printed tables. Visual clues that exist in the image are used for extracting first the physical, and then the logical structure of the table. Since these visual clues generally have a logical meaning, there must be some association made between the graphical attributes extracted and their function of reflecting the logic expressed by the table; this knowledge is coordinated in a model. This approach, therefore, can be adapted to all tables which have graphical attributes discernible to the image analysis being used."
            },
            "slug": "Model-based-analysis-of-printed-tables-Green-Krishnamoorthy",
            "title": {
                "fragments": [],
                "text": "Model-based analysis of printed tables"
            },
            "tldr": {
                "abstractSimilarityScore": 63,
                "text": "This strategy for extracting the underlying relational information from the images of printed tables is developed and can be adapted to all tables which have graphical attributes discernible to the image analysis being used."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of 3rd International Conference on Document Analysis and Recognition"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "25727408"
                        ],
                        "name": "Surekha Chandran",
                        "slug": "Surekha-Chandran",
                        "structuredName": {
                            "firstName": "Surekha",
                            "lastName": "Chandran",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Surekha Chandran"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3110392"
                        ],
                        "name": "R. Kasturi",
                        "slug": "R.-Kasturi",
                        "structuredName": {
                            "firstName": "Rangachar",
                            "lastName": "Kasturi",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Kasturi"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 30719791,
            "fieldsOfStudy": [
                "Physics"
            ],
            "id": "4c8cb8fd8a87ff2e60094385492a13c30977554b",
            "isKey": false,
            "numCitedBy": 55,
            "numCiting": 3,
            "paperAbstract": {
                "fragments": [],
                "text": "A system for extraction of structural information of a table from its image is discussed. Following the initial binarization and deskewing operations, the image is scanned to extract all horizontal and vertical lines that are present. The table's dimensions are estimated based on these lines. Unlike other systems, the procedure described does not depend on the sole existence of lines to mark the item blocks. White streams are recognized in both the horizontal and vertical direction as substitutes for any missing demarcation lines. A structure interpretation procedure uses the extracted demarcation information to identify each of the item blocks in the table. Subsequently, the interrelations of these item blocks are used to recognize the structure of the tabulated data.<<ETX>>"
            },
            "slug": "Structural-recognition-of-tabulated-data-Chandran-Kasturi",
            "title": {
                "fragments": [],
                "text": "Structural recognition of tabulated data"
            },
            "tldr": {
                "abstractSimilarityScore": 64,
                "text": "A system for extraction of structural information of a table from its image using white streams as substitutes for any missing demarcation lines to identify each of the item blocks in the table."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of 2nd International Conference on Document Analysis and Recognition (ICDAR '93)"
            },
            "year": 1993
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145820949"
                        ],
                        "name": "T. Pavlidis",
                        "slug": "T.-Pavlidis",
                        "structuredName": {
                            "firstName": "Theodosios",
                            "lastName": "Pavlidis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Pavlidis"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 120068581,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "6839013b5dd6bcc30d6aeef615c5f034103af090",
            "isKey": false,
            "numCitedBy": 169,
            "numCiting": 13,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "A-vectorizer-and-feature-extractor-for-document-Pavlidis",
            "title": {
                "fragments": [],
                "text": "A vectorizer and feature extractor for document recognition"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1986
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "73282614"
                        ],
                        "name": "Y. Hirayama",
                        "slug": "Y.-Hirayama",
                        "structuredName": {
                            "firstName": "Y.",
                            "lastName": "Hirayama",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Y. Hirayama"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 206774876,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "dcf75b367f24919a8a4b0f627960f6d6bf5ae33f",
            "isKey": false,
            "numCitedBy": 38,
            "numCiting": 7,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper presents a novel method for table structure analysis. Many documents have table areas, and some have both table and figure areas. It is very important to be able to classify table and figure areas automatically. Furthermore, in tables, the column and row in which a character string is located are very important pieces of information. To detect and analyze table areas, the following method is applied: First, areas that may contain tables or figures are distinguished from text areas by the presence of horizontal and vertical lines. Next, the areas are assumed to be table areas and are analyzed as such. A judgment is made on whether each of the areas can in fact be a table area or not; in this way, the actual table areas are detected. Finally, the structures of the areas are analyzed and character strings in the areas are arranged by using the DP matching method. This method was applied to sixty-five pages of Japanese technical papers, magazines, manuals for software programs, and pages including 34 table areas, 48 line drawing areas, and 35 image areas. As a result, 96.6 percent of the areas were detected correctly and 91.7 percent of the tables were analyzed and arranged correctly."
            },
            "slug": "A-method-for-table-structure-analysis-using-DP-Hirayama",
            "title": {
                "fragments": [],
                "text": "A method for table structure analysis using DP matching"
            },
            "tldr": {
                "abstractSimilarityScore": 55,
                "text": "This paper presents a novel method for table structure analysis that was applied to sixty-five pages of Japanese technical papers, magazines, manuals for software programs, and pages including 34 table areas, 48 line drawing areas, and 35 image areas."
            },
            "venue": {
                "fragments": [],
                "text": "Proceedings of 3rd International Conference on Document Analysis and Recognition"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34817063"
                        ],
                        "name": "A. Chhabra",
                        "slug": "A.-Chhabra",
                        "structuredName": {
                            "firstName": "Atul",
                            "lastName": "Chhabra",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Chhabra"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2066269376"
                        ],
                        "name": "Vishal Misra",
                        "slug": "Vishal-Misra",
                        "structuredName": {
                            "firstName": "Vishal",
                            "lastName": "Misra",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Vishal Misra"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "27130718"
                        ],
                        "name": "J. F. Arias",
                        "slug": "J.-F.-Arias",
                        "structuredName": {
                            "firstName": "Juan",
                            "lastName": "Arias",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. F. Arias"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 41479210,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "57e2f7d47618c43ac067e093a3152faa1ffeba12",
            "isKey": false,
            "numCitedBy": 34,
            "numCiting": 9,
            "paperAbstract": {
                "fragments": [],
                "text": "We present a fast method for finding horizontal lines in run length encoded images. The method was motivated by the need for quick and reliable detection of horizontal lines in an interactive drawing conversion system for telephone company drawings. At the core of the algorithm are the processes of filtering run lengths, assembling filtered run lengths, generating top silhouette, and thresholding the gradient of the top silhouette to extract one horizontal line at a time. The method is robust in the presence of distortion; it can tolerate significant skew and warping, both local and global, and can bridge significant breaks in lines without too many false positive lines."
            },
            "slug": "Detection-of-Horizontal-Lines-in-Noisy-Run-Length-Chhabra-Misra",
            "title": {
                "fragments": [],
                "text": "Detection of Horizontal Lines in Noisy Run Length Encoded Images: The FAST Method"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "The method is robust in the presence of distortion; it can tolerate significant skew and warping, both local and global, and can bridge significant breaks in lines without too many false positive lines."
            },
            "venue": {
                "fragments": [],
                "text": "GREC"
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1500661115"
                        ],
                        "name": "Toyohide Watanabe",
                        "slug": "Toyohide-Watanabe",
                        "structuredName": {
                            "firstName": "Toyohide",
                            "lastName": "Watanabe",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Toyohide Watanabe"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2074293587"
                        ],
                        "name": "Q. Luo",
                        "slug": "Q.-Luo",
                        "structuredName": {
                            "firstName": "Qin",
                            "lastName": "Luo",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Q. Luo"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1692608"
                        ],
                        "name": "N. Sugie",
                        "slug": "N.-Sugie",
                        "structuredName": {
                            "firstName": "Noboru",
                            "lastName": "Sugie",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Sugie"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 23198522,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "fa208b677239912cb394e5dbc6e7483a75f16ea4",
            "isKey": false,
            "numCitedBy": 140,
            "numCiting": 11,
            "paperAbstract": {
                "fragments": [],
                "text": "Many approaches have reported that knowledge-based layout recognition methods are very successful in classifying the meaningful data from document images automatically. However, these approaches are applicable to only the same kind of documents because they are based on the paradigm that specifies the structure definition information in advance so as to be able to analyze a particular class of documents intelligently. In this paper, the authors propose a method to recognize the layout structures of multi-kinds of table-form document images. For this purpose, the authors introduce a classification tree to manage the relationships among different classes of layout structures. The authors' recognition system has two modes: layout knowledge acquisition and layout structure recognition. In the layout knowledge acquisition mode, table-form document images are distinguished according to this. Classification tree and then the structure description trees which specify the logical structures of table-form documents are generated automatically. While, in the layout structure recognition mode, individual item fields in the table-form document images are extracted and classified successfully by searching the classification tree and interpreting the structure description tree. >"
            },
            "slug": "Layout-Recognition-of-Multi-Kinds-of-Table-Form-Watanabe-Luo",
            "title": {
                "fragments": [],
                "text": "Layout Recognition of Multi-Kinds of Table-Form Documents"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "The authors introduce a classification tree to manage the relationships among different classes of layout structures and propose a method to recognize the layout structures of multi-kinds of table-form document images."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Trans. Pattern Anal. Mach. Intell."
            },
            "year": 1995
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2065925658"
                        ],
                        "name": "Ian Chai",
                        "slug": "Ian-Chai",
                        "structuredName": {
                            "firstName": "Ian",
                            "lastName": "Chai",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Ian Chai"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144964966"
                        ],
                        "name": "D. Dori",
                        "slug": "D.-Dori",
                        "structuredName": {
                            "firstName": "Dov",
                            "lastName": "Dori",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Dori"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 76651473,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "8ce400487dab0d82ef62bfddd713f8fc68bba187",
            "isKey": false,
            "numCitedBy": 21,
            "numCiting": 5,
            "paperAbstract": {
                "fragments": [],
                "text": "Extracting bars (straight line segments) from a binary image is a first processing step in a system for understanding engineering drawings as well as other applications such as robotics [1]. A novel algorithm \u2014 the Orthogonal Zig-Zag (OZZ) has been developed and implemented. The underlying idea of OZZ is selective processing, or focus of attention. The binary input image is scanned intermittently and rather sparsely, but nevertheless all the necessary information needed to detect bars is extracted. Black pixels constitute a small fraction of the input drawing. Of these pixels, OZZ processes only a small fraction, resulting in both a dramatic reduction in both space and time compared to HT."
            },
            "slug": "Orthogonal-zig-zag:-an-efficient-method-for-lines-Chai-Dori",
            "title": {
                "fragments": [],
                "text": "Orthogonal zig-zag: an efficient method for extracting straight lines from engineering drawings"
            },
            "tldr": {
                "abstractSimilarityScore": 35,
                "text": "The Orthogonal Zig-Zag (OZZ) algorithm has been developed and implemented, resulting in both a dramatic reduction in both space and time compared to HT."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1992
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145700931"
                        ],
                        "name": "David H. Douglas",
                        "slug": "David-H.-Douglas",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Douglas",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "David H. Douglas"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2531388"
                        ],
                        "name": "T. Peucker",
                        "slug": "T.-Peucker",
                        "structuredName": {
                            "firstName": "Thomas",
                            "lastName": "Peucker",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Peucker"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 119823700,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "e46ac802d7207e0e51b5333456a3f46519c2f92d",
            "isKey": false,
            "numCitedBy": 3705,
            "numCiting": 5,
            "paperAbstract": {
                "fragments": [],
                "text": "All digitizing methods, as a general rule, record lines with far more data than is necessary for accurate graphic reproduction or for computer analysis. Two algorithms to reduce the number of points required to represent the line and, if desired, produce caricatures, are presented and compared with the most promising methods so far suggested. Line reduction will form a major part of automated generalization. Regle generale, les methodes numeriques enregistrent des lignes avec beaucoup plus de donnees qu'il n'est necessaire a la reproduction graphique precise ou a la recherche par ordinateur. L'auteur presente deux algorithmes pour reduire le nombre de points necessaires pour representer la ligne et produire des caricatures si desire, et les compare aux methodes les plus prometteuses suggerees jusqu'ici. La reduction de la ligne constituera une partie importante de la generalisation automatique."
            },
            "slug": "ALGORITHMS-FOR-THE-REDUCTION-OF-THE-NUMBER-OF-TO-A-Douglas-Peucker",
            "title": {
                "fragments": [],
                "text": "ALGORITHMS FOR THE REDUCTION OF THE NUMBER OF POINTS REQUIRED TO REPRESENT A DIGITIZED LINE OR ITS CARICATURE"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1973
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1715952"
                        ],
                        "name": "A. Aho",
                        "slug": "A.-Aho",
                        "structuredName": {
                            "firstName": "Alfred",
                            "lastName": "Aho",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Aho"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1706504"
                        ],
                        "name": "J. Hopcroft",
                        "slug": "J.-Hopcroft",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Hopcroft",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Hopcroft"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1742391"
                        ],
                        "name": "J. Ullman",
                        "slug": "J.-Ullman",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Ullman",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Ullman"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 64893718,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "55395c610edc5e271b8991118ca3638973e53b77",
            "isKey": false,
            "numCitedBy": 2003,
            "numCiting": 45,
            "paperAbstract": {
                "fragments": [],
                "text": "From the Publisher: \nThis book presents the data structures and algorithms that underpin much of today's computer programming. The basis of this book is the material contained in the first six chapters of our earlier work, The Design and Analysis of Computer Algorithms. We have expanded that coverage and have added material on algorithms for external storage and memory management. As a consequence, this book should be suitable as a text for a first course on data structures and algorithms. The only prerequisite we assume is familiarity with some high-level programming language such as Pascal."
            },
            "slug": "Data-Structures-and-Algorithms-Aho-Hopcroft",
            "title": {
                "fragments": [],
                "text": "Data Structures and Algorithms"
            },
            "tldr": {
                "abstractSimilarityScore": 49,
                "text": "The basis of this book is the material contained in the first six chapters of the earlier work, The Design and Analysis of Computer Algorithms, and has added material on algorithms for external storage and memory management."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1983
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1706504"
                        ],
                        "name": "J. Hopcroft",
                        "slug": "J.-Hopcroft",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Hopcroft",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Hopcroft"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1721050"
                        ],
                        "name": "R. Tarjan",
                        "slug": "R.-Tarjan",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Tarjan",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Tarjan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 123543691,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a89e5bedebd4cc8df7b31408fc23ec9706ceaf12",
            "isKey": false,
            "numCitedBy": 352,
            "numCiting": 6,
            "paperAbstract": {
                "fragments": [],
                "text": "Efficient algorithms are presented for partitioning a graph into connected components, biconnected components and simple paths. The algorithm for partitioning of a graph into simple paths is iterative and each iteration produces a new path between two vertices already on paths. (The start vertex can be specified dynamically.) If V is the number of vertices and E is the number of edges each algorithm requires time and space proportional to max(V,E) when executed on a random access computer."
            },
            "slug": "Efficient-algorithms-for-graph-manipulation-Hopcroft-Tarjan",
            "title": {
                "fragments": [],
                "text": "Efficient algorithms for graph manipulation"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "Efficient algorithms are presented for partitioning a graph into connected components, biconnected components and simple paths."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1971
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1706504"
                        ],
                        "name": "J. Hopcroft",
                        "slug": "J.-Hopcroft",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Hopcroft",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Hopcroft"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1721050"
                        ],
                        "name": "R. Tarjan",
                        "slug": "R.-Tarjan",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Tarjan",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Tarjan"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 14772567,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4de1c27579d3a2404967e04005a3735659eb808d",
            "isKey": false,
            "numCitedBy": 875,
            "numCiting": 9,
            "paperAbstract": {
                "fragments": [],
                "text": "Efficient algorithms are presented for partitioning a graph into connected components, biconnected components and simple paths. The algorithm for partitioning of a graph into simple paths of iterative and each iteration produces a new path between two vertices already on paths. (The start vertex can be specified dynamically.) If V is the number of vertices and E is the number of edges, each algorithm requires time and space proportional to max (V, E) when executed on a random access computer."
            },
            "slug": "Algorithm-447:-efficient-algorithms-for-graph-Hopcroft-Tarjan",
            "title": {
                "fragments": [],
                "text": "Algorithm 447: efficient algorithms for graph manipulation"
            },
            "tldr": {
                "abstractSimilarityScore": 78,
                "text": "Efficient algorithms are presented for partitioning a graph into connected components, biconnected components and simple paths and each iteration produces a new path between two vertices already on paths."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1973
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {},
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 11,
        "totalPages": 2
    },
    "page_url": "https://www.semanticscholar.org/paper/Interpreting-and-representing-tabular-documents-Arias-Chhabra/f7b301562f56b12892269aaefb8ff7056e6a2572?sort=total-citations"
}