{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145282631"
                        ],
                        "name": "J. A. Robinson",
                        "slug": "J.-A.-Robinson",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Robinson",
                            "middleNames": [
                                "Alan"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. A. Robinson"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "[2] and [ 5 ]) that in order to detemfine whether a finite set S of sentences of first-order logic is satisfiable, it is sufficient to assume that each sentence in S is in prenex form with no existential quantifiers in the prefix; moreover the matrix of each sentence in S carl be assumed to be a disjunction of formulas each of which is either au atomic formula or the negation of an atomic formula."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "Is was ~oted in aa earlier paper [ 5 ] that one can express Herbrand's Theorem i~ the following form:"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "An interesting heuristic remark is that, for every finite set S of clauses which is unsatisfiable and which has a refutation one could possibly construct, there is at least one reasonably small finite subset of the Herbrand universe of S such that P(S) is unsatisfiable and such that P is minimal in the sense that Q(S) is satisfiable for each proper subset Q of P. Such a P was called a proof set for S in [ 5 ]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "Accordingly we introduce the following definitions (following in part the nomenclature of [2] and [ 5 ]): 2.1 Variables."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "The major combinatorial obstacle to efficiency for level-satm'ation procedures is the enormous rate of growth of the finite sets Hi and Hi(S) as 3' increases, at least for most interesting sets S. These growth rates were analyzed in some det~til in [ 5 ], and some examples were there given of some quite simple unsatisfiable S for which the earliest unsatisfiable Hi(N) is so large as to be absolutely beyond the limits of feasibility."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "A particularly natural way of doing this is to use the so-called levels H0, H1, H~, ... , of the Herbraad universe H; where H0 consists of all the individual constants in H, and H,~+~, for n ~ 0, consists of all the terms ia H which are in H,,, or whose arguments are in H~. In [ 5 ] we called procedures using this method level-saturation procedures."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "This was in fact the underlying scheme of a computer program reported in [ 5 ], in which the part of the demon is played, as best his ingenuity allows, by the mathematician using the program."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "I;:ca,~zp[e 2. A more intei'esti~lg example is erie which was discussed in [ 5 ]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 12533650,
            "fieldsOfStudy": [
                "Philosophy"
            ],
            "id": "7e51aeb678c4058268a4489b3033c77180c730c6",
            "isKey": false,
            "numCitedBy": 81,
            "numCiting": 31,
            "paperAbstract": {
                "fragments": [],
                "text": "There are excellent explanations in the literature of the formulation, in quantification theory, of problems in which a proof is to be found, ff one exists, for a given conclusion from a set of given premises. In particular, in [1] and [3] it is shown how to transform the original problem into a standard form which contains no quantifiers and which consists of a conjunction of disjunctions, each disjunct being an open atomic sentence-form or the negation of one. We assume familiarity with these methods of formulation and preliminary transformation, and provide just those definitions of our working terminology which will be required for the immediate purposes of the paper. The paper discusses the \"combinatorial explosion\" difficulties encountered by computer programs embodying proof-construction procedures. A program developed at Argonne National Laboratory is described in which these difficulties are somewhat alleviated in two ways. The first way, which although very useful in practice is less intellectually satisfying than the second way, consists essentially in incorporating the mathematician-user of the program into the searchqoop. Several examples of proofs obtained by this means are exhibited and discussed, one interesting feature of them being that they are \"reasonably nontrivial\" mathematical exercises. The second way involves a complete proof procedure which seems to be new to the literature but which has not yet been programmed and tested. Following [1] and [3], then, consider logical expressions"
            },
            "slug": "Theorem-Proving-on-the-Computer-Robinson",
            "title": {
                "fragments": [],
                "text": "Theorem-Proving on the Computer"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "The paper discusses the \"combinatorial explosion\" difficulties encountered by computer programs embodying proof-construction procedures, and a program developed at Argonne National Laboratory is described in which these difficulties are somewhat alleviated in two ways."
            },
            "venue": {
                "fragments": [],
                "text": "JACM"
            },
            "year": 1963
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "113641402"
                        ],
                        "name": "Martin D. Davis",
                        "slug": "Martin-D.-Davis",
                        "structuredName": {
                            "firstName": "Martin",
                            "lastName": "Davis",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Martin D. Davis"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1790161"
                        ],
                        "name": "H. Putnam",
                        "slug": "H.-Putnam",
                        "structuredName": {
                            "firstName": "Hilary",
                            "lastName": "Putnam",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Putnam"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 31888376,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "7dbf4c5424c676f7e04010a0a6678cab40e71332",
            "isKey": false,
            "numCitedBy": 2922,
            "numCiting": 16,
            "paperAbstract": {
                "fragments": [],
                "text": "The hope that mathematical methods employed in the investigation of formal logic would lead to purely computational methods for obtaining mathematical theorems goes back to Leibniz and has been revived by Peano around the turn of the century and by Hilbert's school in the 1920's. Hilbert, noting that all of classical mathematics could be formalized within quantification theory, declared that the problem of finding an algorithm for determining whether or not a given formula of quantification theory is valid was the central problem of mathematical logic. And indeed, at one time it seemed as if investigations of this \u201cdecision\u201d problem were on the verge of success. However, it was shown by Church and by Turing that such an algorithm can not exist. This result led to considerable pessimism regarding the possibility of using modern digital computers in deciding significant mathematical questions. However, recently there has been a revival of interest in the whole question. Specifically, it has been realized that while no decision procedure exists for quantification theory there are many proof procedures available\u2014that is, uniform procedures which will ultimately locate a proof for any formula of quantification theory which is valid but which will usually involve seeking \u201cforever\u201d in the case of a formula which is not valid\u2014and that some of these proof procedures could well turn out to be feasible for use with modern computing machinery.\n Hao Wang [9] and P. C. Gilmore [3] have each produced working programs which employ proof procedures in quantification theory. Gilmore's program employs a form of a basic theorem of mathematical logic due to Herbrand, and Wang's makes use of a formulation of quantification theory related to those studied by Gentzen. However, both programs encounter decisive difficulties with any but the simplest formulas of quantification theory, in connection with methods of doing propositional calculus. Wang's program, because of its use of Gentzen-like methods, involves exponentiation on the total number of truth-functional connectives, whereas Gilmore's program, using normal forms, involves exponentiation on the number of clauses present. Both methods are superior in many cases to truth table methods which involve exponentiation on the total number of variables present, and represent important initial contributions, but both run into difficulty with some fairly simple examples.\nIn the present paper, a uniform proof procedure for quantification theory is given which is feasible for use with some rather complicated formulas and which does not ordinarily lead to exponentiation. The superiority of the present procedure over those previously available is indicated in part by the fact that a formula on which Gilmore's routine for the IBM 704 causes the machine to computer for 21 minutes without obtaining a result was worked successfully by hand computation using the present method in 30 minutes. Cf. \u00a76, below.\nIt should be mentioned that, before it can be hoped to employ proof procedures for quantification theory in obtaining proofs of theorems belonging to \u201cgenuine\u201d mathematics, finite axiomatizations, which are \u201cshort,\u201d must be obtained for various branches of mathematics. This last question will not be pursued further here; cf., however, Davis and Putnam [2], where one solution to this problem is given for ele"
            },
            "slug": "A-Computing-Procedure-for-Quantification-Theory-Davis-Putnam",
            "title": {
                "fragments": [],
                "text": "A Computing Procedure for Quantification Theory"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "In the present paper, a uniform proof procedure for quantification theory is given which is feasible for use with some rather complicated formulas and which does not ordinarily lead to exponentiation."
            },
            "venue": {
                "fragments": [],
                "text": "JACM"
            },
            "year": 1960
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2247168"
                        ],
                        "name": "P. Gilmore",
                        "slug": "P.-Gilmore",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Gilmore",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Gilmore"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 23266261,
            "fieldsOfStudy": [
                "Philosophy"
            ],
            "id": "7851bdf7d804da4d6a67be3d8c48a04757561dd6",
            "isKey": false,
            "numCitedBy": 165,
            "numCiting": 8,
            "paperAbstract": {
                "fragments": [],
                "text": "A program is described which can provide a computer with quick logical facility for syllogisms and moderately more complicated sentences. The program realizes a method for proving that a sentence of quantification theory is logically true. The program, furthermore, provides a decision procedure over a subclass of the sentences of quantification theory. The subclass of sentences for which the program provides a decision procedure includes all syllogisms. Full justification of the method is given. \n \nA program for the IBM 704 Data Processing Machine is outlined which realizes the method. Production runs of the program indicate that for a class of moderately complicated sentences the program can produce proofs in intervals ranging up to two minutes."
            },
            "slug": "A-Proof-Method-for-Quantification-Theory:-Its-and-Gilmore",
            "title": {
                "fragments": [],
                "text": "A Proof Method for Quantification Theory: Its Justification and Realization"
            },
            "tldr": {
                "abstractSimilarityScore": 95,
                "text": "A program is described which can provide a computer with quick logical facility for syllogisms and moderately more complicated sentences and realizes a method for proving that a sentence of quantification theory is logically true."
            },
            "venue": {
                "fragments": [],
                "text": "IBM J. Res. Dev."
            },
            "year": 1960
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2508368"
                        ],
                        "name": "J. Friedman",
                        "slug": "J.-Friedman",
                        "structuredName": {
                            "firstName": "Joyce",
                            "lastName": "Friedman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Friedman"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 29694146,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "55285fe934db25d612d06fef4e9cc88278a9e646",
            "isKey": false,
            "numCitedBy": 20,
            "numCiting": 21,
            "paperAbstract": {
                "fragments": [],
                "text": "AbstracL This paper develops algorithms by which decision procedures for the functional calculus can be applied mechanically. Given any expression in Skolem normal form with prefix (3y~)(3y2) . . . (3y,~,)(z~)(z~) . . . (z,~) and matrix M, the algorithms lead to the construction of a nu~trix M* such that M D M* is valid and such that the expressions (3yl)(3y~) . . . (3y,~)(zl)(z~) . . . (z,~).Mand (3y l ) (3y2) \" \" (3y,,,)(zl)(z~) . . (z,~).M*areinterprovable. This procedure is thus a semi-decision procedure for the general Skolem case. For two special cases of this prefix, it is further proved that the method provides a solution to the decision problem in the sense that the given expression is a theorem if and only if M* is tautologous. These cases are ~1) a matrix M in which every elementary part contains at least one of the individual variables z~ , z~, .. \u2022 , z,~ or contains only one individual variable or contains both Yl and y2 and no other individual variables; and (2) a matrix M in which every elementary part contains at least one of the individual variables z~ , z2, ., z,, or contains only one individual variable or contains all of y~, y2, ' \" , ym \u2022"
            },
            "slug": "A-Semi-Decision-Procedure-for-the-Functional-Friedman",
            "title": {
                "fragments": [],
                "text": "A Semi-Decision Procedure for the Functional Calculus"
            },
            "tldr": {
                "abstractSimilarityScore": 61,
                "text": "Algorithms by which decision procedures for the functional calculus can be applied mechanically and it is proved that the method provides a solution to the decision problem in the sense that the given expression is a theorem if and only if M* is tautologous."
            },
            "venue": {
                "fragments": [],
                "text": "JACM"
            },
            "year": 1963
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144144981"
                        ],
                        "name": "A. Church",
                        "slug": "A.-Church",
                        "structuredName": {
                            "firstName": "Alonzo",
                            "lastName": "Church",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Church"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 42323521,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "00f3bc14bc3662558b677549ee6cc46ca66e5227",
            "isKey": false,
            "numCitedBy": 680,
            "numCiting": 4,
            "paperAbstract": {
                "fragments": [],
                "text": "In a recent paper the author has proposed a definition of the commonly used term \u201ceffectively calculable\u201d and has shown on the basis of this definition that the general case of the Entscheidungsproblem is unsolvable in any system of symbolic logic which is adequate to a certain portion of arithmetic and is \u03c9-consistent. The purpose of the present note is to outline an extension of this result to the engere Funktionenkalkul of Hilbert and Ackermann. In the author's cited paper it is pointed out that there can be associated recursively with every well-formed formula a recursive enumeration of the formulas into which it is convertible. This means the existence of a recursively defined function a of two positive integers such that, if y is the Godel representation of a well-formed formula Y then a(x, y) is the Godel representation of the x th formula in the enumeration of the formulas into which Y is convertible. Consider the system L of symbolic logic which arises from the engere Funktionenkalkul by adding to it: as additional undefined symbols, a symbol 1 for the number 1 (regarded as an individual), a symbol = for the propositional function = (equality of individuals), a symbol s for the arithmetic function x +1, a symbol a for the arithmetic function a described in the preceding paragraph, and symbols b 1 , b 2 , \u2026, b k for the auxiliary arithmetic functions which are employed in the recursive definition of a ; and as additional axioms, the recursion equations for the functions a , b 1 , b 2 , \u2026, b k (expressed with free individual variables, the class of individuals being taken as identical with the class of positive integers), and two axioms of equality, x = x , and x = y \u2192[F(x)\u2192F(y)] ."
            },
            "slug": "A-Note-on-the-Entscheidungsproblem-Church",
            "title": {
                "fragments": [],
                "text": "A Note on the Entscheidungsproblem"
            },
            "tldr": {
                "abstractSimilarityScore": 40,
                "text": "It is shown that the general case of the Entscheidungsproblem is unsolvable in any system of symbolic logic which is adequate to a certain portion of arithmetic and is \u03c9-consistent."
            },
            "venue": {
                "fragments": [],
                "text": "J. Symb. Log."
            },
            "year": 1936
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 13,
                                "start": 10
                            }
                        ],
                        "text": "Deletions (1) through (5) are by virtue of the replacement principle; deletion (6), of the entire clause C~, is by virtue of the purity principle."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 83,
                                "start": 80
                            }
                        ],
                        "text": "C2 : { u P ( y 2 , f ( y , , y~)), ~ P ( f ( y l , y~),f(y~ , y~)), Q(yl , y2)} (1) (2)"
                    },
                    "intents": []
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A note oa the Entscheidungsproblem"
            },
            "venue": {
                "fragments": [],
                "text": "J. S~tmb. Logic"
            },
            "year": 1936
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A proof method for quantifieatioa theory"
            },
            "venue": {
                "fragments": [],
                "text": "I B M J. [lea. Develop"
            },
            "year": 1960
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A semidecision procedure for the functi ( mal calculus"
            },
            "venue": {
                "fragments": [],
                "text": "J . ACM"
            },
            "year": 1963
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Theorem - proviag on the computer"
            },
            "venue": {
                "fragments": [],
                "text": "J . ACM"
            },
            "year": 1963
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A proof method for quantifieatioa theory"
            },
            "venue": {
                "fragments": [],
                "text": "I B M J . [ lea . Develop ."
            },
            "year": 1960
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Theorem-proviag on the computer"
            },
            "venue": {
                "fragments": [],
                "text": "J. ACM"
            },
            "year": 1963
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A note oa the Entscheidungsproblem"
            },
            "venue": {
                "fragments": [],
                "text": "J. S~tmb. Logic Correction, ibid"
            },
            "year": 1936
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 2,
            "methodology": 1,
            "result": 1
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 12,
        "totalPages": 2
    },
    "page_url": "https://www.semanticscholar.org/paper/A-Machine-Oriented-Logic-Based-on-the-Resolution-Robinson/d2109eba4f160755f0b9a7497b6b691c2fa2d5d8?sort=total-citations"
}