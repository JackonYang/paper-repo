{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "10101755"
                        ],
                        "name": "H. Fahmy",
                        "slug": "H.-Fahmy",
                        "structuredName": {
                            "firstName": "Hoda",
                            "lastName": "Fahmy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Fahmy"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1703931"
                        ],
                        "name": "D. Blostein",
                        "slug": "D.-Blostein",
                        "structuredName": {
                            "firstName": "Dorothea",
                            "lastName": "Blostein",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Blostein"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 26265717,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "127669dddd4ad079d833aebbcec3975cfafbbead",
            "isKey": false,
            "numCitedBy": 40,
            "numCiting": 23,
            "paperAbstract": {
                "fragments": [],
                "text": "Graph grammars are a promising tool for solving picture processing problems. However, the application of graph grammars to diagram recognition has been limited to rather simple analysis of local symbol configurations. This paper introduces the Build-Weed-Incorporate programming style for graph grammars and shows its application in determining the meaning of complex diagrams, where the interaction among physically distant symbols is semantically important. Diagram recognition can be divided into two stages: symbol recognition and high-level recognition. Symbol recognition has been studied extensively in the literature. In this work we assume the existence of a symbol recognizer and use a graph grammar to assemble the diagram's information content from the symbols and their spatial relationships. The Build-Weed-Incorporate approach is demonstrated by a detailed discussion of a graph grammar for high-level recognition of music notation."
            },
            "slug": "A-graph-grammar-programming-style-for-recognition-Fahmy-Blostein",
            "title": {
                "fragments": [],
                "text": "A graph grammar programming style for recognition of music notation"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "The Build-Weed-Incorporate programming style for graph grammars is introduced and its application in determining the meaning of complex diagrams, where the interaction among physically distant symbols is semantically important."
            },
            "venue": {
                "fragments": [],
                "text": "Machine Vision and Applications"
            },
            "year": 2005
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1720945"
                        ],
                        "name": "H. Bunke",
                        "slug": "H.-Bunke",
                        "structuredName": {
                            "firstName": "Horst",
                            "lastName": "Bunke",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Bunke"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 10488995,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a63c0561ade044b68907aa6c92c5fb7355bc7640",
            "isKey": false,
            "numCitedBy": 159,
            "numCiting": 33,
            "paperAbstract": {
                "fragments": [],
                "text": "Attributed programmed graph grammars are introduced in this paper and their application to the interpretation of schematic diagrams is proposed. In contrast with most of the approaches to syntactic pattern recognition, where the grammar controls a parser, the grammar in our system is used as a generative tool. Two classes of diagrams are studied, namely circuit diagrams and flowcharts. The task is in either case to extract a description from an input diagram."
            },
            "slug": "Attributed-Programmed-Graph-Grammars-and-Their-to-Bunke",
            "title": {
                "fragments": [],
                "text": "Attributed Programmed Graph Grammars and Their Application to Schematic Diagram Interpretation"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "Attributed programmed graph grammars are introduced in this paper and their application to the interpretation of schematic diagrams is proposed."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Transactions on Pattern Analysis and Machine Intelligence"
            },
            "year": 1982
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "97306284"
                        ],
                        "name": "K. Fu",
                        "slug": "K.-Fu",
                        "structuredName": {
                            "firstName": "King-Sun",
                            "lastName": "Fu",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Fu"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 62636588,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2982aba3ad1a424ccd342895c308c9744f06ea6f",
            "isKey": false,
            "numCitedBy": 985,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Syntactic-Pattern-Recognition-And-Applications-Fu",
            "title": {
                "fragments": [],
                "text": "Syntactic Pattern Recognition And Applications"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1968
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {},
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 3,
        "totalPages": 1
    },
    "page_url": "https://www.semanticscholar.org/paper/Document-Table-Recognition-by-Graph-Rewriting-Rahgozar/d77a26c13f9ae78f4cd80fb0712aee0dd6274c84?sort=total-citations"
}