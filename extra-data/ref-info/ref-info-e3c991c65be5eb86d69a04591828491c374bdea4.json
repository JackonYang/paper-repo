{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1401830631"
                        ],
                        "name": "A. Guzm\u00e1n-Arenas",
                        "slug": "A.-Guzm\u00e1n-Arenas",
                        "structuredName": {
                            "firstName": "Adolfo",
                            "lastName": "Guzm\u00e1n-Arenas",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Guzm\u00e1n-Arenas"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1409105282"
                        ],
                        "name": "Adolfo Guzmaan",
                        "slug": "Adolfo-Guzmaan",
                        "structuredName": {
                            "firstName": "Adolfo",
                            "lastName": "Guzmaan",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Adolfo Guzmaan"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 61206632,
            "fieldsOfStudy": [
                "Art"
            ],
            "id": "bce627694465755be2f107c1a53e5b6a9515f417",
            "isKey": false,
            "numCitedBy": 172,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Methods are presented 1) to partition or decompose a visual scene into the bodies forming it; 2) to position these bodies in three-dimensional space, by combining two scenes that make a stereoscopic pair; 3) to find the regions or zones of a visual scene that belong to its background; 4) to carry out the isolation of the objects in 1) when the input has inaccuracies. Running computer programs implement the methods and many examples illustrate their behavior. The input is a two-dimensional line-drawing of the scene, assumed to contain three-dimensional bodies possessing flat faces (polyhedra); some of them may be partially occluded. Suggestions are made for extending the work to curved objects. Some comparisons are made with human visual perception. The main conclusion is that it is possible to separate a picture or scene into the constituent objects exclusively on the basis of monocular geometric properties (on the basis of pure form); in fact, successful methods are shown."
            },
            "slug": "COMPUTER-RECOGNITION-OF-THREE-DIMENSIONAL-OBJECTS-A-Guzm\u00e1n-Arenas-Guzmaan",
            "title": {
                "fragments": [],
                "text": "COMPUTER RECOGNITION OF THREE-DIMENSIONAL OBJECTS IN A VISUAL SCENE"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "The main conclusion is that it is possible to separate a picture or scene into the constituent objects exclusively on the basis of monocular geometric properties (onThe basis of pure form); in fact, successful methods are shown."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1690890"
                        ],
                        "name": "U. Montanari",
                        "slug": "U.-Montanari",
                        "structuredName": {
                            "firstName": "Ugo",
                            "lastName": "Montanari",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "U. Montanari"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [],
            "corpusId": 46731277,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "45c3503dfb397425c15f0a3bea2bf3947f9e0f17",
            "isKey": false,
            "numCitedBy": 93,
            "numCiting": 6,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Separable-Graphs,-Planar-Graphs-and-Web-Grammars-Montanari",
            "title": {
                "fragments": [],
                "text": "Separable Graphs, Planar Graphs and Web Grammars"
            },
            "venue": {
                "fragments": [],
                "text": "Inf. Control."
            },
            "year": 1970
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1690890"
                        ],
                        "name": "U. Montanari",
                        "slug": "U.-Montanari",
                        "structuredName": {
                            "firstName": "Ugo",
                            "lastName": "Montanari",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "U. Montanari"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 14034879,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "223c2759db1f1e29b584fe6c7bafb949b67711ca",
            "isKey": false,
            "numCitedBy": 321,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : A technique for recognizing systems of lines is presented, in which the heuristic of the problem is not embedded in the recognition algorithm but is expressed in a figure of merit. A multistage decision process is then able to recognize in the input picture the optimal system of lines according to the given figure of merit. Due to the global approach, greater flexibility and adequacy in the particular problem is achieved. The relation between the structure of the figure of merit and the complexity of the optimization process is then discussed. (Modified author abstract)"
            },
            "slug": "On-the-optimal-detection-of-curves-in-noisy-Montanari",
            "title": {
                "fragments": [],
                "text": "On the optimal detection of curves in noisy pictures"
            },
            "tldr": {
                "abstractSimilarityScore": 79,
                "text": "A technique for recognizing systems of lines is presented, in which the heuristic of the problem is not embedded in the recognition algorithm but is expressed in a figure of merit, which allows for greater flexibility and adequacy in the particular problem."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1971
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "31743562"
                        ],
                        "name": "Jerome Feder",
                        "slug": "Jerome-Feder",
                        "structuredName": {
                            "firstName": "Jerome",
                            "lastName": "Feder",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Jerome Feder"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 61565087,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "18cec0c7012a89ea4bfdcabb118bc3c60e39ead6",
            "isKey": false,
            "numCitedBy": 16,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : Pictorial patterns can be considered as statements in a two-dimensional language. In the report, a variety of languages composed of sets of encoded geometric curves are classified in the Chomsky language hierarchy. The relationships between classes of languages and classes of automata then permit bounds on the time and memory required to recognize the patterns to be determined. The phrase-structure grammar scheme for string languages is extended by permitting symbols to have an arbitrary number of 'attaching points,' and classes of the extended languages are defined. An algorithm for parsing a 'context-free' language of this type according to a formal language description is incorporated into a table-driven pattern analyzer. This device is an extension of the idea of a table-driven compiler and is able to perform a broad range of pattern analysis tasks on widely differing classes of line patterns. The class of patterns and method for structurally breaking down the patterns can be changed simply by changing the entries in the program syntax tables. The table-driven pattern analyzer is applied to the recognition of events in bubble chamber photographs. (Author)"
            },
            "slug": "LINGUISTIC-SPECIFICATION-AND-ANALYSIS-OF-CLASSES-OF-Feder",
            "title": {
                "fragments": [],
                "text": "LINGUISTIC SPECIFICATION AND ANALYSIS OF CLASSES OF LINE PATTERNS."
            },
            "tldr": {
                "abstractSimilarityScore": 54,
                "text": "A variety of languages composed of sets of encoded geometric curves are classified in the Chomsky language hierarchy and the table-driven pattern analyzer is applied to the recognition of events in bubble chamber photographs."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1969
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "46973741"
                        ],
                        "name": "J. Schwebel",
                        "slug": "J.-Schwebel",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Schwebel",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Schwebel"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1774056"
                        ],
                        "name": "B. McCormick",
                        "slug": "B.-McCormick",
                        "structuredName": {
                            "firstName": "Bruce",
                            "lastName": "McCormick",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. McCormick"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 27331587,
            "fieldsOfStudy": [
                "Mathematics",
                "Computer Science"
            ],
            "id": "d13970133f48c721d8bb9da8ed2d8dbaec73ba9e",
            "isKey": false,
            "numCitedBy": 4,
            "numCiting": 4,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Consistent-properties-of-composite-formation-under-Schwebel-McCormick",
            "title": {
                "fragments": [],
                "text": "Consistent properties of composite formation under a binary relation"
            },
            "venue": {
                "fragments": [],
                "text": "Inf. Sci."
            },
            "year": 1970
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34903197"
                        ],
                        "name": "R. W. Floyd",
                        "slug": "R.-W.-Floyd",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Floyd",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. W. Floyd"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 2003382,
            "fieldsOfStudy": [
                "Chemistry"
            ],
            "id": "bab268857baf555ea6d2c1f638857e28b4fd5aa5",
            "isKey": false,
            "numCitedBy": 3595,
            "numCiting": 3,
            "paperAbstract": {
                "fragments": [],
                "text": "procedure ari thmetic (a, b, c, op); in t eger a, b, c, op; \u00a2 o n l m e n t This procedure will perform different order ar i thmetic operations with b and c, put t ing the result in a. The order of the operation is given by op. For op = 1 addit ion is performed. For op = 2 multiplicaLion, repeated addition, is done. Beyond these the operations are non-commutat ive. For op = 3 exponentiat ion, repeated multiplication, is done, raising b to the power c. Beyond these the question of grouping is important . The innermost implied parentheses are at the right. The hyper-exponent is always c. For op = 4 te t ra t ion, repeated exponentiat ion, is done. For op = 5, 6, 7, etc., the procedure performs pentat ion, hexation, heptat ion, etc., respectively. The routine was originally programmed in FORTRAN for the Control Data 160 desk-size computer. The original program was limited to te t ra t ion because subroutine recursiveness in Control Data 160 FORTRAN has been held down to four levels in the interests of economy. The input parameter , b, c, and op, must be positive integers, not zero; b e g i n own i n t e g e r d, e, f, drop; i f o p = 1 t h e n b e g i n a := h-4c; go t o l e n d i f o p = 2 t h e n d := 0; else d := 1; e := c; drop := op 1; for f := I s t e p 1 u n t i l e do b e g i n ari thmetic (a, b, d, drop);"
            },
            "slug": "Algorithm-97:-Shortest-path-Floyd",
            "title": {
                "fragments": [],
                "text": "Algorithm 97: Shortest path"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "The procedure was originally programmed in FORTRAN for the Control Data 160 desk-size computer and was limited to te t ra t ion because subroutine recursiveness in CONTROL Data 160 FORTRan has been held down to four levels in the interests of economy."
            },
            "venue": {
                "fragments": [],
                "text": "Commun. ACM"
            },
            "year": 1962
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "16667726"
                        ],
                        "name": "S. Warshall",
                        "slug": "S.-Warshall",
                        "structuredName": {
                            "firstName": "Stephen",
                            "lastName": "Warshall",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Warshall"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 33763989,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "6145f0b0df53ec2581d733f003d251e0cabef04a",
            "isKey": false,
            "numCitedBy": 1616,
            "numCiting": 2,
            "paperAbstract": {
                "fragments": [],
                "text": "Given two boolean matrices A arid B, we define the boolean product A A B as that matrix whose (i, j)th entry is vk(a~/, A bki). We define tile boolean sum A V B as that matrix whose (i, j)th entry is a ij V b~j. The use of boolean matrices to represent program topology (Presser [1], and Marimont [2], t'or example) has led to interest in algorithms for transforming the d \u00d7 d boolean matrix M to the d \u00d7 d boolean matrix M' given by: d M' = v M s where we defineM ~ = MandM ~+I = M ~AM. 4=1 ne convenience of describing the transformation as a boolean sum of boolean products has apparently l suggested the corresponding algorithms, the running times of which increase-other things being equal-as the cube of d. While refraining from comment on the area of utility of such matrices, we prove the validity of an algorithm whose running time goes up slightly faster than the square of d. T,~EoeE~z. Given a square (d \u00d7 d) matrix M each of whose elements m~5 is 0 or 1. Define M' by m,{~ = 1 if and only if either mii= 1 or there exist integers 1. Set i = 1. 2. (Va3 :my* = 1)(V\u00a3) set. rnj* =mik V mik. We assert M* = M'. PROOF. Trivially, m~*j = 1 ~ m~i = 1. For, either m~s was unity initially (m,4j = J)-in which case m~i is surely unity-or m~*-was set to unity in step two. That is, there were, at the L0th application of step two, m~L0 = m~0~\" = 1. 1 Presser, op. cir. In his definition of Boolean sum and product, Presser uses \"V\" for product and \"/k\" for sum. This is apparently a typographicM error, for his subsequent usage is consistent with ours. This definition of M' is trivially equivalent to the previous one. a This definition by construction is equivalent to the recursive definition: 0. (mo)~ = mij ; 1."
            },
            "slug": "A-Theorem-on-Boolean-Matrices-Warshall",
            "title": {
                "fragments": [],
                "text": "A Theorem on Boolean Matrices"
            },
            "tldr": {
                "abstractSimilarityScore": 36,
                "text": "It is proved the validity of an algorithm whose running time goes up slightly faster than the square of d, the running times of which increase-other things being equal-as the cube of d."
            },
            "venue": {
                "fragments": [],
                "text": "JACM"
            },
            "year": 1962
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "8581225"
                        ],
                        "name": "C. Eastman",
                        "slug": "C.-Eastman",
                        "structuredName": {
                            "firstName": "Charles",
                            "lastName": "Eastman",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Eastman"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 141,
                                "start": 138
                            }
                        ],
                        "text": "For instance, many practical design problems consist of finding any solution which satisfies all topological and geometrical restrictions [1]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 17261486,
            "fieldsOfStudy": [
                "Physics"
            ],
            "id": "a8dc2a467b3f23f17bc28f1e2b140225d67dd40d",
            "isKey": false,
            "numCitedBy": 74,
            "numCiting": 34,
            "paperAbstract": {
                "fragments": [],
                "text": "Problems involving the arrangement of objects in two- or three-space where the objective function primarily consists of derivatives of the distance between objects or their arrangement are called space planning problems. The representational requirements for this problem area are defined and compared with current computer graphic languages. Four alternative data structures that allow automated space planning are described and compared."
            },
            "slug": "Representations-for-space-planning-Eastman",
            "title": {
                "fragments": [],
                "text": "Representations for space planning"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "The representational requirements for this problem area are defined and compared with current computer graphic languages, and four alternative data structures that allow automated space planning are described and compared."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1970
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1830264"
                        ],
                        "name": "A. Ginzburg",
                        "slug": "A.-Ginzburg",
                        "structuredName": {
                            "firstName": "Abraham",
                            "lastName": "Ginzburg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Ginzburg"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 117770147,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "69e9351971b7859108b5b1c0bc3b95c225882261",
            "isKey": false,
            "numCitedBy": 222,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Algebraic-theory-of-automata-Ginzburg",
            "title": {
                "fragments": [],
                "text": "Algebraic theory of automata"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145939524"
                        ],
                        "name": "A. Shaw",
                        "slug": "A.-Shaw",
                        "structuredName": {
                            "firstName": "Alan",
                            "lastName": "Shaw",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Shaw"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 59799410,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "8cf54543800ccb74008cfc16d9823d03f23c055d",
            "isKey": false,
            "numCitedBy": 54,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "THE-FORMAL-DESCRIPTION-AND-PARSING-OF-PICTURES.-Shaw",
            "title": {
                "fragments": [],
                "text": "THE FORMAL DESCRIPTION AND PARSING OF PICTURES."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1968
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 1
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 10,
        "totalPages": 1
    },
    "page_url": "https://www.semanticscholar.org/paper/Networks-of-constraints:-Fundamental-properties-and-Montanari/e3c991c65be5eb86d69a04591828491c374bdea4?sort=total-citations"
}