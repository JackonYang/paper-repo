{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "28791020"
                        ],
                        "name": "B. Raphael",
                        "slug": "B.-Raphael",
                        "structuredName": {
                            "firstName": "Bertram",
                            "lastName": "Raphael",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Raphael"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 14,
                                "start": 1
                            }
                        ],
                        "text": "(Raphael, 1968, p. 91)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 65,
                                "start": 52
                            }
                        ],
                        "text": "One of the earliest limited logic programs was SIR (Raphael, 1968), which could answer questions using simple logical relations (like the \u201cpart\u201d example in the previous paragraph)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 3,
                                "start": 0
                            }
                        ],
                        "text": "SIR had special logic for answering \u201chow many\u201d questions, using information like \u201cA hand has five fingers."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 58,
                                "start": 45
                            }
                        ],
                        "text": "Systems such as STUDENT (Bobrow, 1968)) SIR (Raphael, 1968), ELIZA ( Weizenbaum, 1966), and Semantic Memory (Quillian, 1968) made no attempt to do a complete syntactic analysis of the inputs."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 117,
                                "start": 102
                            }
                        ],
                        "text": "2.1.4 General Deductive Systems\nThe problems of limited logic systems were recognized very early (see Raphael ( 1968) p. QO), and people looked for a more general approach to storing and using complex information."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 86,
                                "start": 83
                            }
                        ],
                        "text": "The complex information was not expressed as data, but was built directly into the SIR operating program."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 86,
                                "start": 73
                            }
                        ],
                        "text": "This notation may take many different forms, such as \u201cdescr;ption lists\u201d ( Raphael, 1968), \u201ckernels\u201d ( Simmons, 1966), \u201cconcept-relationconcept triples\u201d (Simmons et al., 1966)) \u201cdata nodes\u201d ( Quillian, 1969 ) , \u201crings\u201d ( Thompson, 1966)) \u201crelational operators\u201d ( Tharp, 1969), etc."
                    },
                    "intents": []
                }
            ],
            "corpusId": 62082148,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "327efd65ba18aef17379fcc0c7dc7162e06339a6",
            "isKey": true,
            "numCitedBy": 143,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "SIR is a computer system, programmed in the LISP language, which accepts information and answers questions expressed in a restricted form of English. This system demonstrates what can reasonably be called an ability to \"understand\" semantic information. SIR''s semantic and deductive ability is based on the construction of an internal model, which uses word associations and property lists, for the relational information normally conveyed in conversational statements. A format-matching procedure extracts semantic content from English sentences. If an input sentence is declarative, the system adds appropriate information to the model. If an input sentence is a question, the system searches the model until it either finds the answer or determines why it cannot find the answer. In all cases SIR reports its conclusions. The system has some capacity to recognize exceptions to general rules, resolve certain semantic ambiguities, and modify its model structure in order to save computer memory space. Judging from its conversational ability, SIR is more \"intelligent\" than any existing question-answering system. The author describes how this ability was developed and how the basic features of SIR compare with those of other systems. The working system, SIR , is a first step toward intelligent machine communication. The author proposes a next step by describing how to construct a more general system which is less complex and yet more powerful than SIR . This proposed system contains a generalized version of the SIR model, a formal logical system called SIR1 , and a computer program for testing the truth of SIR1 statements with respect to the generalized model by using partial proof procedures in the predicate calculus. The thesis also describes the formal properties of SIR1 and how they relate to the logical structure of SIR ."
            },
            "slug": "SIR:-A-COMPUTER-PROGRAM-FOR-SEMANTIC-INFORMATION-Raphael",
            "title": {
                "fragments": [],
                "text": "SIR: A COMPUTER PROGRAM FOR SEMANTIC INFORMATION RETRIEVAL"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "The author describes how this ability to \"understand\" semantic information was developed and how the basic features of SIR compare with those of other systems, and proposes a next step to construct a more general system which is less complex and yet more powerful than SIR."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1964
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143745511"
                        ],
                        "name": "R. F. Simmons",
                        "slug": "R.-F.-Simmons",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Simmons",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. F. Simmons"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1737585174"
                        ],
                        "name": "J. Burger",
                        "slug": "J.-Burger",
                        "structuredName": {
                            "firstName": "John F.",
                            "lastName": "Burger",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Burger"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "4820311"
                        ],
                        "name": "R. Schwarcz",
                        "slug": "R.-Schwarcz",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Schwarcz",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Schwarcz"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 17774234,
            "fieldsOfStudy": [
                "Linguistics"
            ],
            "id": "d5a953f0911553d75d35f55731ec3ff00ac916c6",
            "isKey": false,
            "numCitedBy": 34,
            "numCiting": 29,
            "paperAbstract": {
                "fragments": [],
                "text": "The long-term goal for computational linguistics is to increase our understanding of linguistic and conceptual structures and to formally describe them so that computers can deal effectively with natural languages in such applications as question answering, stylistic and content analysis, essay writing, automated translation, etc. The eventual realization of this goal requires not only a satisfactory model of linguistic structures, but also models for verbal understanding and verbal meaning. In this paper we outline a theory and a model of verbal understanding and describe Protosynthex III, an experimental implementation of the model in the form of a general-purpose language processing system. The effectiveness of the model in representing the process of verbal understanding is demonstrated in terms of Protosynthex III's capability to disambiguate English sentences, to answer a range of English questions and to derive and generate meaning-preserving paraphrases."
            },
            "slug": "A-computational-model-of-verbal-understanding-Simmons-Burger",
            "title": {
                "fragments": [],
                "text": "A computational model of verbal understanding"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "The effectiveness of the model in representing the process of verbal understanding is demonstrated in terms of Protosynthex III's capability to disambiguate English sentences, to answer a range of English questions and to derive and generate meaning-preserving paraphrases."
            },
            "venue": {
                "fragments": [],
                "text": "AFIPS '68 (Fall, part I)"
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1699245"
                        ],
                        "name": "T. Winograd",
                        "slug": "T.-Winograd",
                        "structuredName": {
                            "firstName": "Terry",
                            "lastName": "Winograd",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Winograd"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 54114373,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "10f7507b8408bf35125b8e04254ad890c8d45e1d",
            "isKey": false,
            "numCitedBy": 581,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : The paper describes a system for the computer understanding of English. The system answers questions, executes commands, and accepts information in normal English dialog. It uses semantic information and context to understand discourse and to disambiguate sentences. It combines a complete syntactic analysis of each sentence with a 'heuristic understander' which uses different kinds of information about a sentence, other parts of the discourse, and general information about the world in deciding what the sentence means."
            },
            "slug": "Procedures-As-A-Representation-For-Data-In-A-For-Winograd",
            "title": {
                "fragments": [],
                "text": "Procedures As A Representation For Data In A Computer Program For Understanding Natural Language"
            },
            "tldr": {
                "abstractSimilarityScore": 53,
                "text": "A system for the computer understanding of English that combines a complete syntactic analysis of each sentence with a 'heuristic understander' which uses different kinds of information about a sentence, other parts of the discourse, and general information about the world in deciding what the sentence means."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1971
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "9079926"
                        ],
                        "name": "W. Woods",
                        "slug": "W.-Woods",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Woods",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Woods"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 63,
                                "start": 50
                            }
                        ],
                        "text": "A system which partially fits this description is Woods\u2019 ( 1968)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 14297121,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "2913075d7fe608ec2964a7e8d68eea1a15d4bb52",
            "isKey": false,
            "numCitedBy": 104,
            "numCiting": 8,
            "paperAbstract": {
                "fragments": [],
                "text": "Simmons has presented a survey of some fifteen experimental question-answering and related systems which have been constructed since 1959. These systems take input questions in natural English (subject to varying constraints) and attempt to answer the questions on the basis of a body of information, called the data base, which is stored inside the computer. This process can be conceptually divided into three phases---syntatic analysis, semantic analysis, and retrieval, as illustrated schematically in Figure 1. The first phase consists of parsing the input sentence into a structure which explicitly represents the grammatical relationships among the words of the sentence. Using this information the second component constructs a representation of the semantic content or \"meaning\" of the sentence. The remaining phase consists of procedures for either retrieving the answer directly from the data base, or else deducing the answer from information contained in the data base. The dotted lines in the figure represent the possible use of feedback from the later stages to aid in parsing and semantic interpretation."
            },
            "slug": "Procedural-semantics-for-a-question-answering-Woods",
            "title": {
                "fragments": [],
                "text": "Procedural semantics for a question-answering machine"
            },
            "tldr": {
                "abstractSimilarityScore": 77,
                "text": "A survey of some fifteen experimental question-answering and related systems which have been constructed since 1959, which take input questions in natural English and attempt to answer the questions on the basis of a body of information, called the data base, which is stored inside the computer."
            },
            "venue": {
                "fragments": [],
                "text": "AFIPS '68 (Fall, part I)"
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2657806"
                        ],
                        "name": "A. L. Tharp",
                        "slug": "A.-L.-Tharp",
                        "structuredName": {
                            "firstName": "Alan",
                            "lastName": "Tharp",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. L. Tharp"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3069358"
                        ],
                        "name": "G. Krulee",
                        "slug": "G.-Krulee",
                        "structuredName": {
                            "firstName": "Gilbert",
                            "lastName": "Krulee",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Krulee"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 12489250,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "3751e88244dab5b8ea6f69ae5056ffecb1856e71",
            "isKey": false,
            "numCitedBy": 8,
            "numCiting": 21,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper describes a system for \"remembering\" a story or passage in English and for the subsequent retrieval of responses to questions. Although it functions as an information retrieval system, it is also intended as a model for long-term human memory. Information is stored in the form of predicates and propertylists. In translating from natural language, the system carries out a transformational analysis of each sentence and identifies its deep structure interpretation. This grammatical analysisis essential to the identification of the predicates as well as relationships among them. \n \nThe first two subsystems carry out the grammatical analysis. A third identifies the predicates and propertylists, determines a time and priority structure, forms a logical map of relationships among predicates, and eliminates some predicates based on an assignment of priority. The fourth subsystem is used to answer inquiries about the stored information. \n \nThe method is illustrated with references to one story that has been processed and with examples of questions that might be asked."
            },
            "slug": "Using-Relational-Operators-to-Structure-Long-Term-Tharp-Krulee",
            "title": {
                "fragments": [],
                "text": "Using Relational Operators to Structure Long-Term Memory"
            },
            "tldr": {
                "abstractSimilarityScore": 82,
                "text": "A system for \"remembering\" a story or passage in English and for the subsequent retrieval of responses to questions, which functions as an information retrieval system and is intended as a model for long-term human memory."
            },
            "venue": {
                "fragments": [],
                "text": "IJCAI"
            },
            "year": 1969
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1808089"
                        ],
                        "name": "L. Sikl\u00f3ssy",
                        "slug": "L.-Sikl\u00f3ssy",
                        "structuredName": {
                            "firstName": "Laurent",
                            "lastName": "Sikl\u00f3ssy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Sikl\u00f3ssy"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 58822924,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d057f13d7f9bc2ddc98482df6088e35ea83c9df5",
            "isKey": false,
            "numCitedBy": 67,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : Learning a natural language is taken as an improvement in a system's ability to express situations in a natural language. This dissertation describes a computer program, called Zbie, written in IPL-V, which accepts the description of situations in a uniform, structured functional language and tries to express these situations in a natural language. Examples are given for German and, mostly, Russian. At run-time, Zbie builds simple memory structures. Patterns and sets are built on the functional language. The translation rules of the patterns and an in-context vocabulary provide the transition to the natural language. Zbie is a cautious learner, and avoids errors by several mechanisms. Zbie is capable of some evolutionary learning."
            },
            "slug": "Natural-language-learning-by-computer-Sikl\u00f3ssy",
            "title": {
                "fragments": [],
                "text": "Natural language learning by computer"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This dissertation describes a computer program, called Zbie, written in IPL-V, which accepts the description of situations in a uniform, structured functional language and tries to express them in a natural language."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "51952328"
                        ],
                        "name": "Keren McConlogue",
                        "slug": "Keren-McConlogue",
                        "structuredName": {
                            "firstName": "Keren",
                            "lastName": "McConlogue",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Keren McConlogue"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143745511"
                        ],
                        "name": "R. F. Simmons",
                        "slug": "R.-F.-Simmons",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Simmons",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. F. Simmons"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 14588621,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4b4306d839a611b115dd1e922836da76163abe38",
            "isKey": false,
            "numCitedBy": 9,
            "numCiting": 17,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : A dependency analysis system based on pattern recognition and learning logic was developed to infer word-classes and rules of syntactic combination from experience with text which had been analyzed. The characteristics used to form word-classes are the depth in the dependency tree of each word, the direction of its governor, and the same features for each of its immediate neighbors. Syntactic rules of combination show the relation of a word to its governor in the depth pattern of the sentence. The system was tested on 400 elementary Basic English sentences including 300 used earlier by Knowlton in a different learning parser. The Pattern Learning Parser was able to derive a grammar which in a second pass allowed completely correct parsing of all 400 sentences. After experience with 300 sentences it was able to generalize with 77% accuracy to the next 100. In accumulative learning trials after the first 200 sentences it averaged a probability of .9 for accurately parsing each new sentence it encountered. It was concluded that the system was adequate for learning to parse the bulk of Basic English but that further development is required before conclusions about its application to ordinary English can be stated. The system is operational and available on the ARPA/SDC time-shared Q-32 computing system. (Author)"
            },
            "slug": "Analyzing-English-syntax-with-a-pattern-learning-McConlogue-Simmons",
            "title": {
                "fragments": [],
                "text": "Analyzing English syntax with a pattern-learning parser"
            },
            "tldr": {
                "abstractSimilarityScore": 79,
                "text": "A dependency analysis system based on pattern recognition and learning logic was developed to infer word-classes and rules of syntactic combination from experience with text which had been analyzed and was concluded that the system was adequate for learning to parse the bulk of Basic English."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "116287506"
                        ],
                        "name": "H. Dewar",
                        "slug": "H.-Dewar",
                        "structuredName": {
                            "firstName": "Hamish",
                            "lastName": "Dewar",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "H. Dewar"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1748193"
                        ],
                        "name": "P. Bratley",
                        "slug": "P.-Bratley",
                        "structuredName": {
                            "firstName": "Paul",
                            "lastName": "Bratley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. Bratley"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "6904853"
                        ],
                        "name": "J. P. Thorne",
                        "slug": "J.-P.-Thorne",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Thorne",
                            "middleNames": [
                                "Peter"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. P. Thorne"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 17326688,
            "fieldsOfStudy": [
                "Linguistics"
            ],
            "id": "476b5bed20d9698aeca40ee6eb8928c5b9097b5e",
            "isKey": false,
            "numCitedBy": 15,
            "numCiting": 3,
            "paperAbstract": {
                "fragments": [],
                "text": "A program is described which produces syntactic analyses of English sentences with respect to a transformational grammar. The main features of the analyzer are that it uses only a limited dictionary of English words and that it pursues all analysis paths simultaneously while processing the sentence from left to right.\nThe form of representation used for the dictionary and the grammar is indicated and an outline account is given of the analysis procedure. Techniques for keeping the size of the analysis record within reasonable limits and for avoiding the need for dynamic application of certain transformational rules are described.\nA number of examples of output produced by the program are given. The output includes timing information."
            },
            "slug": "A-program-for-the-syntactic-analysis-of-English-Dewar-Bratley",
            "title": {
                "fragments": [],
                "text": "A program for the syntactic analysis of English sentences"
            },
            "tldr": {
                "abstractSimilarityScore": 83,
                "text": "A program is described which produces syntactic analyses of English sentences with respect to a transformational grammar that uses only a limited dictionary of English words and pursues all analysis paths simultaneously while processing the sentence from left to right."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1969
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "48777451"
                        ],
                        "name": "J. Katz",
                        "slug": "J.-Katz",
                        "structuredName": {
                            "firstName": "Jerrold",
                            "lastName": "Katz",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Katz"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "38663378"
                        ],
                        "name": "J. Fodor",
                        "slug": "J.-Fodor",
                        "structuredName": {
                            "firstName": "Jerry",
                            "lastName": "Fodor",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Fodor"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 42,
                                "start": 24
                            }
                        ],
                        "text": "Some semantic theories (Katz & Fodor, 1964) are based almost completely on this idea."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 58,
                                "start": 37
                            }
                        ],
                        "text": "1.6.6 Goals of a Semuntic Theory For Katz and Fodor (1964), the goals of a semantic theory are mainly to account for \u201cthe number and content of the readings of a sentence, detecting semantic anomalies, and deciding upon paraphrase relations between sentences.\u201d"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 9860676,
            "fieldsOfStudy": [
                "Linguistics"
            ],
            "id": "7adb3c40ef03a458d35a3851fa66046936211cc3",
            "isKey": true,
            "numCitedBy": 1848,
            "numCiting": 1,
            "paperAbstract": {
                "fragments": [],
                "text": "JSTOR is a not-for-profit service that helps scholars, researchers, and students discover, use, and build upon a wide range of content in a trusted digital archive. We use information technology and tools to increase productivity and facilitate new forms of scholarship. For more information about JSTOR, please contact support@jstor.org.. Linguistic Society of America is collaborating with JSTOR to digitize, preserve and extend access to Language. 1. Introduction. This paperl does not attempt to present a semantic theory of a natural language, but rather to characterize the form of such a theory. A semantic theory of a natural language is part of a linguistic description of that language. Our problem, on the other hand, is part of the general theory of language, fully on a par with the problem of characterizing the structure of grammars of natural languages. A characterization of the abstract form of a semantic theory is given by a metatheory which answers such questions as these: What is the domain of a semantic theory? What are the descriptive and explanatory goals of a semantic theory? What mechanisms are employed in pursuit of these goals? What are the empirical and methodological constraints upon a semantic theory? The present paper approaches the problem of characterizing the form of semantic theories by describing the structure of a semantic theory of English. There can be little doubt but that the results achieved will apply directly to semantic theories of languages closely related to English. The question of their applicability to semantic theories of more distant languages will be left for subsequent investigations to explore. Nevertheless, the present investigation will provide results that can be applied to semantic theories of languages unrelated to English and suggestions about how to proceed with the construction of such theories. We may put our problem this way: What form should a semantic theory of a natural language take to accommodate in the most revealing way the facts about the semantic structure of that language supplied by descriptive research? This question is of primary importance at the present stage of the development of semantics because semantics suffers not from a dearth of facts about meanings and meaning relations in natural languages, but rather from the lack of an adequate theory to organize, systematize, and generalize these facts. Facts about the semantics of natural languages have been contributed in abundance by many diverse fields, including philosophy, linguistics, philology, and \u2026"
            },
            "slug": "The-structure-of-a-semantic-theory-Katz-Fodor",
            "title": {
                "fragments": [],
                "text": "The structure of a semantic theory"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1963
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1749837"
                        ],
                        "name": "Eugene Charniak",
                        "slug": "Eugene-Charniak",
                        "structuredName": {
                            "firstName": "Eugene",
                            "lastName": "Charniak",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Eugene Charniak"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 92,
                                "start": 87
                            }
                        ],
                        "text": "Although they may have very sophisticated mechanisms for using this information (as in CARPS (Charniak, 1969), which can solve word problems in calculus ) , they are each built for a special purpose, and do not handle information with the flexibility which would allow them to be adapted to other uses."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 108,
                                "start": 94
                            }
                        ],
                        "text": "Although they may have very sophisticated mechanisms for using this information (as in CARPS (Charniak, 1969), which can solve word problems in calculus ) , they are each built for a special purpose, and do not handle information with the flexibility which would allow them to be adapted to other\u2026"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 18958438,
            "fieldsOfStudy": [
                "Geology"
            ],
            "id": "28279f2a6ac5f929f605edf0f64af49c30aac381",
            "isKey": false,
            "numCitedBy": 34,
            "numCiting": 8,
            "paperAbstract": {
                "fragments": [],
                "text": "A program was written to solve calculus word problems. The program, CARPS (CAlculus Rate Problem Solver), is restricted to rate problems. The overall plan of the program is similar to Bobrow's STUDENT, the primary difference being the introduction of \"structures\" as the internal model in CARPS. Structures are stored internally as trees, each structure holding the information gathered about one object. \n \nIt was found that the use of structures made CARPS more powerful than STUDENT in several respects. \n \n1) CARPS is better able to recognize that two phrases describe the same object. (e.g., CONICAL PILE and PILE OF SAND) 2) Information about an object can be gathered in piecemeal fashion. In calculus word problems it is not uncommon to have two or three sentences providing information for one equation. 3) CARPS to a limited degree is able to use its knowledge to parse its input sentences. For example, in a problem about a filter, ALTITUDE was interpreted as ALTITUDE OF THE FILTER because CARPS knew that since the filter was a cone and cones have altitudes the filter had an altitude. \n \nThe program has solved 14 calculus problems, most taken (sometimes with slight modifications) from standard calculus texts."
            },
            "slug": "Computer-Solution-of-Calculus-Word-Problems-Charniak",
            "title": {
                "fragments": [],
                "text": "Computer Solution of Calculus Word Problems"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "It was found that the use of structures made CARPS more powerful than STUDENT in several respects, and the program has solved 14 calculus problems, most taken from standard calculus texts."
            },
            "venue": {
                "fragments": [],
                "text": "IJCAI"
            },
            "year": 1969
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143745511"
                        ],
                        "name": "R. F. Simmons",
                        "slug": "R.-F.-Simmons",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Simmons",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. F. Simmons"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1737585174"
                        ],
                        "name": "J. Burger",
                        "slug": "J.-Burger",
                        "structuredName": {
                            "firstName": "John F.",
                            "lastName": "Burger",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Burger"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35201982"
                        ],
                        "name": "R. E. Long",
                        "slug": "R.-E.-Long",
                        "structuredName": {
                            "firstName": "R.",
                            "lastName": "Long",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. E. Long"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 168,
                                "start": 148
                            }
                        ],
                        "text": "This notation may take many different forms, such as \u201cdescr;ption lists\u201d ( Raphael, 1968), \u201ckernels\u201d ( Simmons, 1966), \u201cconcept-relationconcept triples\u201d (Simmons et al., 1966)) \u201cdata nodes\u201d ( Quillian, 1969 ) , \u201crings\u201d ( Thompson, 1966)) \u201crelational operators\u201d ( Tharp, 1969), etc."
                    },
                    "intents": []
                }
            ],
            "corpusId": 14788988,
            "fieldsOfStudy": [
                "Linguistics"
            ],
            "id": "86335b80aa66b7e1e86cbb1cca32de90602f3634",
            "isKey": false,
            "numCitedBy": 16,
            "numCiting": 21,
            "paperAbstract": {
                "fragments": [],
                "text": "Research on question answering by Raphael, Black, and Elliott, and our own work on Protosynthex II has shown that question-answering algorithms can be most easily written if the text source is in the form of simple, explicitly structured sets of subject-verb-nominal strings. Question-answering algorithms that have thus far been developed include word- and structure-matching operations and some few logical inference functions. All of the systems cited have in some fashion limited their input language to simple subject-verb-nominal strings, thus eliminating many problems of syntactic analysis and providing a normalized form for language data."
            },
            "slug": "An-approach-toward-answering-English-questions-from-Simmons-Burger",
            "title": {
                "fragments": [],
                "text": "An approach toward answering English questions from text"
            },
            "tldr": {
                "abstractSimilarityScore": 59,
                "text": "Questions-answering algorithms can be most easily written if the text source is in the form of simple, explicitly structured sets of subject-verb-nominal strings, thus eliminating many problems of syntactic analysis and providing a normalized form for language data."
            },
            "venue": {
                "fragments": [],
                "text": "AFIPS '66 (Fall)"
            },
            "year": 1966
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143745511"
                        ],
                        "name": "R. F. Simmons",
                        "slug": "R.-F.-Simmons",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Simmons",
                            "middleNames": [
                                "F."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. F. Simmons"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 30,
                                "start": 17
                            }
                        ],
                        "text": "PROTOSYNTHEX II (Simmons, 1966) had special logic for taking advantage of the transitivity of \u201cis\u201d (e.g., \u201cA boy is a person."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 99
                            }
                        ],
                        "text": "This notation may take many different forms, such as \u201cdescr;ption lists\u201d ( Raphael, 1968), \u201ckernels\u201d ( Simmons, 1966), \u201cconcept-relationconcept triples\u201d (Simmons et al., 1966)) \u201cdata nodes\u201d ( Quillian, 1969 ) , \u201crings\u201d ( Thompson, 1966)) \u201crelational operators\u201d ( Tharp, 1969), etc."
                    },
                    "intents": []
                }
            ],
            "corpusId": 18993652,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "0f149af8e52daa2628e407831d2b955f59242850",
            "isKey": false,
            "numCitedBy": 26,
            "numCiting": 6,
            "paperAbstract": {
                "fragments": [],
                "text": "An experimental system that uses LISP to make a conceptual dictionary is described. The dictionary associates with each English word the syntactic information, definitional material, and references to the contexts in which it has been used to define other words. Such relations as class inclusion, possession, and active or passive actions are used as definitional material. The resulting structure serves as a powerful vehicle for research on the logic of question answering. Examples of methods of inputting information and answering simple English questions are given. An important conclusion is that, although LISP and other list processing languages are ideally suited for producing complex associative structures, they are inadequate vehicles for language processing on any large scale\u2014at least until they can use auxiliary memory as a continuous extension of core memory."
            },
            "slug": "Storage-and-retrieval-of-aspects-of-meaning-in-Simmons",
            "title": {
                "fragments": [],
                "text": "Storage and retrieval of aspects of meaning in directed graph structures"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "Although LISP and other list processing languages are ideally suited for producing complex associative structures, they are inadequate vehicles for language processing on any large scale\u2014at least until they can use auxiliary memory as a continuous extension of core memory."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1966
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1930474"
                        ],
                        "name": "J. Slagle",
                        "slug": "J.-Slagle",
                        "structuredName": {
                            "firstName": "James",
                            "lastName": "Slagle",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Slagle"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 12211223,
            "fieldsOfStudy": [
                "Education",
                "Computer Science"
            ],
            "id": "c8ed24d86755095c263a2f031752f817e668da3e",
            "isKey": false,
            "numCitedBy": 66,
            "numCiting": 26,
            "paperAbstract": {
                "fragments": [],
                "text": "As an investigation in artificial intelligence, computer experiments on deductive question-answering were run with a LISP program called DEDUCOM, an acronym for DEDUctive COMmunicator. When given 68 facts, DEDUCOM answered 10 questions answerable from the facts. A fact tells DEDUCOM either some specific information or a method of answering a general kind of question. Some conclusions drawn in the article are: (1) DEDUCOM can answer a wide variety of questions. (2) A human can increase the deductive power of DEDUCOM by telling it more facts. (3) DEDUCOM can write very simple programs (it is hoped that this ability is the forerunner of an ability to self-program, which is a way to learn). (4) DEDUCOM is very slow in answering questions. (5) DEDUCOM's search procedure at present has two bad defects: some questions answerable from the given facts cannot be answered and some other answerable questions can be answered only if the relevant facts are given in the \"right\" order. (6) At present, DEDUCOM's method of making logical deductions in predicate calculus has two bad defects: some facts have to be changed to logically equivalent ones before being given to DEDUCOM, and some redundant facts have to be given to DEDUCOM."
            },
            "slug": "Experiments-with-a-deductive-question-answering-Slagle",
            "title": {
                "fragments": [],
                "text": "Experiments with a deductive question-answering program"
            },
            "tldr": {
                "abstractSimilarityScore": 89,
                "text": "As an investigation in artificial intelligence, computer experiments on deductive question-answering were run with a LISP program called DEDUCOM, an acronym for DEDUctive COMmunicator, which can answer a wide variety of questions."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "52004282"
                        ],
                        "name": "A. Zwicky",
                        "slug": "A.-Zwicky",
                        "structuredName": {
                            "firstName": "Arnold",
                            "lastName": "Zwicky",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Zwicky"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2508368"
                        ],
                        "name": "J. Friedman",
                        "slug": "J.-Friedman",
                        "structuredName": {
                            "firstName": "Joyce",
                            "lastName": "Friedman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Friedman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "50074768"
                        ],
                        "name": "B. Hall",
                        "slug": "B.-Hall",
                        "structuredName": {
                            "firstName": "Barbara",
                            "lastName": "Hall",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Hall"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34780795"
                        ],
                        "name": "D. Walker",
                        "slug": "D.-Walker",
                        "structuredName": {
                            "firstName": "Donald",
                            "lastName": "Walker",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Walker"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 31584423,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "27e16f13ce627631900f6354ab04a71c07219326",
            "isKey": false,
            "numCitedBy": 48,
            "numCiting": 8,
            "paperAbstract": {
                "fragments": [],
                "text": "A solution to the analysis problem for a class of grammars appropriate to the description of natural languages is essential to any system which involves the automatic processing of natural language inputs for purposes of man-machine communication, translation, information retrieval, or data processing. The analysis procedure for transformational grammars described in this paper was developed to explore the feasibility of using ordinary English as a computer control language."
            },
            "slug": "The-mitre-syntactic-analysis-procedure-for-grammars-Zwicky-Friedman",
            "title": {
                "fragments": [],
                "text": "The mitre syntactic analysis procedure for transformational grammars"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "The analysis procedure for transformational grammars described in this paper was developed to explore the feasibility of using ordinary English as a computer control language."
            },
            "venue": {
                "fragments": [],
                "text": "AFIPS '65 (Fall, part I)"
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2215426"
                        ],
                        "name": "J. Weizenbaum",
                        "slug": "J.-Weizenbaum",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Weizenbaum",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Weizenbaum"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 17,
                                "start": 0
                            }
                        ],
                        "text": "Weizenbaum (1967) used the ELIZA system as a basis for limited logic programs and used them as a framework for discussing the relevance of context."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 9209948,
            "fieldsOfStudy": [
                "Psychology"
            ],
            "id": "0b4cdfb63efcdb676f7c649e7422c111c3e37932",
            "isKey": false,
            "numCitedBy": 112,
            "numCiting": 5,
            "paperAbstract": {
                "fragments": [],
                "text": "A further development of a computer program (ELIZA) capable of conversing in natural language is discussed. The importance of context to both human and machine understanding is stressed. It is argued that the adequacy of the level of understanding achieved in a particular conversation depends on the purpose of that conversation, and that absolute understanding on the part of either humans or machines is impossible.\n0"
            },
            "slug": "Contextual-understanding-by-computers-Weizenbaum",
            "title": {
                "fragments": [],
                "text": "Contextual understanding by computers"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "It is argued that the adequacy of the level of understanding achieved in a particular conversation depends on the purpose of that conversation, and that absolute understanding on the part of either humans or machines is impossible."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1967
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "35226330"
                        ],
                        "name": "B. Green",
                        "slug": "B.-Green",
                        "structuredName": {
                            "firstName": "Bert",
                            "lastName": "Green",
                            "middleNames": [
                                "F."
                            ],
                            "suffix": "Jr."
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Green"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "32223729"
                        ],
                        "name": "A. K. Wolf",
                        "slug": "A.-K.-Wolf",
                        "structuredName": {
                            "firstName": "Alice",
                            "lastName": "Wolf",
                            "middleNames": [
                                "K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. K. Wolf"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "6370361"
                        ],
                        "name": "C. Chomsky",
                        "slug": "C.-Chomsky",
                        "structuredName": {
                            "firstName": "Carol",
                            "lastName": "Chomsky",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Chomsky"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "94536391"
                        ],
                        "name": "Kenneth Laughery",
                        "slug": "Kenneth-Laughery",
                        "structuredName": {
                            "firstName": "Kenneth",
                            "lastName": "Laughery",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Kenneth Laughery"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 27,
                                "start": 19
                            }
                        ],
                        "text": "Some examples are: BASEBALL (Green et al., 1963), which stored tables of baseball results and interpreted questions as \u201cspecification lists\u201d requesting data from those tables; SAD SAM (Lindsay, 1963), which interpreted sentences as simple relationship facts about people, and stored these in a network structure; STUDENT (Bobrow, 1968),\nUNDERSTANDING NATURAL LANGUAGE 35\nwhich interpreted sentences as linear equations and could store other linear equations and manipulate them to solve algebra problems; and ELIZA ( Weizenbaum, 1966)) whose internal knowledge is a set of sentence rearrangements and key words, and which sees input as a simple string of words."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 47,
                                "start": 29
                            }
                        ],
                        "text": "Some examples are: BASEBALL (Green et al., 1963), which stored tables of baseball results and interpreted questions as \u201cspecification lists\u201d requesting data from those tables; SAD SAM (Lindsay, 1963), which interpreted sentences as simple relationship facts about people, and stored these in a\u2026"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 5867164,
            "fieldsOfStudy": [
                "Computer Science",
                "Education"
            ],
            "id": "89d025804988944d6fa4e95f49bff011b33d1418",
            "isKey": false,
            "numCitedBy": 452,
            "numCiting": 3,
            "paperAbstract": {
                "fragments": [],
                "text": "<u>Baseball</u> is a computer program that answers questions phrased in ordinary English about stored data. The program reads the question from punched cards. After the words and idioms are looked up in a dictionary, the phrase structure and other syntactic facts are determined for a content analysis, which lists attribute-value pairs specifying the information given and the information requested. The requested information is then extracted from the data matching the specifications, and any necessary processing is done. Finally, the answer is printed. The program's present context is baseball games; it answers such questions as \"Where did each team play on July 7?\""
            },
            "slug": "Baseball:-an-automatic-question-answerer-Green-Wolf",
            "title": {
                "fragments": [],
                "text": "Baseball: an automatic question-answerer"
            },
            "venue": {
                "fragments": [],
                "text": "IRE-AIEE-ACM '61 (Western)"
            },
            "year": 1961
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3299116"
                        ],
                        "name": "F. B. Thompson",
                        "slug": "F.-B.-Thompson",
                        "structuredName": {
                            "firstName": "Frederick",
                            "lastName": "Thompson",
                            "middleNames": [
                                "B."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "F. B. Thompson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 33,
                                "start": 19
                            }
                        ],
                        "text": "The DEACON system (Thompson, 1968), had special \u201cverb tables\u201d to handle time questions, and a bottom-up analysis method which allowed questions to be nested."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 16173809,
            "fieldsOfStudy": [
                "Linguistics"
            ],
            "id": "548ec2852d5d5240f18e91abd723db2e83e2f7d7",
            "isKey": false,
            "numCitedBy": 117,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "What about English as a programming language? Few would question that this is a desirable goal. On the other hand, I dare say every one of us has rather deep reservations both about its feasibility and about a number of problems that it entails. This paper presents a point of view which gives some clarity to the relationship between English and programming languages. This point of view has found substance in an experimental system called DEACON. The second paper in this session will describe the specific DEACON system and its capabilities."
            },
            "slug": "English-for-the-computer-Thompson",
            "title": {
                "fragments": [],
                "text": "English for the computer"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "This paper presents a point of view which gives some clarity to the relationship between English and programming languages and has found substance in an experimental system called DEACON."
            },
            "venue": {
                "fragments": [],
                "text": "AFIPS '66 (Fall)"
            },
            "year": 1966
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145433144"
                        ],
                        "name": "Charles Kellogg",
                        "slug": "Charles-Kellogg",
                        "structuredName": {
                            "firstName": "Charles",
                            "lastName": "Kellogg",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Charles Kellogg"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 23,
                                "start": 10
                            }
                        ],
                        "text": "CONVERSE (Kellogg, 1968) converted questions into a \u201cquery language\u201d which allowed the form of the question to be more complex but used simple table"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 17112185,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "eb233638ad0b99e3c66c636bef814ae94131ab5f",
            "isKey": false,
            "numCitedBy": 32,
            "numCiting": 12,
            "paperAbstract": {
                "fragments": [],
                "text": "During the past few years there has been a rapid advance in the technology of time-sharing systems and software to permit quick access to large files of structured data. This has led to a growing interest in communicating with computer files directly in a natural language such as English. The natural language systems described in the literature are largely small-scale research vehicles dealing with small data bases of restricted subject scope. Giuliano (1965), among others, has questioned the generalization of these systems to wider universes of discourse. Developments in this area have been reviewed by Simmons (1966), and by Bobrow, Fraser and Quillan (1967). In contrast, the work in on-line data management has been more concerned with the efficient organization of structured data to allow for quick access and maintenance of large volumes of formatted information [see the reviews by Kellogg (1967), Climenson (1966), and Minker and Sable (1967)]."
            },
            "slug": "A-natural-language-compiler-for-on-line-data-Kellogg",
            "title": {
                "fragments": [],
                "text": "A natural language compiler for on-line data management"
            },
            "tldr": {
                "abstractSimilarityScore": 79,
                "text": "During the past few years there has been a rapid advance in the technology of time-sharing systems and software to permit quick access to large files of structured data to allow for quick access and maintenance of large volumes of formatted information."
            },
            "venue": {
                "fragments": [],
                "text": "AFIPS '68 (Fall, part I)"
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34661920"
                        ],
                        "name": "C. Hewitt",
                        "slug": "C.-Hewitt",
                        "structuredName": {
                            "firstName": "Carl",
                            "lastName": "Hewitt",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Hewitt"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 24,
                                "start": 17
                            }
                        ],
                        "text": "languages are to PLANNER, and whether there is any advantage to be gained by putting them in a hybrid with a resolution-based system."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 7,
                                "start": 0
                            }
                        ],
                        "text": "PLANNER can operate in this \u201cblindman\u201d mode, but it should have to do this only rarely-when discovering something that was not known or understood when the basic theorems were written."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 114,
                                "start": 107
                            }
                        ],
                        "text": "In later sections, we will show how these are combined to form more complicated logical expressions, using PLANNER."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 150,
                                "start": 143
                            }
                        ],
                        "text": "This section describes the basis for representing meaning, while Section 1.6 shows how more complex information can be represented and used by PLANNER."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 7,
                                "start": 0
                            }
                        ],
                        "text": "PLANNER is the deductive system used by the program at all stages of the analysis, both to direct the parsing process and to deduce facts about the BLOCKS world."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 110,
                                "start": 103
                            }
                        ],
                        "text": "The system uses Micro-Planner, ( SUSSman et al., 1970) an abbreviated version of Carl Hewitt\u2019s original PLANNER language (Hewitt, 1971)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 7,
                                "start": 0
                            }
                        ],
                        "text": "PLANNER is a language for representing problem-solving procedures, which is more general than a specific problem-solving system, such as the General Problem Solver (Newell and Simon, 1963)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 33,
                                "start": 26
                            }
                        ],
                        "text": "BLOCKS is a collection of PLANNER theorems which contain the system\u2019s knowledge about the properties of the particular physical world it deals with."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 21,
                                "start": 9
                            }
                        ],
                        "text": "PLANNER (Hewitt, 1969,U371) is a goal-oriented procedural language designed to deal with these problems."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 82,
                                "start": 75
                            }
                        ],
                        "text": "They look at both the structures and the meanings of the words to build up PLANNER expressions which will be used in answering questions and making deductions."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 83,
                                "start": 76
                            }
                        ],
                        "text": "The DATA component consists of facts about the current scene in the form of PLANNER assertions describing the objects, their sizes, shapes, colors, and locations."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 112,
                                "start": 105
                            }
                        ],
                        "text": "Notice that this control structure makes it very difficult to specify the abstract logical properties of PLANNER, such as consistency and completeness."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 43,
                                "start": 36
                            }
                        ],
                        "text": "It illustrates the operation of the PLANNER programs which represent the system\u2019s knowledge of actions."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 130,
                                "start": 123
                            }
                        ],
                        "text": "He uses a notation (Woods, 1969, p. 17) which looks very much like a LISPembedded computer language, such as PROGRAMMAR or PLANNER."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 70,
                                "start": 63
                            }
                        ],
                        "text": "In fact, the networks could be translated almost directly into PLANNER programs (PLANNER rather than LISP or PROGRAMMAR because of the automatic backup features-see the discussion in Section 6)."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 88,
                                "start": 81
                            }
                        ],
                        "text": "AY\u201d\u201c\u201c\u2018-----_ /\u2018~~\u2018ilNTlCSq+--,NSWy\nDICTIONARY PROGRAMMAR SEMANTIC\n\\ik\nMOVER FEATURES\n4 PLANNER DATA\nFIG."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 78,
                                "start": 71
                            }
                        ],
                        "text": "This could be done in the program approach by using a language such as PLANNER with its automatic backup mechanisms."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 117,
                                "start": 110
                            }
                        ],
                        "text": "If we know that a particular proof will fail unless one of a specified set of theorems succeeds, we can write PLANNER procedures in such a way that only theorems from that set will be used in attempting a proof."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 15,
                                "start": 8
                            }
                        ],
                        "text": "In fact PLANNER is a uniform notation for expressing procedural knowledge just as predicate calculus is a notation for a more limited range of information."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 48,
                                "start": 41
                            }
                        ],
                        "text": "Since no published basic introduction to PLANNER is available, we present a description of its operation and formalism."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 218,
                                "start": 211
                            }
                        ],
                        "text": "When running compiled, the system is fast enough to carry on a real-\nInterpreters\n26.1\nKnowledge of English\n22.5\nKnowledge of Subject\n16.5\nData for Scene\n2.5\nTotal 67.6\nParser\nPROGRAMMAR\nSemantics Deduction Other\nPLANNER\n5.8\nGRAMMAR 7.3\n5.5\nSEMANTICS 15.2\nDICTIONARY DICTIONARY BLOCKS 1.7 6.0 8.8\n14.8 21.2 15.6 16.0\nAssertions Display 1.3 1.2\nLISP and\nDisplay 14.8\nStorage Allocation for Language Understanding Program in Thousands of PDP-10 words\nNote: Approximately 12 thousand additional words of free storage are necessary for a dialog like the one described in Section 1.3."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 42,
                                "start": 35
                            }
                        ],
                        "text": "Section 6 describes our use of the PLANNER language (Hewitt, 1971) in representing and manipulating complex meanings."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 26,
                                "start": 19
                            }
                        ],
                        "text": "In our system, the PLANNER language is used as a basis for problem solving, and meaning is represented in PLANNER expressions."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 37,
                                "start": 30
                            }
                        ],
                        "text": "These semantics programs call PLANNER to make use of deduction in interpreting sentences."
                    },
                    "intents": []
                }
            ],
            "corpusId": 15590266,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "1129419611d8538661cf47f94e3ae300b2889773",
            "isKey": true,
            "numCitedBy": 218,
            "numCiting": 8,
            "paperAbstract": {
                "fragments": [],
                "text": "PLANNER is a language for proving theorems and manipulating models in a robot. The language is built out of a number of problem solving primitives together with a hierarchical control structure. Statements can be asserted and perhaps later withdrawn as the state of the world changes. Conclusions can be drawn from these various changes in state. Goals can be established and dismissed when they are satisfied. The deductive system of PLANNER is subordinate to the hierarchical control structure in order to make the language efficient. The use of a general purpose matching language makes the deductive system more powerful."
            },
            "slug": "PLANNER:-A-Language-for-Proving-Theorems-in-Robots-Hewitt",
            "title": {
                "fragments": [],
                "text": "PLANNER: A Language for Proving Theorems in Robots"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "The deductive system of PLANNER is subordinate to the hierarchical control structure in order to make the language efficient and the use of a general purpose matching language makes the deductives system more powerful."
            },
            "venue": {
                "fragments": [],
                "text": "IJCAI"
            },
            "year": 1969
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1753394"
                        ],
                        "name": "D. Bobrow",
                        "slug": "D.-Bobrow",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Bobrow",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Bobrow"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145726521"
                        ],
                        "name": "J. B. Fraser",
                        "slug": "J.-B.-Fraser",
                        "structuredName": {
                            "firstName": "J.",
                            "lastName": "Fraser",
                            "middleNames": [
                                "Bruce"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. B. Fraser"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 952810,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "c718246790a35cd01c09859be9f36d31aa8df37b",
            "isKey": false,
            "numCitedBy": 72,
            "numCiting": 6,
            "paperAbstract": {
                "fragments": [],
                "text": "A syntactic analysis procedure is described which obtains directly the deep structure information associated with an input sentence. The implementation utilizes a state transition network characterizing those linguistic facts representable in a context free form, and a number of techniques to code and derive additional logic information and to permit the compression of the network size, thereby allowing more efficient operation of the system. By recognizing identical constituent predictions stemming from two different analysis paths, the system determines the structure of this constituent only once. When two alternative paths through the state transition network converge to a single state at some point In the analysis, subsequent analyses are carried out only once despite the earlier ambiguity. Use of flags to carry feature concordance and previous context information allows merging of a number of almost identical paths through the network."
            },
            "slug": "An-Augmented-State-Transition-Network-Analysis-Bobrow-Fraser",
            "title": {
                "fragments": [],
                "text": "An Augmented State Transition Network Analysis Procedure"
            },
            "tldr": {
                "abstractSimilarityScore": 95,
                "text": "A syntactic analysis procedure is described which obtains directly the deep structure information associated with an input sentence and utilizes a state transition network characterizing those linguistic facts representable in a context free form and a number of techniques to code and derive additional logic information and to permit the compression of the network size."
            },
            "venue": {
                "fragments": [],
                "text": "IJCAI"
            },
            "year": 1969
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34661920"
                        ],
                        "name": "C. Hewitt",
                        "slug": "C.-Hewitt",
                        "structuredName": {
                            "firstName": "Carl",
                            "lastName": "Hewitt",
                            "middleNames": [
                                "E."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Hewitt"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 65,
                                "start": 53
                            }
                        ],
                        "text": "Section 6 describes our use of the PLANNER language (Hewitt, 1971) in representing and manipulating complex meanings."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 133,
                                "start": 121
                            }
                        ],
                        "text": "The system uses Micro-Planner, ( SUSSman et al., 1970) an abbreviated version of Carl Hewitt\u2019s original PLANNER language (Hewitt, 1971)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 54119077,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "27b161b45bca2d7a4b9d20e0127ac18a787fd4b8",
            "isKey": false,
            "numCitedBy": 347,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : PLANNER is a formalism for proving theorems and manipulating models in a robot. The formalism is built out of a number of problem-solving primitives together with a hierarchical multiprocess backtrack control structure. Statements can be asserted and perhaps later withdrawn as the state of the world changes. Under BACKTRACK control structure, the hierarchy of activations of functions previously executed is maintained so that it is possible to revert to any previous state. Thus programs can easily manipulate elaborate hypothetical tentative states. In addition PLANNER uses multiprocessing so that there can be multiple loci of control over the problem-solving."
            },
            "slug": "Description-and-Theoretical-Analysis-(Using-of-A-in-Hewitt",
            "title": {
                "fragments": [],
                "text": "Description and Theoretical Analysis (Using Schemata) of Planner: A Language for Proving Theorems and Manipulating Models in a Robot"
            },
            "tldr": {
                "abstractSimilarityScore": 86,
                "text": "PANNER is a formalism for proving theorems and manipulating models in a robot built out of a number of problem-solving primitives together with a hierarchical multiprocess backtrack control structure."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1972
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2149809042"
                        ],
                        "name": "C. Green",
                        "slug": "C.-Green",
                        "structuredName": {
                            "firstName": "C.",
                            "lastName": "Green",
                            "middleNames": [
                                "Cordell"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Green"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "28791020"
                        ],
                        "name": "B. Raphael",
                        "slug": "B.-Raphael",
                        "structuredName": {
                            "firstName": "Bertram",
                            "lastName": "Raphael",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Raphael"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 340705,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "dd15a1958d5a7bfa45548eb101bef4186acf2299",
            "isKey": false,
            "numCitedBy": 112,
            "numCiting": 30,
            "paperAbstract": {
                "fragments": [],
                "text": "For the purpose of this paper, a question-answering system is a computer program that has at least the following three characteristics: (1) The ability to accept statements of fact and store them in its memory (2) The ability to search stored information efficiently and to recognize items that are relevant to a particular query (3) The ability to respond appropriately to a question by identifying and presenting the answer if it is present in memory, and by deducing a reasonable logical response from relevant knowledge if the complete answer is not explictly available."
            },
            "slug": "The-use-of-theorem-proving-techniques-in-systems-Green-Raphael",
            "title": {
                "fragments": [],
                "text": "The use of theorem-proving techniques in question-answering systems"
            },
            "tldr": {
                "abstractSimilarityScore": 45,
                "text": "A question-answering system that can respond appropriately to a question by identifying and presenting the answer if it is present in memory, and by deducing a reasonable logical response from relevant knowledge if the complete answer is not explictly available."
            },
            "venue": {
                "fragments": [],
                "text": "ACM National Conference"
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143739156"
                        ],
                        "name": "S. Shapiro",
                        "slug": "S.-Shapiro",
                        "structuredName": {
                            "firstName": "Stuart",
                            "lastName": "Shapiro",
                            "middleNames": [
                                "C."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Shapiro"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "16823512"
                        ],
                        "name": "G. H. Woodmansee",
                        "slug": "G.-H.-Woodmansee",
                        "structuredName": {
                            "firstName": "George",
                            "lastName": "Woodmansee",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. H. Woodmansee"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 46540731,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "4fc9602180318a3e61444f6a903f1b89eccaed1b",
            "isKey": false,
            "numCitedBy": 20,
            "numCiting": 16,
            "paperAbstract": {
                "fragments": [],
                "text": "A question answering system is described which uses a net structure for storage of infor\u00ad mation. The net structure consists of nodes and labelled edges, which represent relations be\u00ad tween the nodes. The labels are also nodes, and therefore definitions of relations may be stored in the net. It is demonstrated that the generality and complexity of this memory struc\u00ad ture allows a surprisingly powerful question an\u00ad swering system to be constructed using comparit ively simple executive routines. Output from the question answerer, which is currently run\u00ad ning on an interactive, time sharing system, is included, showing its range of applicabi l i ty i n \u00ad cluding question answering, inductive and de\u00ad ductive inference, simple theorem proving and problem solving."
            },
            "slug": "A-Net-Structure-Based-Relational-Question-Answerer:-Shapiro-Woodmansee",
            "title": {
                "fragments": [],
                "text": "A Net Structure Based Relational Question Answerer: Description and Examples"
            },
            "tldr": {
                "abstractSimilarityScore": 39,
                "text": "It is demonstrated that the generality and complexity of this memory structure allows a surprisingly powerful question answering system to be constructed using comparit ively simple executive routines."
            },
            "venue": {
                "fragments": [],
                "text": "IJCAI"
            },
            "year": 1969
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144872409"
                        ],
                        "name": "M. Halliday",
                        "slug": "M.-Halliday",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Halliday",
                            "middleNames": [
                                "A.K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Halliday"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 74,
                                "start": 52
                            }
                        ],
                        "text": "It presents Systemic Grammar, a theory developed by Halliday ( 1967, 1970), which emphasizes the limited and highly structured sets of choices made in producing a syntactic structure, abstracting the features that are important for conveying meaning."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 222400584,
            "fieldsOfStudy": [
                "Linguistics"
            ],
            "id": "5daf9da6169b958020bac22ec8a6d19ca4117add",
            "isKey": false,
            "numCitedBy": 1870,
            "numCiting": 13,
            "paperAbstract": {
                "fragments": [],
                "text": "It is planned to publish this paper in three parts, in this and the two subsequent issues of the Journal of Linguistics. The three parts will consist respectively of the numbered sections 1\u20133, 4\u20137 and 8\u201310; references to section 4 onwards are thus to forthcoming parts of the paper. Sections 1\u20133 contain observations concerning transitivity; 4\u20137 deal with what is here referred to as \u2018theme\u2019, a general term for all those choices involving the distribution of information in the clause; in 8\u201310, transitivity is reconsidered in the light of certain further problems and of what has been said about theme, and some generalization is attempted."
            },
            "slug": "NOTES-ON-TRANSITIVITY-AND-THEME-IN-ENGLISH.-PART-2-Halliday",
            "title": {
                "fragments": [],
                "text": "NOTES ON TRANSITIVITY AND THEME IN ENGLISH. PART 2"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1967
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1699245"
                        ],
                        "name": "T. Winograd",
                        "slug": "T.-Winograd",
                        "structuredName": {
                            "firstName": "Terry",
                            "lastName": "Winograd",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Winograd"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 62661575,
            "fieldsOfStudy": [
                "Linguistics"
            ],
            "id": "baab11252d9bd061e0b3ed47116d56d9c4cfc935",
            "isKey": false,
            "numCitedBy": 181,
            "numCiting": 2,
            "paperAbstract": {
                "fragments": [],
                "text": "I. 1 Linguistics and Music Theory. Fifteen years ago, linguistics was the private preserve of a small number of anthropologists and philosophers, along with an occasional language teacher or intrepid psychologist. Today it has become a home for a large number not only of specialized \"linguists\", but also of mathematicians, engineers, and the loosely defined group in the \"computer sciences\". This migration has resulted both in new insight into language and the application of this insight to a variety of phenomena."
            },
            "slug": "Linguistics-and-the-computer-analysis-of-tonal-Winograd",
            "title": {
                "fragments": [],
                "text": "Linguistics and the computer analysis of tonal harmony"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "This migration of mathematicians, engineers, and the loosely defined group in the \"computer sciences\" to linguistics has resulted both in new insight into language and the application of this insight to a variety of phenomena."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145282631"
                        ],
                        "name": "J. A. Robinson",
                        "slug": "J.-A.-Robinson",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "Robinson",
                            "middleNames": [
                                "Alan"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. A. Robinson"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 203,
                                "start": 189
                            }
                        ],
                        "text": "\u2026than the full predicate calculus (Bar-Hillel, 1964; Coles, 1968; Darlington, 1964), but the big boost to theorem proving research was the development of the Robinson resolution algorithm (Robinson, 1965)) a very simple \u201ccomplete uniform proof procedure\u201d for the first-order predicate calculus."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 14389185,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "d2109eba4f160755f0b9a7497b6b691c2fa2d5d8",
            "isKey": false,
            "numCitedBy": 4367,
            "numCiting": 12,
            "paperAbstract": {
                "fragments": [],
                "text": ":tb.~tract. Theorem-proving on the computer, using procedures based on the fund~mental theorem of Herbrand concerning the first-order predicate etdeulus, is examined with ~ view towards improving the efticieney and widening the range of practical applicability of these procedures. A elose analysis of the process of substitution (of terms for variables), and the process of t ruth-funct ional analysis of the results of such substitutions, reveals that both processes can be combined into a single new process (called resolution), i terating which is vastty more ef[ieient than the older cyclic procedures consisting of substitution stages alternating with truth-functional analysis stages. The theory of the resolution process is presented in the form of a system of first<~rder logic with .just one inference principle (the resolution principle). The completeness of the system is proved; the simplest proof-procedure based oil the system is then the direct implementation of the proof of completeness. Howew~r, this procedure is quite inefficient, ~nd the paper concludes with a discussion of several principles (called search principles) which are applicable to the design of efficient proof-procedures employing resolution as the basle logical process."
            },
            "slug": "A-Machine-Oriented-Logic-Based-on-the-Resolution-Robinson",
            "title": {
                "fragments": [],
                "text": "A Machine-Oriented Logic Based on the Resolution Principle"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "The paper concludes with a discussion of several principles which are applicable to the design of efficient proof-procedures employing resolution as the basle logical process."
            },
            "venue": {
                "fragments": [],
                "text": "JACM"
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2149809042"
                        ],
                        "name": "C. Green",
                        "slug": "C.-Green",
                        "structuredName": {
                            "firstName": "C.",
                            "lastName": "Green",
                            "middleNames": [
                                "Cordell"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Green"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 136,
                                "start": 119
                            }
                        ],
                        "text": "UNDERSTANDING NATURAL LANGUAGE 39\nThe \u201cuniform procedure\u201d approach was adopted by a number of systems (see discussion in Green, 1968, 1969) as an alternative to the kind of specialized limited logic discussed in the previous section."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 122,
                                "start": 111
                            }
                        ],
                        "text": "It is possible to write theorems in clever ways to implicitly guide the deduction process, and a recent paper (Green, 1969) describes some of the problems and techniques for \u201cprogramming\u201d in first-order logic."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 162,
                                "start": 151
                            }
                        ],
                        "text": "To radically change the strategy, the user presently has to know the LISP language and musf be able to modify certain strategy sections of t& program\u201d (Green, 1969, p. 236)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 5926863,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "1beae9ef432a57bb5ec0c43944a07182814ab443",
            "isKey": true,
            "numCitedBy": 657,
            "numCiting": 50,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Application-of-Theorem-Proving-to-Problem-Solving-Green",
            "title": {
                "fragments": [],
                "text": "Application of Theorem Proving to Problem Solving"
            },
            "venue": {
                "fragments": [],
                "text": "IJCAI"
            },
            "year": 1969
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "16596053"
                        ],
                        "name": "A. V. Napalkov",
                        "slug": "A.-V.-Napalkov",
                        "structuredName": {
                            "firstName": "A.",
                            "lastName": "Napalkov",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. V. Napalkov"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "69575052"
                        ],
                        "name": "Yu. V. Orfeev",
                        "slug": "Yu.-V.-Orfeev",
                        "structuredName": {
                            "firstName": "Yu.",
                            "lastName": "Orfeev",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Yu. V. Orfeev"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 60228342,
            "fieldsOfStudy": [
                "Psychology"
            ],
            "id": "0b1b6f6e63c22ac5b346e7eca30f353d2b5e47d2",
            "isKey": false,
            "numCitedBy": 66,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : A summary and review (favorable) of the book 'Computers and Thought' is followed by a general discussion of the potential value of heuristic programming. It is stated that there is almost no comparible literature in Russian, and it is recommended that the book be translated."
            },
            "slug": "COMPUTERS-AND-THOUGHT,-EDITED-BY-E.-A.-FEIGENBAUM-Napalkov-Orfeev",
            "title": {
                "fragments": [],
                "text": "COMPUTERS AND THOUGHT, EDITED BY E. A. FEIGENBAUM AND J. FELDMAN, NEW YORK, MCGRAW-HILL, 1963: BOOK REVIEW,"
            },
            "tldr": {
                "abstractSimilarityScore": 85,
                "text": "A summary and review of the book 'Computers and Thought' is followed by a general discussion of the potential value of heuristic programming."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1967
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2784211"
                        ],
                        "name": "S. Kuno",
                        "slug": "S.-Kuno",
                        "structuredName": {
                            "firstName": "Susumu",
                            "lastName": "Kuno",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kuno"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 107,
                                "start": 97
                            }
                        ],
                        "text": "The problem faced by all context-free parsers (including the mammoth Harvard Syntactic Analyzer (Kuno, 1965) ) is that they cannot handle the full complexity of natural language."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 16669681,
            "fieldsOfStudy": [
                "Engineering"
            ],
            "id": "f1a2c7757d110cc9e2b114de852f629dbaad4318",
            "isKey": false,
            "numCitedBy": 71,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "Some of the characteristic features of a predictive analyzer, a system of syntactic analysis now operational at Harvard on an IBM 7094, are delineated. The advantages and disadvantages of the system are discussed in comparison to those of an immediate constituent analyzer, developed at the RAND Corporation with Robinson's English grammar. In addition, a new technique is described for repetitive path elimination for a predictive analyzer, which can now claim efficiency both in processing time and core storage requirement."
            },
            "slug": "The-predictive-analyzer-and-a-path-elimination-Kuno",
            "title": {
                "fragments": [],
                "text": "The predictive analyzer and a path elimination technique"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "A new technique is described for repetitive path elimination for a predictive analyzer, which can now claim efficiency both in processing time and core storage requirement."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "9079926"
                        ],
                        "name": "W. Woods",
                        "slug": "W.-Woods",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Woods",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Woods"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 31,
                                "start": 20
                            }
                        ],
                        "text": "He uses a notation (Woods, 1969, p. 17) which looks very much like a LISPembedded computer language, such as PROGRAMMAR or PLANNER."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 274,
                                "start": 263
                            }
                        ],
                        "text": "Instead of using \u201crecursive transition networks\u201d these parsers use \u201caugmented transition networks\u201d, which can \u201cmake changes in the contents of a set of registers associated with the network, and whose transitions can be conditional on the contents of those registers\u201d (Woods, 1969)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 12,
                                "start": 0
                            }
                        ],
                        "text": "Woods (1969) discusses the problems of \u201ccombinatorial explosion\u201d inherent in the inverse transformational\nUNDERSTANDING NATURAL LANGUAGE 43\nprocess."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 143,
                                "start": 130
                            }
                        ],
                        "text": "The first was by Thorne, Bratley, and Dewar (Thorne, 1968 and 1969), and the more recent ones are by Bobrow and Fraser (1969) and Woods ( 1969)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 59791958,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "75b6c65a28cb49e34b170ea696be536dc9b45736",
            "isKey": true,
            "numCitedBy": 33,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Augmented-Transition-Networks-for-Natural-Language-Woods",
            "title": {
                "fragments": [],
                "text": "Augmented Transition Networks for Natural Language Analysis."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1969
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1847175"
                        ],
                        "name": "M. Minsky",
                        "slug": "M.-Minsky",
                        "structuredName": {
                            "firstName": "Marvin",
                            "lastName": "Minsky",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Minsky"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 176439650,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "f301d94fc2eadfcec25b0154f1aca76fdbe22cd9",
            "isKey": false,
            "numCitedBy": 274,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Matter,-Mind-and-Models-Minsky",
            "title": {
                "fragments": [],
                "text": "Matter, Mind and Models"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144872409"
                        ],
                        "name": "M. Halliday",
                        "slug": "M.-Halliday",
                        "structuredName": {
                            "firstName": "Michael",
                            "lastName": "Halliday",
                            "middleNames": [
                                "A.K."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "M. Halliday"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 74,
                                "start": 52
                            }
                        ],
                        "text": "It presents Systemic Grammar, a theory developed by Halliday ( 1967, 1970), which emphasizes the limited and highly structured sets of choices made in producing a syntactic structure, abstracting the features that are important for conveying meaning."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 140385671,
            "fieldsOfStudy": [
                "Linguistics"
            ],
            "id": "9bafa4a7836102c6f696c942d5576871b3eaae5a",
            "isKey": false,
            "numCitedBy": 281,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Functional-diversity-in-language-as-seen-from-a-of-Halliday",
            "title": {
                "fragments": [],
                "text": "Functional diversity in language as seen from a consideration of modality and mood in English"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1970
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "4018461"
                        ],
                        "name": "G. Sussman",
                        "slug": "G.-Sussman",
                        "structuredName": {
                            "firstName": "Gerald",
                            "lastName": "Sussman",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Sussman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1699245"
                        ],
                        "name": "T. Winograd",
                        "slug": "T.-Winograd",
                        "structuredName": {
                            "firstName": "Terry",
                            "lastName": "Winograd",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Winograd"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 53,
                                "start": 33
                            }
                        ],
                        "text": "The system uses Micro-Planner, ( SUSSman et al., 1970) an abbreviated version of Carl Hewitt\u2019s original PLANNER language (Hewitt, 1971)."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 60837564,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "98f69ffef2b1e1a9e531b5636cdda79683eaad1c",
            "isKey": false,
            "numCitedBy": 96,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Micro-Planner-Reference-Manual-Sussman-Winograd",
            "title": {
                "fragments": [],
                "text": "Micro-Planner Reference Manual"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1970
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1797808"
                        ],
                        "name": "G. Salton",
                        "slug": "G.-Salton",
                        "structuredName": {
                            "firstName": "Gerard",
                            "lastName": "Salton",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "G. Salton"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 78,
                                "start": 64
                            }
                        ],
                        "text": "For a summary of the computer parsers designed before 1966, see Bobrow ( 1967)."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "corpusId": 60417716,
            "fieldsOfStudy": [
                "Linguistics"
            ],
            "id": "c800065a4810945ad8e222cf82a365a3b2ee8245",
            "isKey": false,
            "numCitedBy": 31,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Automated-Language-Processing-Salton",
            "title": {
                "fragments": [],
                "text": "Automated Language Processing"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1753394"
                        ],
                        "name": "D. Bobrow",
                        "slug": "D.-Bobrow",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Bobrow",
                            "middleNames": [
                                "G."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Bobrow"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 56584838,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "9fc77941297522cc420ce9292193dd04ed2ed1af",
            "isKey": false,
            "numCitedBy": 326,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Natural-Language-Input-for-a-Computer-Problem-Bobrow",
            "title": {
                "fragments": [],
                "text": "Natural Language Input for a Computer Problem Solving System"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1964
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2199081"
                        ],
                        "name": "S. R. Petrick",
                        "slug": "S.-R.-Petrick",
                        "structuredName": {
                            "firstName": "Stanley",
                            "lastName": "Petrick",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. R. Petrick"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 94,
                                "start": 81
                            }
                        ],
                        "text": "In an effort to go beyond the limitations of context-free parsers, some parsers (Petrick, 1965; Zwicky, 1965) have attempted to make use of Chomsky\u2019s transformational grammar."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 53772050,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "6c4f43d484ac3fc5f277a2fe4305aebb6373970e",
            "isKey": false,
            "numCitedBy": 61,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "A-recognition-procedure-for-transformational-Petrick",
            "title": {
                "fragments": [],
                "text": "A recognition procedure for transformational grammars."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144954740"
                        ],
                        "name": "J. Earley",
                        "slug": "J.-Earley",
                        "structuredName": {
                            "firstName": "Jay",
                            "lastName": "Earley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Earley"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 60577224,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "645c0218de42eb8026b72afb470f852f2712436c",
            "isKey": false,
            "numCitedBy": 10,
            "numCiting": 4,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Generating-a-recognizer-for-a-BNF-grammar-Earley",
            "title": {
                "fragments": [],
                "text": "Generating a recognizer for a BNF grammar"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2070790245"
                        ],
                        "name": "L. Coles",
                        "slug": "L.-Coles",
                        "structuredName": {
                            "firstName": "L.",
                            "lastName": "Coles",
                            "middleNames": [
                                "Stephen"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "L. Coles"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 117,
                                "start": 106
                            }
                        ],
                        "text": "The early programs used logical systems less powerful than the full predicate calculus (Bar-Hillel, 1964; Coles, 1968; Darlington, 1964), but the big boost to theorem proving research was the development of the Robinson resolution algorithm (Robinson, 1965)) a very simple \u201ccomplete uniform proof\u2026"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 17888788,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "45cd1aebc523a03fe298e7dc2713228464bb7c13",
            "isKey": false,
            "numCitedBy": 37,
            "numCiting": 4,
            "paperAbstract": {
                "fragments": [],
                "text": "Various approaches have been employed in the design of question-answering systems with natural language input. An excellent survey of such systems can be found in Simmons.1 A more recent and critical survey of data-retrieval systems prepared by Kasher points out what he considers to be some of the major weaknesses of previous work. One of the problems cited by Kasher is the difficulty of dealing with the inherent ambiguity of natural language. In this paper we will propose a technique for dealing with syntactic ambiguity that involves the use of a restricted semantic universe of discourse. The universe of discourse is defined by means of a graphic display console. We will show by means of an example taken from the area of electrical circuits how this technique can be used to resolve syntactic ambiguity."
            },
            "slug": "An-on-line-question-answering-systems-with-natural-Coles",
            "title": {
                "fragments": [],
                "text": "An on-line question-answering systems with natural language and pictorial input"
            },
            "tldr": {
                "abstractSimilarityScore": 42,
                "text": "This paper proposes a technique for dealing with syntactic ambiguity that involves the use of a restricted semantic universe of discourse and shows by means of an example taken from the area of electrical circuits how this technique can be used to resolve syntactic ambiguous."
            },
            "venue": {
                "fragments": [],
                "text": "ACM National Conference"
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2912454"
                        ],
                        "name": "C. Fillmore",
                        "slug": "C.-Fillmore",
                        "structuredName": {
                            "firstName": "Charles",
                            "lastName": "Fillmore",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "C. Fillmore"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 61363578,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "d53cfca137c38f82361878a67ea47002e9940e34",
            "isKey": false,
            "numCitedBy": 2409,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "THE-CASE-FOR-CASE.-Fillmore",
            "title": {
                "fragments": [],
                "text": "THE CASE FOR CASE."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1967
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "program for the syntactic analysis of English sentences, Communic&ons of the Association for Computing Machinery"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1969
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 104,
                                "start": 88
                            }
                        ],
                        "text": "The early programs used logical systems less powerful than the full predicate calculus (Bar-Hillel, 1964; Coles, 1968; Darlington, 1964), but the big boost to theorem proving research was the development of the Robinson resolution algorithm (Robinson, 1965)) a very simple \u201ccomplete uniform proof\u2026"
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Language and infornration"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1964
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The English verbal group: A specimen of a manual of analysis"
            },
            "venue": {
                "fragments": [],
                "text": "Nuflield Programme in Linguistics and English Teaching,"
            },
            "year": 1966
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 318,
                                "start": 311
                            }
                        ],
                        "text": "Some examples are: BASEBALL (Green et al., 1963), which stored tables of baseball results and interpreted questions as \u201cspecification lists\u201d requesting data from those tables; SAD SAM (Lindsay, 1963), which interpreted sentences as simple relationship facts about people, and stored these in a network structure; STUDENT (Bobrow, 1968),\nUNDERSTANDING NATURAL LANGUAGE 35\nwhich interpreted sentences as linear equations and could store other linear equations and manipulate them to solve algebra problems; and ELIZA ( Weizenbaum, 1966)) whose internal knowledge is a set of sentence rearrangements and key words, and which sees input as a simple string of words."
                    },
                    "intents": []
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 157,
                                "start": 145
                            }
                        ],
                        "text": "\u2026SAD SAM (Lindsay, 1963), which interpreted sentences as simple relationship facts about people, and stored these in a network structure; STUDENT (Bobrow, 1968),\nUNDERSTANDING NATURAL LANGUAGE 35\nwhich interpreted sentences as linear equations and could store other linear equations and\u2026"
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 37,
                                "start": 25
                            }
                        ],
                        "text": "Systems such as STUDENT (Bobrow, 1968)) SIR (Raphael, 1968), ELIZA ( Weizenbaum, 1966), and Semantic Memory (Quillian, 1968) made no attempt to do a complete syntactic analysis of the inputs."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Syntactic theory in computer implementations"
            },
            "venue": {
                "fragments": [],
                "text": "M.I.T.,"
            },
            "year": 1968
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Interim LISP progress report"
            },
            "venue": {
                "fragments": [],
                "text": "AI Memo 190, Artificial Intelligence Laboratory, M.I.T.,"
            },
            "year": 1970
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "The teachable language comprehender"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1969
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A syntactic analyzer study-final report Bunker-Ram0 Corporation, Rome Air Development"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1965
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 15,
            "methodology": 12
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 46,
        "totalPages": 5
    },
    "page_url": "https://www.semanticscholar.org/paper/Understanding-natural-language-Winograd/bb20f121c979b535bbeade5ac06676d627d4ad7d?sort=total-citations"
}