{
    "links": [
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "144954740"
                        ],
                        "name": "J. Earley",
                        "slug": "J.-Earley",
                        "structuredName": {
                            "firstName": "Jay",
                            "lastName": "Earley",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Earley"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 57,
                                "start": 54
                            }
                        ],
                        "text": "The correctness of this recognizer has been proved in [1]."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 6,
                                "start": 3
                            }
                        ],
                        "text": "In [1] a precise description of this process is given."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 6,
                                "start": 3
                            }
                        ],
                        "text": "In [1] we show tha t the t ime is n 2 for an even larger class of grammars, and thereby also obtain Younger 's n ~ results for linear and metalinear grammars [6]."
                    },
                    "intents": []
                }
            ],
            "corpusId": 47032707,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e9b1c93223ea7f7c8a835bd588a39d4aae45a5fe",
            "isKey": false,
            "numCitedBy": 674,
            "numCiting": 20,
            "paperAbstract": {
                "fragments": [],
                "text": "A parsing algorithm which seems to be the most efficient general context-free algorithm known is described. It is similar to both Knuth's LR(<italic>k</italic>) algorithm and the familiar top-down algorithm. It has a time bound proportional to <italic>n</italic><supscrpt>3</supscrpt> (where <italic>n</italic> is the length of the string being parsed) in general; it has an <italic>n</italic><supscrpt>2</supscrpt> bound for unambiguous grammars; and it runs in linear time on a large class of grammars, which seems to include most practical context-free programming language grammars. In an empirical comparison it appears to be superior to the top-down and bottom-up algorithms studied by Griffiths and Petrick."
            },
            "slug": "An-efficient-context-free-parsing-algorithm-Earley",
            "title": {
                "fragments": [],
                "text": "An efficient context-free parsing algorithm"
            },
            "tldr": {
                "abstractSimilarityScore": 72,
                "text": "A parsing algorithm which seems to be the most efficient general context-free algorithm known is described and appears to be superior to the top-down and bottom-up algorithms studied by Griffiths and Petrick."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1970
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145002066"
                        ],
                        "name": "D. Younger",
                        "slug": "D.-Younger",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Younger",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Younger"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [],
            "corpusId": 40504606,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "30da8ecce8b3ebc3e9344a79e5c2f8dc4c423bd2",
            "isKey": false,
            "numCitedBy": 1035,
            "numCiting": 12,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "Recognition-and-Parsing-of-Context-Free-Languages-Younger",
            "title": {
                "fragments": [],
                "text": "Recognition and Parsing of Context-Free Languages in Time n^3"
            },
            "venue": {
                "fragments": [],
                "text": "Inf. Control."
            },
            "year": 1967
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "20659338"
                        ],
                        "name": "Timothy V. Griffiths",
                        "slug": "Timothy-V.-Griffiths",
                        "structuredName": {
                            "firstName": "Timothy",
                            "lastName": "Griffiths",
                            "middleNames": [
                                "V."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Timothy V. Griffiths"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2199081"
                        ],
                        "name": "S. R. Petrick",
                        "slug": "S.-R.-Petrick",
                        "structuredName": {
                            "firstName": "Stanley",
                            "lastName": "Petrick",
                            "middleNames": [
                                "R."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. R. Petrick"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 5605652,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "bab47de679230a7a5d075ff71465e91791992fab",
            "isKey": false,
            "numCitedBy": 86,
            "numCiting": 40,
            "paperAbstract": {
                "fragments": [],
                "text": "A number of diverse recognition procedures that have been proposed for parsing sentences with respect to a context-free grammar are described in this paper by means of a common device. Each procedure is defined by giving an algorithm for obtaining a nondeterministic Turing Machine recognizer that is equivalent to a given context-free grammar. The formalization of the Turing Machine has been chosen to make possible particularly simple descriptions of the parsing procedures considered. The class of grammars called context-free (CF) by Chomsky [1] has been utilized in various linguistic theories, both as the sole component and as just one of several components of a natural language grammar. In addition, OF grammars have come 1o play a dominant role in the specification and translation of programming languages. It has been found that CI i' grammars are at least to some extent adequate for specifying the syntax of programming languages and that the structural descriptions assigned by these grammars are of practical utility in producing compilers. The first application of CF grammars to computer programming seems to have been made by Baekus [2] in officially defining the syntax of the ALGOr, language. Except for notation, so-called \"Backus Normal Ii'orm\" is identical to a CF grammar specification. It is not our purpose here to discuss the appropriateness of the CF grammar for specific applieations. Indeed, the authors' basic disagreement here makes a joint statement impossible. Instead we assume the utility of the CF grammar for some applications and confine ourselves to investigating the effieieneies of different recognition procedures for this class of grammars. A C,F grammar is represented by a quadruple (I, T, S, P) where I U .7' is an alphabet and P contains rules for rewriting symbols from [ as strings of symbols from I U T. These rules have the form: A ~Bi..-B~, (n => 1) where the symbol A is rewritten as the string B1 \"\" B,~. The string D1 ... Dq is derivable from the string CC1 ... Cv if D~-. \u2022 /Z~ can be obtained from C1-. \u2022 Cp by a finite sequence of applications of rules from P. The sets I and T are such that I= {C:C~D~...DqC P} and INT =~. The men'~bers of T are called terminals, the members of I, nonterminals. There is a designated symbol S C I, and terminal strings derivable from S are called sentences of the grammar. We define \u2026"
            },
            "slug": "On-the-relative-efficiencies-of-context-free-Griffiths-Petrick",
            "title": {
                "fragments": [],
                "text": "On the relative efficiencies of context-free grammar"
            },
            "tldr": {
                "abstractSimilarityScore": 70,
                "text": "This paper describes a number of diverse recognition procedures that have been proposed for parsing sentences with respect to a context-free grammar and investigates the effieieneies of different recognition procedures for this class of grammars."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2612754"
                        ],
                        "name": "T. Kasami",
                        "slug": "T.-Kasami",
                        "structuredName": {
                            "firstName": "Tadao",
                            "lastName": "Kasami",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Kasami"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 61491815,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "af66165c454a0e94afbab36271fe3deaae0b421a",
            "isKey": false,
            "numCitedBy": 608,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : An efficient algorithm of recognition and syntaxanalysis for the full class of context-free languages without the difficulty of exponential growth of computing time with the length n of input sequence is presented. This algorithm makes use of the essential property of a context-free language as a multi-parenthesis system. It is shown in this paper that a context-free language is n cubed-recognizable in the sense of Hartmanis and Stearns ('Computational complexity of recursive sequences'. Proc. Fifth Annual Symposium of Switching Circuit Theory and Logical Design (Oct. 1964) p.82-90) by a double-tape or double-head single-tape Turing machine and it is n to the 4th power-recognizable by a single-head single-tape Turing machine. If we use a random-access memory whose size is proportional to n cubed, the computing time required for syntaxanalysis is upperbounded by C(1)n cubed + C(2)n squared N, where N denotes the number of nonequivalent valid derivation sequences for a given input sequence and C(i)'s are constants independent of input sequences. If we use a tape of length C(3)n cubed and one of length C(4)n squared as working memories, the computing time for syntax-analysis is upperbounded by C(5)n cubed (1 + N). The size of required memory can be reduced to the order of n squared, but the computing time rises to the order of n to the 4th power. (Author)"
            },
            "slug": "An-Efficient-Recognition-and-Syntax-Analysis-for-Kasami",
            "title": {
                "fragments": [],
                "text": "An Efficient Recognition and Syntax-Analysis Algorithm for Context-Free Languages"
            },
            "tldr": {
                "abstractSimilarityScore": 41,
                "text": "It is shown in this paper that a context-free language is n cubed-recognizable in the sense of Hartmanis and Stearns and it is n to the 4th power- Recognizable by a single-head single-tape Turing machine."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1717349"
                        ],
                        "name": "D. Knuth",
                        "slug": "D.-Knuth",
                        "structuredName": {
                            "firstName": "Donald",
                            "lastName": "Knuth",
                            "middleNames": [
                                "Ervin"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Knuth"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                },
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 14648496,
            "fieldsOfStudy": [
                "Computer Science",
                "Linguistics"
            ],
            "id": "fc230d6b4e6d275bff21b64dd0f457f07a92055f",
            "isKey": false,
            "numCitedBy": 834,
            "numCiting": 19,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "On-the-Translation-of-Languages-from-Left-to-Right-Knuth",
            "title": {
                "fragments": [],
                "text": "On the Translation of Languages from Left to Right"
            },
            "venue": {
                "fragments": [],
                "text": "Inf. Control."
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145002066"
                        ],
                        "name": "D. Younger",
                        "slug": "D.-Younger",
                        "structuredName": {
                            "firstName": "Daniel",
                            "lastName": "Younger",
                            "middleNames": [
                                "H."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Younger"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 39351795,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "e3411fd474131205af08d8ae52bc3d84de641866",
            "isKey": false,
            "numCitedBy": 23,
            "numCiting": 4,
            "paperAbstract": {
                "fragments": [],
                "text": "Three problems in language processing are the recognition of strings that are sentences of a given language, the parsing of sentences according to a given grammar, and the syntax-directed translation of sentences in one language to those in another. Limiting our attention to context-free languages, we consider first the simplest of these problems--recognition. A procedure is given whereby for an arbitrary string of length n and a specification of a context-free grammar, the string is recognized as generated by that grammar or not; the time, i.e. number of steps, required by this algorithm is proportional to n3. For a linear or metalinear grammar, this procedure is simplified to yield recognition in time Kn2. The algorithm for recognition is then extended to procedures for parsing and syntax-directed translation."
            },
            "slug": "Context-Free-Language-Processing-in-Time-n^3-Younger",
            "title": {
                "fragments": [],
                "text": "Context-Free Language Processing in Time n^3"
            },
            "tldr": {
                "abstractSimilarityScore": 47,
                "text": "The algorithm for recognition is extended to procedures for parsing and syntax-directed translation of sentences in one language to those in another, and to context-free languages."
            },
            "venue": {
                "fragments": [],
                "text": "SWAT"
            },
            "year": 1966
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2612754"
                        ],
                        "name": "T. Kasami",
                        "slug": "T.-Kasami",
                        "structuredName": {
                            "firstName": "Tadao",
                            "lastName": "Kasami",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Kasami"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2234097"
                        ],
                        "name": "K. Torii",
                        "slug": "K.-Torii",
                        "structuredName": {
                            "firstName": "Koji",
                            "lastName": "Torii",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "K. Torii"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "His algorithm [7] is actually described as an algorithm for unambiguous grammars, bu t it can easily be extended to a general algorithm."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                },
                {
                    "context": {
                        "fragments": [],
                        "text": "Kasaini [7] has also obtained independently the result for unambiguous grammars, but his algorithm (which is a modification of Cocke's) has the disadvantage tha t i t requires the g rammar in normal form."
                    },
                    "intents": [
                        {
                            "id": "result"
                        }
                    ]
                }
            ],
            "corpusId": 11619726,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "682f9da9648b6fa93de0a7d01ccd838f28324a48",
            "isKey": false,
            "numCitedBy": 40,
            "numCiting": 17,
            "paperAbstract": {
                "fragments": [],
                "text": "A syntax-analys is Mgorithm is presented for a language generated by an unambiguous context-free grammar in a number of e lementary operat ions proportional to n = log n, where n is the length of a given string, using a random access memory. The amount of memory required for the a lgor i thm is proport ional to n 2 log n. The proposed algori thm is a modified version of Cocke's a lgor i thm and utilizes a eertair, proper ty of unambiguous normal grammars ."
            },
            "slug": "A-Syntax-Analysis-Procedure-for-Unambiguous-Kasami-Torii",
            "title": {
                "fragments": [],
                "text": "A Syntax-Analysis Procedure for Unambiguous Context-Free Grammars"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "A syntax-analys is Mgorithm is presented for a language generated by an unambiguous context-free grammar in a number of e lementary operat ions proportional to n = log n, where n is the length of a given string, using a random access memory."
            },
            "venue": {
                "fragments": [],
                "text": "J. ACM"
            },
            "year": 1969
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2612754"
                        ],
                        "name": "T. Kasami",
                        "slug": "T.-Kasami",
                        "structuredName": {
                            "firstName": "Tadao",
                            "lastName": "Kasami",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "T. Kasami"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "UNPAYWALL"
                }
            ],
            "citationContexts": [],
            "corpusId": 29767267,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "dd81463f3559187a1e860f8c1110380d075c11e9",
            "isKey": false,
            "numCitedBy": 25,
            "numCiting": 8,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "A-Note-on-Computing-Time-for-Recognition-of-by-Kasami",
            "title": {
                "fragments": [],
                "text": "A Note on Computing Time for Recognition of Languages Generated by Linear Grammars"
            },
            "venue": {
                "fragments": [],
                "text": "Inf. Control."
            },
            "year": 1967
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "3197827"
                        ],
                        "name": "E. Irons",
                        "slug": "E.-Irons",
                        "structuredName": {
                            "firstName": "Edgar",
                            "lastName": "Irons",
                            "middleNames": [
                                "T."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "E. Irons"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 15645135,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "caa65e007e44346d790ae888e30b2e02e4b59502",
            "isKey": false,
            "numCitedBy": 142,
            "numCiting": 4,
            "paperAbstract": {
                "fragments": [],
                "text": "i Th(~ disposition of lhe parentheses is computed by numberbig the m ull;iplication signs consecutively. If n is divisible /)y 2 k but, not; by 2 kw, then (;he nt,h multiplication sign is 1-),'ecedcd by k right pat'entheses, and followed by k left parentheses. If the lasi, multiplication sign is numbered m, then the entire expression is surrounded by k parentheses, whore 2 k ~\" Ill. The extension go negative integral expohen Ls is obvious. The rewritLen expressions are compiled in the normal manner, the equivalent subexpressions being a.tttotnat ically recognized. At~ operational translator would require additional tests at sew;ml points to detect s.ymbol strings not allowed by lhc language. Such tests are omitted here for the sake of clariLy in {,he flow charts. A C K N O W L E D G M E N T The author is indebted to Arthur Anger, presently at Harvard University, for many helpful criticisms and suggestions, and for coding the algorithm on the UNiwxc 1105. REFERENCES 1. ERs[~ov: I)roqrammi~q Programme for the BESM Computer. Pergamon, 1959. 2. WI,ZSG'r~N, J. It. From formulas to computer oriented bmguage. Comm. ACM 2 (Mar. 1959), 6-8. 3. Am)i~:N, B., and (]m~m~M, R. On GAT and the construction of trtmslators. Comm. ACM 2 (July 1959), 24-26. 4. KANNER, H. An algebraic translator. Comm. ACM 2 (Oct. 1959), 19-22, 5. SAMELSO~', K., and BA*mR, F. L. Sequential formula translation. Comm. ACM 3 (Feb. 1960), 76-83."
            },
            "slug": "A-syntax-directed-compiler-for-ALGOL-60-Irons",
            "title": {
                "fragments": [],
                "text": "A syntax directed compiler for ALGOL 60"
            },
            "tldr": {
                "abstractSimilarityScore": 37,
                "text": "The author's algorithm is indebted to Arthur Anger, presently at Harvard University, for many helpful criticisms and suggestions, and for coding the algorithm on the UNiwxc 1105."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1961
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1742391"
                        ],
                        "name": "J. Ullman",
                        "slug": "J.-Ullman",
                        "structuredName": {
                            "firstName": "Jeffrey",
                            "lastName": "Ullman",
                            "middleNames": [
                                "D."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Ullman"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 60391260,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "6e80852ba176c76055273c8b87d258e45451cebb",
            "isKey": false,
            "numCitedBy": 1,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "Abstract : The report considers two classes of pushdown automata (pda), and the languages accepted by them. These pda accept their languages rapidly because they reread the input word a limited number of times, hence, such languages are particularly useful as programming languages. The first class, strong bounded backtrack pda, read input words from left to right, and jump from right to left (backtrack). The languages accepted by such automata will be shown to be equivalent to the finite unions of deterministic languages. The second class, weak bounded backtrack an arbitrary number of times. The device reads a word from left to right, simulating the action of the pda. Every time the pda reaches a total configuration (state and pushdown tape) in which it is possible to read another input letter, that configuration is stored. If no move at all is possible in a given configuration, it is erased from storage. Thus one can accept the language with no backtrack without having to keep track of an arbitrary number of possible configurations of the pda. Several results will be shown about each of these classes of pda, including operations that preserve the properties. While these properties are not preserved by all gsm mappings, it will be shown that information lossless gsm's preserve the weak bounded backtrack property, and information lossless gsm's of finite order preserve the strong bounded backtrack property."
            },
            "slug": "PUSHDOWN-AUTOMATA-WITH-BOUNDED-BACKTRACK-Ullman",
            "title": {
                "fragments": [],
                "text": "PUSHDOWN AUTOMATA WITH BOUNDED BACKTRACK"
            },
            "tldr": {
                "abstractSimilarityScore": 38,
                "text": "It will be shown that information lossless gsm's preserve the weak bounded backtrack property, and information lossed gsms of finite order preserve the strong bounded back track property."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34903197"
                        ],
                        "name": "R. W. Floyd",
                        "slug": "R.-W.-Floyd",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Floyd",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. W. Floyd"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [],
                        "text": "Note also that, although it did not develop this way, our algorithm is in effect a top-down parser [ 3 ] in which we carry along all possible parses simultaneously in such a way that we can often combine like subparses."
                    },
                    "intents": [
                        {
                            "id": "methodology"
                        }
                    ]
                }
            ],
            "corpusId": 2924740,
            "fieldsOfStudy": [
                "Computer Science",
                "Linguistics"
            ],
            "id": "207cf5b01607914dea5dc61543a5b9b09a72ec65",
            "isKey": false,
            "numCitedBy": 87,
            "numCiting": 50,
            "paperAbstract": {
                "fragments": [],
                "text": "The syntactic rules for many programming languages have been expressed by formal grammars, generally variants of phrase-structure grammars. The syntactic analysis essential to translation of programming languages can be done entirely mechanically for such languages. Major problems remain in rendering analyzers efficient in use of space and time and in finding fully satisfactory formal grammars for present and future programming languages."
            },
            "slug": "The-Syntax-of-Programming-Languages-A-Survey-Floyd",
            "title": {
                "fragments": [],
                "text": "The Syntax of Programming Languages-A Survey"
            },
            "tldr": {
                "abstractSimilarityScore": 68,
                "text": "The syntactic rules for many programming languages have been expressed by formal grammars, generally variants of phrase-structure grammar, but major problems remain in rendering analyzers efficient in use of space and time and in finding fully satisfactory formal Grammars for present and future programming languages."
            },
            "venue": {
                "fragments": [],
                "text": "IEEE Trans. Electron. Comput."
            },
            "year": 1964
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "34903197"
                        ],
                        "name": "R. W. Floyd",
                        "slug": "R.-W.-Floyd",
                        "structuredName": {
                            "firstName": "Robert",
                            "lastName": "Floyd",
                            "middleNames": [
                                "W."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. W. Floyd"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 19785090,
            "fieldsOfStudy": [
                "Computer Science",
                "Linguistics"
            ],
            "id": "e2e5e9c36fac979c67be566cc57559a1140c28b5",
            "isKey": false,
            "numCitedBy": 246,
            "numCiting": 8,
            "paperAbstract": {
                "fragments": [],
                "text": "libstmct. Three increasingly restricted types of formal grammar are phrase structure grammars, operator grammars and precedence grammars. Precedence grammars form models of mathematical and algorithmic languages which may Le analyzed mechanically by a simple procedure based on a matrix representation of a relation between character pairs."
            },
            "slug": "Syntactic-Analysis-and-Operator-Precedence-Floyd",
            "title": {
                "fragments": [],
                "text": "Syntactic Analysis and Operator Precedence"
            },
            "tldr": {
                "abstractSimilarityScore": 90,
                "text": "Three increasingly restricted types of formal grammar are phrase structure Grammars, operator grammars and precedence grammar, which form models of mathematical and algorithmic languages which may be analyzed mechanically by a simple procedure based on a matrix representation of a relation between character pairs."
            },
            "venue": {
                "fragments": [],
                "text": "JACM"
            },
            "year": 1963
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "147812033"
                        ],
                        "name": "P. M. Lewis",
                        "slug": "P.-M.-Lewis",
                        "structuredName": {
                            "firstName": "Philip",
                            "lastName": "Lewis",
                            "middleNames": [
                                "M."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "P. M. Lewis"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2520473"
                        ],
                        "name": "R. Stearns",
                        "slug": "R.-Stearns",
                        "structuredName": {
                            "firstName": "Richard",
                            "lastName": "Stearns",
                            "middleNames": [
                                "Edwin"
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. Stearns"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1747181"
                        ],
                        "name": "J. Hartmanis",
                        "slug": "J.-Hartmanis",
                        "structuredName": {
                            "firstName": "Juris",
                            "lastName": "Hartmanis",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Hartmanis"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 21196496,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "242d7edee503e27a7236a4c7737c314712c3fbdd",
            "isKey": false,
            "numCitedBy": 209,
            "numCiting": 4,
            "paperAbstract": {
                "fragments": [],
                "text": "This paper investigates the computational complexity of binary sequences as measured by the rapidity of their generation by multitape Turing machines. A \"translational\" method which escapes some of the limitations of earlier approaches leads to a refinement of the established hierarchy. The previous complexity classes are shown to possess certain translational properties. An related hierarchy of complexity classes of monotonic functions is examined"
            },
            "slug": "Memory-bounds-for-recognition-of-context-free-and-Lewis-Stearns",
            "title": {
                "fragments": [],
                "text": "Memory bounds for recognition of context-free and context-sensitive languages"
            },
            "tldr": {
                "abstractSimilarityScore": 91,
                "text": "The computational complexity of binary sequences as measured by the rapidity of their generation by multitape Turing machines is investigated and a \"translational\" method which escapes some of the limitations of earlier approaches leads to a refinement of the established hierarchy."
            },
            "venue": {
                "fragments": [],
                "text": "SWCT"
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "143805236"
                        ],
                        "name": "J. McCarthy",
                        "slug": "J.-McCarthy",
                        "structuredName": {
                            "firstName": "John",
                            "lastName": "McCarthy",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. McCarthy"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 60664055,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "83f054294ba2726d02aa03e471da773c3383b146",
            "isKey": false,
            "numCitedBy": 654,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": "The LISP language is designed primarily for symbolic data processing used for symbolic calculations in differential and integral calculus, electrical circuit theory, mathematical logic, game playing, and other fields of artificial intelligence.The manual describes LISP, a formal mathematical language. LISP differs from most programming languages in three important ways. The first way is in the nature of the data. In the LISP language, all data are in the form of symbolic expressions usually referred to as S-expressions, of indefinite length, and which have a branching tree-type of structure, so that significant subexpressions can be readily isolated. In the LISP system, the bulk of the available memory is used for storing S-expressions in the form of list structures. The second distinction is that the LISP language is the source language itself which specifies in what way the S-expressions are to be processed. Third, LISP can interpret and execute programs written in the form of S-expressions. Thus, like machine language, and unlike most other high level languages, it can be used to generate programs for further executions."
            },
            "slug": "LISP-1.5-Programmer's-Manual-McCarthy",
            "title": {
                "fragments": [],
                "text": "LISP 1.5 Programmer's Manual"
            },
            "tldr": {
                "abstractSimilarityScore": 100,
                "text": "The LISP language is designed primarily for symbolic data processing used for symbolic calculations in differential and integral calculus, electrical circuit theory, mathematical logic, game playing, and other fields of artificial intelligence."
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1962
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2199747"
                        ],
                        "name": "N. Wirth",
                        "slug": "N.-Wirth",
                        "structuredName": {
                            "firstName": "Niklaus",
                            "lastName": "Wirth",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "N. Wirth"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "37910788"
                        ],
                        "name": "Helmut Weber",
                        "slug": "Helmut-Weber",
                        "structuredName": {
                            "firstName": "Helmut",
                            "lastName": "Weber",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Helmut Weber"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 16938020,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "772d4504ac460f60d7ba9a315ee8b6107e4a886f",
            "isKey": false,
            "numCitedBy": 203,
            "numCiting": 24,
            "paperAbstract": {
                "fragments": [],
                "text": "In this section the algorithmic language EULER is described first informally and then formally by its syntax and semantics. An attempt has been made to generalize and extend some of the concepts of ALGOL, thus creating a language which is simpler and yet more flexible than ALGOL 60. A second objective in developing this language was to show that a useful programming language which can be processed with reasonable efficiency can be defined in rigorous formality."
            },
            "slug": "EULER:-a-generalization-of-ALGOL-and-it-formal-Part-Wirth-Weber",
            "title": {
                "fragments": [],
                "text": "EULER: a generalization of ALGOL and it formal definition: Part 1"
            },
            "tldr": {
                "abstractSimilarityScore": 77,
                "text": "In this section the algorithmic language EULER is described first informally and then formally by its syntax and semantics, creating a language which is simpler and yet more flexible than ALGOL 60."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1966
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2165973"
                        ],
                        "name": "J. Feldman",
                        "slug": "J.-Feldman",
                        "structuredName": {
                            "firstName": "J.",
                            "lastName": "Feldman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Feldman"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 6755111,
            "fieldsOfStudy": [
                "Computer Science",
                "Linguistics"
            ],
            "id": "250869e74ed6c42d0b04d2a1dac1b462da0847c2",
            "isKey": false,
            "numCitedBy": 76,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "e l y g e r m a n dissemine puters. t h e publics well t r y) adopt net r to be o:. f o r m e d i n t c o m p o s i t i o : b e u s e d t,. t y p e s e t t i n g r o c e s s c o u l i h a s a u t h o ~ a t e ~ t i d e n t in d r e t r i e v e [ t a n s w e r t(b e f o r e t h e s e f a s h i o n , i: tndle m a n n-T h e follow. A semantic metalanguage has been developed for representing the meanings of statements in a large class of computer languages. This metalanguage has been the basis for construction of an efficient, functioning compiler-compiler. An informal discussion of the metalanguage based on the example of a complete translator for a small language is presented. One of the most significant developments in the study of computer languages has been the formalization of syntax. Besides greatly improving communications between people, formalized syntax has led to new results in the theory and practice of programming. As early as 1960, Irons [7] was able to construct a compiler whose syntax phase was independent of the source language being trans-late& This work and that of other early contributors such as Brooker and 5Iorris [1] led to speculation that the entire compilation process could be automated. The problem was to develop a single program which could act as a translator for a large class of languages differing from each other in substantial ways. To solve this so-called compiler-compiler problem, one must find appropriate formalizations of the syntax and semantics of computer languages. The formalization of semantics for some language, L, will involve representing the meanings of statements in L in terms of an appropriate mete-language. The meanings of statements in the mete-language are assumed to be known (primitive). If L is a computer language, the semantics of L nmst involve a description of its translator. One example of a semantic mete-language is the order code of a computer. An order code or assembly language can certainly describe any translation \u2026"
            },
            "slug": "A-formal-semantics-for-computer-languages-and-its-a-Feldman",
            "title": {
                "fragments": [],
                "text": "A formal semantics for computer languages and its application in a compiler-compiler"
            },
            "tldr": {
                "abstractSimilarityScore": 44,
                "text": "An informal discussion of the metalanguage based on the example of a complete translator for a small language is presented and a semantic metalanguage has been developed for representing the meanings of statements in a large class of computer languages."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1966
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "31707060"
                        ],
                        "name": "Emil L. Post",
                        "slug": "Emil-L.-Post",
                        "structuredName": {
                            "firstName": "Emil",
                            "lastName": "Post",
                            "middleNames": [
                                "L."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "Emil L. Post"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 30320278,
            "fieldsOfStudy": [
                "Mathematics"
            ],
            "id": "27f69f08acf545da5f19eff7f739db6ca7082642",
            "isKey": false,
            "numCitedBy": 428,
            "numCiting": 9,
            "paperAbstract": {
                "fragments": [],
                "text": "Alonzo Church suggested to the writer that a certain problem of Thue [6]' might be proved unsolvable by the methods of [5]. We proceed to prove the problem recursively unsolvable, that is, unsolvable in the sense of Church [1], but by a method meeting the special needs of the problem. Thue's (general) problem is the following. Given a finite set of symbols al, a2, ... , a, , we consider arbitrary strings (Zeichenreihen) on those symbols, that is, rows of symbols each of which is in the given set. Null strings are included. We further have given a finite set of pairs of corresponding strings on the ai's, (Al , B1), (A2 , B2), , I (An , B,). A string R is said to be a substring of a string S if S can be written in the form URV, that is, S consists of the letters, in order of occurrence, of some string U, followed by the letters of R, followed by the letters of some string V. Strings P and Q are then said to be similar if Q can be obtained from P by replacing a substring Ai or Bi of P by its correspondent Bi, Ai. Clearly, if P and Q are similar, Q and P are similar. Finally, P and Q are said to be equivalent if there is a finite set R1 , R2, * * *, R, of strings on a,, * * *, a, such that in the sequence of strings P, R1, R2, ... , RX Q each string except the last is similar to the following string. It is readily seen that this relation between strings on a,, * * *, a, ,is indeed an equivalence relation. Thue's problem is then the problem of determining for arbitrarily given strings A, B on al, * * *, a;, whether, or no, A and B are equivalent. This problem, at least for the writer, is more readily placed if it is restated in terms of a special form of the canonical systems of [3]. In that notation, strings C and D are similar if D can be obtained from C by applying to C one of the following operations:"
            },
            "slug": "Recursive-Unsolvability-of-a-Problem-of-Thue-Post",
            "title": {
                "fragments": [],
                "text": "Recursive Unsolvability of a Problem of Thue"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "Thue's problem is the problem of determining for arbitrarily given strings A, B on al, whether, or no, A and B are equivalent, and this problem is more readily placed if it is restated in terms of a special form of the canonical systems of [3]."
            },
            "venue": {
                "fragments": [],
                "text": "J. Symb. Log."
            },
            "year": 1947
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2212074"
                        ],
                        "name": "B. Galler",
                        "slug": "B.-Galler",
                        "structuredName": {
                            "firstName": "Bernard",
                            "lastName": "Galler",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "B. Galler"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "1790022"
                        ],
                        "name": "A. Perlis",
                        "slug": "A.-Perlis",
                        "structuredName": {
                            "firstName": "Alan",
                            "lastName": "Perlis",
                            "middleNames": [
                                "J."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "A. Perlis"
                    }
                ]
            ],
            "badges": [
                {
                    "id": "OPEN_ACCESS"
                }
            ],
            "citationContexts": [],
            "corpusId": 6205979,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "a032002e09c9d6c2b32c225b2f9139530a48614f",
            "isKey": false,
            "numCitedBy": 56,
            "numCiting": 6,
            "paperAbstract": {
                "fragments": [],
                "text": "An extension to ALGOL is proposed for adding new data types and operators to the language. Definitions may occur in any block heading and terminate with the block. They are an integral part of the program and are not fixed in the language. Even the behavior of existing operators may be redefined. The processing of text containing defined contexts fealures a \"replacement rule\" that eliminates unnecessary iterations and temporary storage. Examples of definition sets are given for real and complex malrices, complex r~umbers, file processing, and list manipulation."
            },
            "slug": "A-proposal-for-definitions-in-ALGOL-Galler-Perlis",
            "title": {
                "fragments": [],
                "text": "A proposal for definitions in ALGOL"
            },
            "tldr": {
                "abstractSimilarityScore": 65,
                "text": "An extension to ALGOL is proposed for adding new data types and operators to the language, and examples of definition sets are given for real and complex malrices, complex r~umbers, file processing, and list manipulation."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1967
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2784211"
                        ],
                        "name": "S. Kuno",
                        "slug": "S.-Kuno",
                        "structuredName": {
                            "firstName": "Susumu",
                            "lastName": "Kuno",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "S. Kuno"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 16669681,
            "fieldsOfStudy": [
                "Engineering"
            ],
            "id": "f1a2c7757d110cc9e2b114de852f629dbaad4318",
            "isKey": false,
            "numCitedBy": 71,
            "numCiting": 14,
            "paperAbstract": {
                "fragments": [],
                "text": "Some of the characteristic features of a predictive analyzer, a system of syntactic analysis now operational at Harvard on an IBM 7094, are delineated. The advantages and disadvantages of the system are discussed in comparison to those of an immediate constituent analyzer, developed at the RAND Corporation with Robinson's English grammar. In addition, a new technique is described for repetitive path elimination for a predictive analyzer, which can now claim efficiency both in processing time and core storage requirement."
            },
            "slug": "The-predictive-analyzer-and-a-path-elimination-Kuno",
            "title": {
                "fragments": [],
                "text": "The predictive analyzer and a path elimination technique"
            },
            "tldr": {
                "abstractSimilarityScore": 43,
                "text": "A new technique is described for repetitive path elimination for a predictive analyzer, which can now claim efficiency both in processing time and core storage requirement."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1965
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2165973"
                        ],
                        "name": "J. Feldman",
                        "slug": "J.-Feldman",
                        "structuredName": {
                            "firstName": "J.",
                            "lastName": "Feldman",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Feldman"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2616817"
                        ],
                        "name": "D. Gries",
                        "slug": "D.-Gries",
                        "structuredName": {
                            "firstName": "David",
                            "lastName": "Gries",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Gries"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 18314808,
            "fieldsOfStudy": [
                "Computer Science",
                "Linguistics"
            ],
            "id": "466a0abafc20c385397f2aaac14a7ba184995455",
            "isKey": false,
            "numCitedBy": 176,
            "numCiting": 230,
            "paperAbstract": {
                "fragments": [],
                "text": "A critical review of recent efforts to automate the writing of translators of programming languages is presented. The formal study of syntax and its application to translator writing are discussed in Section II. Various approaches to automating the postsyntactic (semantic) aspects of translator writing are discussed in Section III, and several related topics in Section IV."
            },
            "slug": "Translator-writing-systems-Feldman-Gries",
            "title": {
                "fragments": [],
                "text": "Translator writing systems"
            },
            "tldr": {
                "abstractSimilarityScore": 79,
                "text": "A critical review of recent efforts to automate the writing of translators of programming languages is presented and various approaches to automating the postsyntactic aspects of translator writing are discussed."
            },
            "venue": {
                "fragments": [],
                "text": "CACM"
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "145223398"
                        ],
                        "name": "W. Martin",
                        "slug": "W.-Martin",
                        "structuredName": {
                            "firstName": "William",
                            "lastName": "Martin",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "W. Martin"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 124053307,
            "fieldsOfStudy": [
                "History"
            ],
            "id": "9306f46f202b810510072cba95ef191a3ed26276",
            "isKey": false,
            "numCitedBy": 2,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "A-Left-to-Right-then-Right-to-Left-Parsing-Martin",
            "title": {
                "fragments": [],
                "text": "A Left to Right then Right to Left Parsing Algorithm"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1968
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "66134977"
                        ],
                        "name": "J. Wholey",
                        "slug": "J.-Wholey",
                        "structuredName": {
                            "firstName": "Joseph",
                            "lastName": "Wholey",
                            "middleNames": [
                                "S."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "J. Wholey"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 61533244,
            "fieldsOfStudy": [
                "Computer Science"
            ],
            "id": "5ab427882fdd9a7bd4f7ed7fdf0ec288744cecbc",
            "isKey": false,
            "numCitedBy": 33,
            "numCiting": 1,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "IEEE-Transactions-on-Electronic-Computers-Wholey",
            "title": {
                "fragments": [],
                "text": "IEEE Transactions on Electronic Computers"
            },
            "venue": {
                "fragments": [],
                "text": ""
            },
            "year": 1963
        },
        {
            "authors": [
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2046970"
                        ],
                        "name": "R. A. Brooker",
                        "slug": "R.-A.-Brooker",
                        "structuredName": {
                            "firstName": "R.",
                            "lastName": "Brooker",
                            "middleNames": [
                                "A."
                            ]
                        }
                    },
                    {
                        "fragments": [],
                        "text": "R. A. Brooker"
                    }
                ],
                [
                    {
                        "bitmap$0": false,
                        "ids": [
                            "2064722742"
                        ],
                        "name": "D. Morris",
                        "slug": "D.-Morris",
                        "structuredName": {
                            "firstName": "Derrick",
                            "lastName": "Morris",
                            "middleNames": []
                        }
                    },
                    {
                        "fragments": [],
                        "text": "D. Morris"
                    }
                ]
            ],
            "badges": [],
            "citationContexts": [],
            "corpusId": 16889480,
            "fieldsOfStudy": [
                "Linguistics"
            ],
            "id": "63b4f88c033e5bc527d1a4e092d2231cc37d7abb",
            "isKey": false,
            "numCitedBy": 57,
            "numCiting": 13,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "A-General-Translation-Program-for-Phrase-Structure-Brooker-Morris",
            "title": {
                "fragments": [],
                "text": "A General Translation Program for Phrase Structure Languages"
            },
            "venue": {
                "fragments": [],
                "text": "JACM"
            },
            "year": 1962
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Recognition and parsing of context free languages in time n3 Information and Control I0"
            },
            "venue": {
                "fragments": [],
                "text": "Recognition and parsing of context free languages in time n3 Information and Control I0"
            },
            "year": 1967
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "AA -ix 3 82 A~x"
            },
            "venue": {
                "fragments": [],
                "text": "AA -ix 3 82 A~x"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A preliminary sketch of a polymorphic programming language"
            },
            "venue": {
                "fragments": [],
                "text": "A preliminary sketch of a polymorphic programming language"
            },
            "year": 1968
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Automata Theory of Institute of Electronic Communication Enqineers"
            },
            "venue": {
                "fragments": [],
                "text": "Automata Theory of Institute of Electronic Communication Enqineers"
            },
            "year": 1967
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Revised Algol report. Comm. ACM"
            },
            "venue": {
                "fragments": [],
                "text": "Revised Algol report. Comm. ACM"
            },
            "year": 1963
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A practical approach to the construction of deterministic language processors"
            },
            "venue": {
                "fragments": [],
                "text": "RCA Laboratories"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A-+.x -ix 1 A-+A.A -ix 0"
            },
            "venue": {
                "fragments": [],
                "text": "A-+.x -ix 1 A-+A.A -ix 0"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [
                {
                    "context": {
                        "fragments": [
                            {
                                "end": 84,
                                "start": 81
                            }
                        ],
                        "text": "The bound is no bet ter than tha t obtained by Younger [4] for Coeke's algorithm [5], bu t our algorithm is bet ter for two reasons."
                    },
                    "intents": [
                        {
                            "id": "background"
                        }
                    ]
                }
            ],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Automatic language-data processing"
            },
            "venue": {
                "fragments": [],
                "text": "Computer Applications in the Behavioral Sciences, H. Borko"
            },
            "year": 1962
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A -ix 0 A--+A.A -ix 3"
            },
            "venue": {
                "fragments": [],
                "text": "A -ix 0 A--+A.A -ix 3"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A -~x 1 4, ~h.-i -i 0 A--~A.A -ix 0 A"
            },
            "venue": {
                "fragments": [],
                "text": "A -~x 1 4, ~h.-i -i 0 A--~A.A -ix 0 A"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Journal of Symbolic Loqic"
            },
            "venue": {
                "fragments": [],
                "text": "Journal of Symbolic Loqic"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "AA -ix 0 A-+AA. -ix 02 A-+A.A qx 2 81 Aux. -ix 0 A--~A.A -ix 1 4, ~A.-I -i o A--~A.A -ix 0 4"
            },
            "venue": {
                "fragments": [],
                "text": "AA -ix 0 A-+AA. -ix 02 A-+A.A qx 2 81 Aux. -ix 0 A--~A.A -ix 1 4, ~A.-I -i o A--~A.A -ix 0 4"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "AA -ix 4 REFERENCES"
            },
            "venue": {
                "fragments": [],
                "text": "AA -ix 4 REFERENCES"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "An upper bound on the time required for parsing by predictive analysis with abortive path elimination"
            },
            "venue": {
                "fragments": [],
                "text": "Fourth Annual Meetinq of the Association for Machine Translation and Computational Linquistics,"
            },
            "year": 1966
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "On formal properties of simple phrase structure grammars"
            },
            "venue": {
                "fragments": [],
                "text": "Lanquaqe @BULLET and Information, Y. Bar-Hillel"
            },
            "year": 1964
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Multiple path syntactic analyzer. Information Processing 62"
            },
            "venue": {
                "fragments": [],
                "text": "Multiple path syntactic analyzer. Information Processing 62"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "AA -ix 1 A--~"
            },
            "venue": {
                "fragments": [],
                "text": "AA -ix 1 A--~"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Some results on syntax analysis of context free languages"
            },
            "venue": {
                "fragments": [],
                "text": "Some results on syntax analysis of context free languages"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "A -ix 1 4,---~A.-I -i 0 A-+AA. -ix i ~ A--+AA"
            },
            "venue": {
                "fragments": [],
                "text": "A -ix 1 4,---~A.-I -i 0 A-+AA. -ix i ~ A--+AA"
            }
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Bounded rontext syntax analysis"
            },
            "venue": {
                "fragments": [],
                "text": "Comm. ACM"
            },
            "year": 1964
        },
        {
            "authors": [],
            "badges": [],
            "citationContexts": [],
            "fieldsOfStudy": [],
            "isKey": false,
            "numCitedBy": 0,
            "numCiting": 0,
            "paperAbstract": {
                "fragments": [],
                "text": ""
            },
            "slug": "+",
            "title": {
                "fragments": [],
                "text": "Automatic language-data processing"
            },
            "venue": {
                "fragments": [],
                "text": "Computer Applications in the Behavioral Sciences, H. Borko"
            }
        }
    ],
    "meta_info": {
        "citationIntent": "all",
        "citationIntentCount": {
            "background": 2,
            "methodology": 2,
            "result": 1
        },
        "citationType": "citedPapers",
        "pageNumber": 1,
        "requestedPageSize": 10,
        "sort": "relevance",
        "totalCitations": 44,
        "totalPages": 5
    },
    "page_url": "https://www.semanticscholar.org/paper/An-efficient-context-free-parsing-algorithm-Earley/62ea2ef8b7d98cf3a3b912a62a7a42ee82650e6b?sort=total-citations"
}