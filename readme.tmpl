# paper-repo

Paper pdf, meta data & crawler scripts

generated by scripts. do NOT modify this file

## 使用说明

添加新 pdf 时，手动把 pdf 文件拖入到 repo 的根目录。起个 unique & 易读的名字。最好就是 paper title、核心模型的名字缩写等。

```bash
# 新 pdf 由 dvc 管理
# 功能包括: dvc add, gen meta, & check dup
# 同时也会更新 README 中的 pdf list
# 如果发现重复的 pdf 文件，需要手动删除
make dvc-add
DEFAULT_TAG=OCR make dvc-add

# 生成 notes 文件. 输出目录:
# https://github.com/JackonYang/paper-reading/tree/master/01-zettelkasten/02-References
make gen-notes-md

# review Readme.md 的改动 & git commit 后运行

# push to cloud
# 推到阿里云 OSS 备份 pdf 原文
# 功能包括 flake8 check, dvc push, git push
make push-all

# 更新 readme
# 手动改过 meta data，或 readme 模版以后执行
make gen-readme

# 删除本地的 pvc & 对应的 pdf 文件
# https://dvc.org/doc/command-reference/remove
dvc remove *.dvc --outs
# 待验证。删 remove cloud 里的用不上的
# remote 存储不爆炸，就不要搞这个命令
# https://dvc.org/doc/command-reference/gc
dvc gc --workspace -c
```

更多用法见：[详细使用说明](docs/how-to-use.md)

workflow 设计: [paper repo - workflow desig](docs/paper-repo-workflow-design.md)

## PDF List

total count: {{ meta_list|length }}

| Paper Title | links | file size |
| --- | --- | --- |
{%- for meta in meta_list %}
| {{ meta.title }} | [info]({{ meta.meta_relpath|safe }}), [pdf(local)]({{ meta.pdf_relpath|safe }}) | {{ meta.filesize_readable }} |
{%- endfor %}
